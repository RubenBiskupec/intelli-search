Computers in Industry 123 (2020) 103297

 

Contents lists available at ScienceDirect

COMPUTERS IN -

  

Computers in Industry

 

Ls

ass

 

LSEVIER journal homepage: www.elsevier.com/locate/compind are tet!

 

Using business process models for the specification of manufacturing

Check for

operations updates

 

Jonnro Erasmus**, Irene Vanderfeesten”, Konstantinos Traganos°, Paul Grefen®

4 Findhoven University of Technology, De Zaale, 5600MB, Eindhoven, the Netherlands
b Open Universiteit, Valkenburgerweg 177, 6419AT, Heerlen, the Netherlands

 

ARTICLE INFO ABSTRACT

 

 

Article history:

Received 11 November 2019
Received in revised form 19 July 2020
Accepted 22 July 2020

Business process management (BPM) is often employed as a driver of integration, by articulating busi-
ness processes that cross the boundaries of individual business functions. Business process modelling
as part of BPM has shown its potential in administrative environments, such as banking and insurance
organizations. However, business process modelling remains unproven for all the processes encountered
in manufacturing enterprises, including the physical operations processes that transform input materi-
als into the required product. These processes have physical characteristics that make them essentially
different from administrative processes with a highly digital nature, like limited physical buffers for inter-
mediate products and transportation times between activities. In this paper, we present an approach to
use business process models for the specification of these physical operations processes. Our approach is
based on a catalogue of common process fragments that are adapted to the physical nature of manufac-
turing. These process fragments serve as reusable building blocks for the specification of manufacturing
processes. We use the industry standard Business Process Model and Notation (BPMN) to represent both
fragments and processes. We demonstrate the use of our catalogue of fragments by modelling and enact-
ing the real-world processes of ten manufacturing organizations. The results show strong support for
the use of business process models for both representation and enactment of manufacturing processes.
This work closes part of the gap between the support for administrative processes and physical industrial
processes, thus contributing to the advent of the smart manufacturing concept in the context of Industry

4.0.
© 2020 The Authors. Published by Elsevier B.V. This is an open access article under the CC BY license
(http://creativecommons.org/licenses/by/4.0/).

 

Keywords:

Manufacturing operations

Business process modelling
Cross-functional process management

 

1. Introduction management is extensively studied, but these studies focus on the

alignment of planning to achieve maximum production throughput

The challenge and appeal of improved integration between
manufacturing operations and business management functions
are well understood (Hausman et al., 2002; Tang, 2010). The
techniques, skills and information systems employed to man-
age business activities can differ significantly from those used to
manage operations, leading to deficient throughput and flexibility
(Sawhney, 2006; Tang, 2010). For example, the lean manufacturing
principles often applied in operations management are not easily
transferrable to resource or financial management. Likewise, busi-
ness process reengineering approaches for increasing the efficiency
of highly digitized administrative processes cannot be directly
mapped to physical processes on the factory floor. The performance
benefit of improved integration between business and operations

* Corresponding author.
E-mail address: j.erasmus@tue.nl (J. Erasmus).

https://doi.org/10.1016/j.compind.2020.103297

(O’Leary-Kelly and Flores, 2002; Sale et al., 2017).

Business process management (BPM) is often employed to
cross the boundaries of business functions and improve integra-
tion (Berente et al., 2009; Hanson et al., 2002; Kobayashi et al.,
2003). Improved integration can lead to higher levels of effective-
ness and efficiency, but also to a better structure of processes that
is the basis for flexibility in operations. The same need exists in
the manufacturing industry, torn between the drive for efficiency
(to be competitive) and the demand of more flexibility in pro-
cesses (to cater for customer-orientation and mass-customization).
In addition, the manufacturing industry suffers from disparate and
fragmented process management across multiple information sys-
tems (Erasmus et al., 2018). Indeed, Prades et al. (2013) make the
case for integration between enterprise resource planning systems
and manufacturing execution systems, by using Business Process
Model and Notation (BPMN) for process modelling in both infor-
mation systems. Conversely, Gerber et al. (2014) investigate how

0166-3615/© 2020 The Authors. Published by Elsevier B.V. This is an open access article under the CC BY license (http://creativecommons.org/licenses/by/4.0/).
2 J. Erasmus, I. Vanderfeesten, K. Traganos et al. / Computers in Industry 123 (2020) 103297

process models can be converted between the information systems
that support business management and operations management.
More recently, a single business process management system for
business and operations management is proposed and demon-
strated (Pauker et al., 2018).

While these studies embrace the ambition of cross-functional
process management in manufacturing, they offer little practical
guidance on the modelling of executable manufacturing processes:
they provide concepts and tools, but not the process modelling
approach. This article presents such practical guidance in the form
of a structured catalogue of process model fragments. These frag-
ments function as process building blocks that can be composed
to design executable manufacturing processes. In the context of
design science research, Gregor and Hevner (2013) refer to this
type of scientific contribution as nascent design theory: knowl-
edge as operational principles or architecture. As with all scientific
research, the purpose of design science research is to create
knowledge. The knowledge presented in this article is prescrip-
tive knowledge to help practitioners solve problems, rather than
descriptive knowledge used to explain observed phenomena.

For information systems research, Hevner et al. (2004) argues
that design science is inseparable from behavioral science. Behav-
ioral science attempts to explain phenomena related to business
needs, through the development and justification of theories. In
contrast, design science aims to meet the identified business need,
through the building and evaluation of artefacts. These artefacts are
packages of prescriptive knowledge that help practitioners con-
front problems encountered in practice. March and Smith (1995)
define the following four types of artefacts:

© Constructs: A language or framework within which problems
and solutions can be studied, analyzed and communicated.

© Models: Applied constructs that represent a real-world scenario
or phenomenon. Models are used by practitioners to aid under-
standing of problems, solutions or the relationship between
elements of a system.

© Methods: Guidance on actions to be executed in practice. The
guidance can range from textual descriptions of activities to be
performed by humans to formal, mathematical algorithms to be
executed by computers.

© Instantiations: Implementations of constructs, models or meth-
ods. Implementations enable more thorough assessment of
artefacts.

The design science research artefact presented in this article
is a catalogue of model fragments that can be used as building
blocks to design executable manufacturing operations processes.
The model fragments are created with BPMN2.0, as the de-facto
standard for business process modelling (Decker and Barros, 2008;
Takemura, 2008), to maximize their potential utility. Each frag-
ment contains the structure of a specific manufacturing process
construct. By connecting fragments with the appropriate ‘process
glue’, i.e. connecting control flow specification, we obtain a com-
plete specification of a manufacturing process. We organize the
fragments in a catalogue that follows a classification of operations
in the manufacturing domain. The catalogue of reusable elements
is a tool to deal with the complexity of process modelling in the
manufacturing domain and to advance standardization of process
models. As such, the catalogue is also the basis for an instantiation
artefact. Our use of fragments in process specification is similar
to the use of business process patterns (Gschwind et al., 2008; van
der Aalst et al., 2003, 2000) or business process snippets (Baumgrals
et al., 2015) in the BPM domain, or the use of software patterns in
the software engineering domain (Fowler, 1997).

As the purpose of this work to provide a scientifically sound basis
for structured business process design in practical manufacturing

settings, a proper evaluation of this basis in practice is essential. We
performed this evaluation by applying the developed catalogue of
model fragments in 10 factories across Europe. These factories vary
extensively with respect to their size and the products they pro-
duce. This shows the broad applicability of the developed artefact.

This paper is structured as follows. In Section 2, we present the
methodology used for the execution of our research and link the
steps in this methodology to the structure of this paper. In Section
3, we discuss related work, paying attention to business process
management in manufacturing, the use of BPMN in this context,
and general approaches in BPM that have some similarities with our
work. In Section 4, we analyze manufacturing operations to develop
a catalogue of model fragments that represent reusable building
blocks for process modelling. We continue in Section 5 by showing
how the model fragments can be combined into executable process
models and then briefly discuss how process automation can be
achieved with a business process management system (BPMS). In
Section 6 we evaluate our work by demonstration in real factories
and in Section 7 we discuss our findings. Lastly, conclusions are
drawn in Section 8.

2. Research methodology

As already indicated in the introduction, the research presented
in this paper is classified as design science research because the
goal is to create prescriptive knowledge for problems encountered
in practice. We use the well-established framework for design sci-
ence in information systems of Hevner et al. (2004) to illustrate
the structure of our research methodology, as shown in Fig. 1.
The three columns in this figure are used to depict the environ-
ment, research and knowledge base, according to the design science
research framework. The environment column represents the prac-
tical context of the research, i.e. the manufacturing industry. Paying
adequate attention to this environment safeguards the relevance of
the research. The research column includes the activities performed
in our work, i.e., the development of the catalogue of process frag-
ments. Lastly, the knowledge base column represents the collective
scientific literature related to the research topic. Paying adequate
attention to the knowledge base safeguards the academic rigor of
our work. The section indicators in Fig. 1 point to the sections in
this paper where the research activities are reported.

The research in the center column of Fig. 1 is grouped into four
activities:

1 The first activity creates a compilation of a catalogue of manu-
facturing operations from scientific literature and international
standards.

2 The second activity entails the decomposition of those manufac-
turing operations into modelling concepts. This activity serves to
increase transparency and reproducibility of the research, as it
shows how the catalogue of operations is translated into model
elements.

3 The third activity leverages the modelling concepts to yield a
catalogue of process model fragments using BPMN2.0.

4 The fourth and last research activity shows how the model
fragments can be combined into executable manufacturing oper-
ations processes.

The catalogue of fragments is the primary contribution of this
research and is evaluated in industrial practice, as shown in the
environment column of the Fig. 1. Thus, the set of process model
fragments is the artefact, in design science research terminology,
that is contributed to the knowledge base. The development is per-
formed according to the regulative cycle, as advocated by Wieringa
(2009). The integration problem experienced in practice (as dis-
J. Erasmus, I. Vanderfeesten, K. Traganos et al. / Computers in Industry 123 (2020) 103297 3

Environment

Lack of integration
between business and

operations management.

 

Research

Compile a catalogue of
manufacturing operations.

 

Knowledge base

Manufacturing operations.

 

Decompose the catalogue
entries into modelling
concepts

 

Section 4.2

Develop process model
fragments for
manufacturing operations

Demonstration process
execution at ten factories.

 

fragments into executable
manufacturing processes

Demonstrate
comprehension with

typical users.

 

Combine model

 

 

BPMN2.0.

Manufacturing operations

process model fragments.

 

Fig. 1. Overview of research methodology.

cussed in Section 1) is translated into a knowledge problem (the
application of business process modelling for manufacturing opera-
tions). The solution design is presented in the form of process model
fragments for manufacturing operations. Additionally, it is shown
how those fragments can be combined into executable processes
and this is also demonstrated in practice, at ten factories across
Europe.

3. Related work

This research presents a catalogue of model fragments that can
be used to model executable manufacturing processes. There are
several related studies with a similar objective. Production Case
Management (PCM) sets a process goal that is refined in multiple
steps and there is no a priori end-to-end execution path (Meyer
et al., 2014). However, PCM aims to reduce the need for a skilled
knowledge worker to push a case forward by using rigid process
fragments and object-centric process definitions. These process
fragments are syntactically very similar to BPMN, though with more
attention paid to data nodes. The data nodes are used to model
pre- and post-conditions of activities, providing a basis for linkage
between the process fragments. An implementation of PCM exists
and is presented in the work of Haarmann et al. (2015).

Chung et al. (2003) developed a Task Based Process Manage-
ment (TBPM) system that uses a library of plans that are linked
together using process models. A plan represents one of poten-
tially multiple ways of achieving a task, by breaking it down into
a structure of sub tasks. The Aspect-Oriented (AO) approach (Jalali
et al., 2013) attempts to reduce complexity of the main process by
separating concerns into aspects. An aspect contains one or more

advices, specified as process model fragments. At run-time, aspects
are interwoven with the main process, forming the to-be-followed
execution flow.

Hewelt and Weske (2016) propose a hybrid approach for flex-
ible case management, addressing both modelling and execution.
Their approach is based on modelling business scenarios as small
fragments of case models and at runtime using data object states
to combine fragments. Their use of fragments for modelling is
comparable to our approach, but their approach has three impor-
tant differences with respect to ours. Firstly, our approach relies
on design-time assembly of fragments into business processes,
whereas their approach is driven by run-time assembly. Even
though their approach may allow for more flexibility in process
composition than ours, it leaves important decisions to execu-
tion time, thereby making ex-ante resource allocation hard or
even impossible, whereas this is important in the manufacturing
domain we address. Secondly, we propose a catalogue of manufac-
turing primitives taking the physical nature of manufacturing very
explicitly into account. Hewelt and Weske (2016) address business
processes with knowledge workers, so remain in the administrative
domain that is typical for most work in business process man-
agement. Finally, the work in Hewelt and Weske (2016) focuses
on formal semantics of their assembly approach, with only a toy
example in the academic domain — hence there is no evaluation in
actual practice. From the onset, our work has been contextualized
by industrial practice, including evaluation in this practice. That
said, the work of Hewelt and Weske (2016) is invaluable to use,
as we apply their rules of process progress to develop the model
fragments.
4 J. Erasmus, I. Vanderfeesten, K. Traganos et al. / Computers in Industry 123 (2020) 103297

Marengo et al. (2018) discuss an approach to model business
processes that pays explicit attention to the representation of the
items on which process activities are to be executed. Their approach
is aimed at the construction domain. There is a link to our work in
the observation that we pay explicit attention to the physical nature
of items as well, as our fragments have been defined taking the
physical characteristics of manufacturing into account. Marengo
et al. (2018) base their work, however, on an extension and for-
malization of a declarative way of specification, whereas we use
an approach with explicit control flow specification that is close to
the physical processes in manufacturing. Like in the work of Hewelt
and Weske (2016), Marengo et al. (2018) focus on formal semantics.
Even though they use a case from construction practice (building a
hotel), the evaluation of their work is not based on usability in prac-
tice, but on formal satisfiability checking, i.e., on checking that at
least one process execution exists that satisfies the process specifi-
cation. For the manufacturing domain, we do not consider this very
relevant, as the issue here is not whether one process execution can
satisfy a specification, but whether most process executions will
satisfy a specification

The activities specified in the model fragments must ultimately
be performed by resources. Some techniques aim to reduce the
specificity of the process models to empower the resources. Con-
Dec (Pesic and van der Aalst, 2006) refrains from specifying control
flow between activities and rather opts for constraints that must
be met as relationships between the activities. As most declarative
languages, ConDec takes a so-called outside-in approach, mean-
ing that all behavior is allowed unless explicitly forbidden by a
constraint. Similarly, Dynamic Condition Response Graphs (DCR
Graphs) (Hildebrandt et al., 2012) contain events and five types of
relations between them. Nested sub graphs can alternate between
completed and uncompleted state, particularly suitable for the
manufacturing domain where rework can be a common occurrence
in processes. A third technique focuses on offering microservices,
which provide a certain functionality. These microservices are
called by autonomous agents that intend to achieve a (process)
goal (Oberhauser and Stigler, 2017). Agents navigate the land-
scape of microservices, which can be represented as a dependency
graph. The structure of microservices maps well to the physical
domain, where a machine or resource typically provides certain
functionality that is required as input requirement by a down-
stream production step.

Although BPM was born out of the principles of production engi-
neering, it has been most successful in industry sectors that process
information, rather than physical material. Most prominently, BPM
has been implemented extensively and successfully in financial
service organizations (Brahe, 2007; Weerdt et al., 2013). Never-
theless, several other industry sectors have also seen benefit from
the application of BPM, including sectors with a ‘physical nature’
like automotive (Grefen et al., 2009) and transportation (Baumgralg
et al., 2015). However, these applications of BPM almost exclusively
focus on the business management functions in those industry sec-
tors, rather than the activities that ‘touch’ the product. A surprising
outlier is the healthcare sector, where patient handling processes
are modelled and sometimes enacted using a BPMS (Braun et al.,
2014; Reichert, 2011; Reijers et al., 2010; Shitkova et al., 2015; Van
Gorp et al., 2013). The advent of the Internet-of-Things has sparked
the combination of physical objects and business process manage-
ment (Grefen et al., 2019), but most of this work is in an early stage,
without adequate attention to structured approaches for modelling
complex applications.

Regarding the notation used in this research, the remarkable
penetration of BPMN, both as a description of processes and as
notation for process automation, has inevitably led to extension
proposals. Although the notation is quite capable of represent-
ing complex processes, domain-specific symbols and constructs

are appealing to audiences confined to specific industry sectors.
Such extension proposals are prevalent enough to warrant a sur-
vey by Braun and Esswein (2014). The survey found 30 extensions,
classified according to conformance to the BPMN2.0 standard and
organized per application domain. The survey found that four out
of five extensions do not conform to the BPMN2.0 standard. Only
one extension proposal was related to manufacturing (Zor et al.,
2011) and it was found to lack an abstract syntax and contained
semantic conflicts with the standard. Braun and Esswein (2014)
do not offer an explanation, but we can conclude that either there
is little need for an extension for manufacturing, or there is little
need for BPMN in manufacturing. It is therefore necessary to inves-
tigate existing process modelling and enactment techniques and to
scrutinize previous applications of BPMN in manufacturing.

3.1. Process modelling and enactment in manufacturing

The Integration DEFinition (IDEF) series of notations is a main-
stay in many industries, including defense (US Air Force, 1969),
construction (Kamara et al., 2000) and even software development
(Kim et al., 2003). The use of IDEF is typically confined to the cre-
ation of systems though, rather than the utilization of systems.
That is equally true for manufacturing, where IDEF is often used
to design and improve manufacturing systems, but not usually to
drive execution (Cheng-Leong et al., 1999).

Value stream mapping (VSM) is quite ubiquitous in the manu-
facturing sector thanks to the sheer success of lean manufacturing
principles (Grewal, 2008). It’s entrenchment in production enter-
prises has even led to proposals for adoption in business functions
of a more administrative nature (Keyte and Locher, 2004). Further-
more, as with most business and process modelling notations, it is
eventually found wanting and the inevitable proposals for exten-
sions arise (Braglia et al., 2006). More importantly, neither IDEF nor
VSM include formal execution semantic to enable process enact-
ment.

S-BPM is a relatively new development aimed at handling the
complexity of multi-agent systems, with emphasis on manufac-
turing (Fleischmann et al., 2013). S-BPM is a process modelling
technique which emphasizes the different perspectives of inde-
pendent agents and communication between them. The activities
and states of agents are modelled as a unit (a subject in this
terminology), with the possibility of extensive communication
between agents. The concept of communication between inde-
pendent agents is equally relevant for communication between
agents in a single organization or agents across organizations
(Fleischmann et al., 2015).

S-BPM shows promise in the manufacturing domain, espe-
cially in the new subject of smart factories (Cadavid et al., 2015),
Vertical integration between process management and individ-
ual agents has been demonstrated (Neubauer et al., 2014) and
practical evaluations have been successful (Neubauer and Stary,
2017). Additionally, S-BPM benefits from its mathematical under-
pinnings and natural language (Subject, Predicate, Object) structure
(Fleischmann et al., 2015).

Given the apparent advantages of S-BPM, the limited uptake of
the notation and approach is surprising. Practical demonstration
has been successful, but it remains comparatively isolated. Scien-
tific research on the topic has also been slow to spread outside its
place of origin, as evidenced by the overlap of authors referenced
in this section. It is perhaps too early to say whether critical mass
will be reached, but one significant barrier stands in its way: the
growing popularity and enthusiasm for BPMN. BPMN also offers the
possibility of modelling processes as independent units (pools in
this terminology) with communication between agents and is sup-
ported for enactment in many information systems. Simply stated,
BPMN has reached a de-facto standard level of penetration and
J. Erasmus, I. Vanderfeesten, K. Traganos et al. / Computers in Industry 123 (2020) 103297 5

enjoys global support from organizations (Decker and Barros, 2008;
Takemura, 2008; Chinosi and Trombetta, 2012).

3.2. BPMN in manufacturing

BPMN has certainly been considered as an option for manu-
facturing operations (Zor et al., 2010). Indeed, Garcia-Dominguez
et al. (2012) compared BPMN2.0 with VSM and IDEF3 in terms of
the modelling of activity sequences, timing constraints, resource
assignment, material flow and information flow. The study found
that BPMN2.0 is comparable to IDEF3, with the addition of process
participants, event handlers and message flow; however, BPMN2.0
lacks the ability to model the physical aspects of a manufactur-
ing system. As for VSM, BPMN2.0 is found to be complementary,
because VSM is more concerned with the flow of material and
information, rather than the exact sequence of activities. The
more important advantage of BPMN is that it includes execution
semantic. IDEF and VSM are adequate analysis and improvement
notations, but BPMN can be used to enact processes with a BPMS.

Witsch and Vogel-Heuser (2012) also compared BPMN to other
notations, but rather as the foundation for the formal specifica-
tion framework of manufacturing execution systems (MES). BPMN
compared favorably to flowcharts, petri-nets, Unified Modeling
Language (UML) and Systems Modelling Language (SysML) This
effort resulted in extensive modification of BPMN though, to cater
for the specific requirements of the considered cases. Similarly, Zor
et al.(2011) present BPMN extensions for manufacturing processes,
but these are again specific to the single case study.

It is clear that BPMN is a candidate for manufacturing process
modelling and enactment. It has been considered from various per-
spectives, including as the formal execution semantic for an MES
and as a modern replacement for IDEF3. However, these consider-
ations are somewhat ad-hoc and disparate. This research aims to
give structure to the adoption of BPMN for manufacturing, by pro-
viding a set of process model fragments that practitioners can use
to model executable manufacturing process and, perhaps, lay the
foundation for further research and development in the use of BPM
in manufacturing.

Two conclusions can be drawn from these research efforts: 1)
There is precedent for the development of process model fragments
to assist with the modelling of processes, and 2) there is interest in
the more goal-oriented process modelling, giving process partici-
pants more autonomy to pursue those goals. This fits well with the
current rise of autonomous machines and robots seen in the man-
ufacturing industry. The research presented in this article does not
contradict the cited studies, but rather tries to promote the use of
a single notation to model manufacturing operations and business
processes.

4. Development of manufacturing process model
fragments

This research aims to provide prescriptive knowledge on the use
of business process modelling to automate manufacturing oper-
ations processes. The prescriptive knowledge is presented in the
form of model fragments that are intended to be used as building
blocks that can be combined into executable process specifications.
This section presents the development of the model fragments, fol-
lowing a three-step approach. First, a catalogue of manufacturing
operations is constructed from scientific literature and interna-
tional standards. This catalogue represents a relatively complete list
of operations typically found in manufacturing processes. Second,
each entry in the catalogue of manufacturing operations is decom-
posed into concepts to guide development of model fragments.

Lastly, the concepts are converted into BPMN2.0 model elements
to yield the catalogue of process model fragments.

4.1. Catalogue of manufacturing operations

The first step of this research, as shown in Fig. 1, is to create a cat-
alogue of manufacturing operations. Although a provably complete
list of operations is unattainable, we can at least endeavor for good
representation of all operations. Thus, we discuss how a catalogue
of manufacturing operations is constructed from literature.

It would be highly preferential for this research to reference
and build on a well-established and comprehensive catalogue of
manufacturing operations, but unfortunately such a catalogue is
not available. The rise of computer integrated manufacturing (CIM)
in the early 1990s prompted several studies into the definition of
manufacturing systems (Doumeingts et al., 1995), but these studies
mostly deal with the design approach and notation, rather than the
type of manufacturing operations (Brandimarte and Cantamessa,
1995). A few exceptions are noted though. The Purdue Enterprise
Reference Architecture (Williams, 1994) is the result of one of
these studies and eventually led to the IEC 62264:2013 standard
(IEC, 2013) that is extensively referenced in this article. Bohms and
Tolman (1993) also define four types of manufacturing operations
(transformation, transportation, storage and verification) as part
of their methodology to express a CIM reference architecture, but
unfortunately no further detail is provided. Lastly, the Y-CIM ref-
erence architecture of Scheer (1994) provides extensive guidance
on the development and modelling of enterprise architecture for
a factory. These studies provide valuable insight and examples on
the definition of manufacturing enterprise architecture, but none of
them attempt to construct a comprehensive list of manufacturing
operations.

The widely adopted international standard series [EC
62264:2013 (IEC, 2013) provides standardized terminology
and ontology for the manufacturing domain (Chen, 2005). It advo-
cates a functional hierarchy to classify the activities performed in
a manufacturing enterprise. Level four of the functional hierarchy
is concerned with business management, including the resource,
financial and supply chain management functions. Level three
is named manufacturing operations management and refers to
the work flow control to produce the desired products (Chen,
2005). All material processes are situated in level three of the
hierarchy, as those are the processes that directly contribute
value to the product. Level three is therefore the focus and scope
of this research. The following four categories of manufacturing
operations are included in level three of the functional hierarchy
(Chen, 2005):

© Production operations: the functions that convert raw materi-
als, energy, and in-formation into products, with the required
quality, safety, and timeliness.

© Inventory operations: coordinates, directs, controls, and tracks
inventory and material movement within manufacturing oper-
ations.

© Maintenance operations: the functions that maintain the equip-
ment and tools to ensure their availability for manufacturing and
ensure scheduling for periodic or preventive maintenance.

© Quality operations: coordinates, directs, and tracks the functions
that test materials and equipment to measure and verify quality
measures.

While these four categories provide a good overview of man-
ufacturing operations, additional detail is needed to identify the
concepts necessary to create process models. Unfortunately, IEC
62264:2013 (IEC, 2013) does not provide additional detail and a sin-
gle catalogue of manufacturing operations does not exist, because
6 J. Erasmus, I. Vanderfeesten, K. Traganos et al. / Computers in Industry 123 (2020) 103297

Mass-conserving
shaping

Mass-reducing
shaping

 

Production
operations
Assembly

Packaging

 

 

 

Handling

Inventory
operations

Storing

Transporting

Corrective
maintenance

”
Cc
<=
oa
©
oa
Vv
Q
Oo
a0
Cc
co
a
~
O
©
ue
>
Cc
S

 

Maintenance Preventive
operations maintenance
Modification
maintenance

Process quality
control
Quality operations

Product quality
control

 

Fig. 2. First three levels of the catalogue of manufacturing operations.

scholarly work tends to focus on a subset of operations. Therefore,
a catalogue of manufacturing operations with definitions must be
constructed from several sources, with good representation as a
goal, rather than absolute completeness.

Starting with ‘production operations’, the hierarchy of Groover
(2011) is highly cited and detailed. This catalogue is structured
according to the nature of the operations, witha first differentiation
between shaping and non-shaping operations. Shaping operations
are then further subdivided between operations that conserve the
mass of materials, reduce the mass of materials, or join multiple
parts to form a new shape. Non-shaping production represents
the type of operations that improve the surface of the material
or enhances the material properties, without altering its geom-
etry. In pursuit of good representation, the hierarchy of Groover
(2011) is complemented with DIN 8580:2003—09 (NA 152-06-10
AA National Committee, 2003) and Todd (1994). The resulting pro-
duction operations is shown at the top of Fig. 2.

Unfortunately, well documented and structured lists of inven-
tory, maintenance and quality operations prove to be rather elusive.
Thus, several authoritative sources must be consulted to complete
the catalogue of operations. The referenced sources were selected
for clarity and comprehensiveness. Every effort is made to con-
sult as many sources as possible, but manufacturing operations can
be described in any number of ways, so the goal is to establish a
single sensible and practical list, rather than attempt to address
contradictions and ambiguity in the literature.

Starting with inventory operations, Langford (2007) lists the
following four logistics functions: packaging, materials handling,
warehousing and storage, and transportation. In comparison,
Ghiani et al. (2013) use the term internal logistics and define it
as the activities carried out in the production plants, consisting of
the following: receiving and storing materials, collecting from the
warehouse to feed the production lines, moving the semi-finished
goods up to packaging, and finally storing the finished product.
Packaging, handling, storage and transportation (PHS&T) is a group-
ing that is widely adopted and used by logistics support engineers
(Defense Acquisition University, 2011; INCOSE, 2015) and com-
pares favorably to the four functions of Langford (2007). Thus,
these four activities will form the first level of decomposition under
inventory operations.

Maintenance and quality operations are often grouped together
in literature. It may even be difficult to determine whether an
operation is considered a maintenance or quality operation. For
example, testing can be performed on equipment or the product.
We apply this differentiation to separate the two operation groups,
as advocated by the category definitions of IEC 62264:2013 (IEC,
2013): operations related to equipment are grouped under mainte-
nance operations, while process and product related operations are
grouped under quality. Then, the Integrated Product Support Ele-
ment Guidebook (Defense Acquisition University, 2011) is queried
to define the detail of those operations. Maintenance is subdivided
into modifications, corrective, and preventive maintenance. Qual-
ity operations differentiates between process and product related
operations. The resulting hierarchy of manufacturing operations,
showing the first three levels of decomposition, is shown in Fig. 2.

The next level of decomposition is again pieced together from
several sources. For production operations, two sources (Groover,
2011; NA 152-06-10 AA National Committee, 2003) provide exten-
sive detail, including descriptions and example processes. Table 1
lists the ten operation types of production operations, each with a
description and its source.

Predictably, inventory operations prove difficult to delineate as
a catalogue. Ray (2008) distinguishes between three types of pack-
aging: shop, bulk and shipping containers. Conversely, Groover
(2011) distinguishes between containers used to hold individual
items and equipment used to make up unit loads. For the purposes
of manufacturing processes, we will apply those two categories:
placing a single item in a container and placing multiple items in a
container (unitizing). These two types of packaging can be inversely
applied for unpacking of containers.

Ray (2008) also extensively discusses manual and robotic
handling. The following five handling activities are identified:
preparatory, feeding, positioning, manipulating and removing.
Regarding storage, we distinguish between two types based on the
purpose: buffering is intended to synchronize the flow of mate-
rial between work centers that may have unequal throughput,
while preservation is intended to hold materials and products until
needed (Defense Acquisition University, 2011).

For transport, Stock and Lambert (2001 ) identifies the following
five modes: road, rail, air, water, and pipeline. Their perspective was
one of intra-company transport though, instead of inter-factory
transport. This breakdown is quite common for transport analysis
or optimization projects, such as Davidsson et al. (2005). Similarly,
the European Union distinguishes between six modes by differ-
entiating between sea and inland waterways. The United Nations
has a similar approach and differentiates between seven modes
of transport: Maritime, rail, road, air, multi-model, fixed installa-
tion and inland water transport (Centre for Trade Facilitation and
Electronic Business, 2001). Fixed installation transport in this case
includes pipe and cable transport, such as for petroleum and elec-
trical power. For the second level of aggregation of transport, we
combine the equipment classification of Ray (2008) with the modes
J. Erasmus, I. Vanderfeesten, K. Traganos et al. / Computers in Industry 123 (2020) 103297

Table 1

Operation types and descriptions of production operations, with corresponding references.

Operation group Operation type

Casting and
molding
Forming

Mass-conserving shaping

Mass-reducing shaping Material removal
Separating
Permanent joining
Mechanical
fastening

Heat treatment

Assembly

Non-shaping Cleaning

Surface coatings

Surface treatments

Description

Creation of an initial shape from the molten, gaseous or formless solid
state.

The three-dimensional or plastic modification of a shape while
retaining its mass and material cohesion.

Remove excess material from the starting workpiece so that the
resulting shape is the desired geometry.

Detaching or dividing work pieces from each other.

Form a joint between components that cannot be easily disconnected.
Fasten two (or more) parts together in a joint that can be disassembled
if needed.

The application of thermal energy to enhance the properties of the
work material, without altering its shape or mass.

Processes that remove soils and contaminants that result from
previous processing or the factory environment.

Application of a thin layer of material to the exterior surface of the
work part.

Mechanical and physical operations that alter the part surface in some

Reference

DIN 8580
DIN 8580
Groover, 2011
DIN 8580
Groover, 2011
Groover, 2011
DIN 8580
Groover, 2011

Groover, 2011

Groover, 2011

way, such as improving its finish or impregnating it with atoms of a
foreign material to change its chemistry and physical properties.

Table 2

Operation types and descriptions of inventory operations, with corresponding references.

 

Process group Operation type Description

Individual packaging

Single product is inserted into a container for transport or storage.

Reference

Groover, 2011

Packaging Unitizing (a.k.a. Multiple parts or products are inserted into a single container for transport Groover, 2011
Containerization) or storage.
Preparatory handling Bringing materials closer to the workplace and preparing the machine. Ray, 2008
Feeding Placing or directing materials closer to workplace or point of use. Ray, 2008
Handling Positioning Orienting materials in exact location, placing into fixture, jig or machine. Ray, 2008
Manipulating Handling of materials during actual manufacturing operation. Ray, 2008
Removing Taking material out of workplace, such as taking out of jig, fixture etc. Ray, 2008
. Buffering Static or slow holding of materials, parts or products (buffering, queueing, IPS element
Storing etc.) in preparation for further processing. handbook
Preserving Static holding of materials, consumables, parts or products until retrieved IPS element
for production or distribution. handbook
Transporting Vehicular transporting Directed physical movement of materials, consumables, parts or products Stock and Lambert,
aboard vehicles (automated guided vehicle, forklift, etc.) 2001
Fixed installation Fixed, point-to-point physical movement (conveyor, cable, piping, etc.) of Stock and Lambert,

transporting

of transport. Road, rail, air and water are treated as vehicular trans-
port, while conveyors, pipelines, cables and cranes are part of the
fixed installation category. Table 2 shows the resulting operation
types and descriptions for inventory operations.

Maintenance and quality operations are again treated together.
A single authoritative source, the INCOSE Systems Engineering
Handbook (INCOSE, 2015) is used to define the lowest level of
detail of maintenance operations. Table 3 shows the operation
types and descriptions for maintenance operations. The source col-
umn is omitted because only one source is used for all maintenance
operations.

Table 4 shows the operation types and descriptions of quality
operations. Again, the source column is omitted, because all oper-
ation types and descriptions are based on the systems engineering
handbook (INCOSE, 2015).

4.2. Manufacturing operations as a set of concepts

This subsection is included in the interest of transparency
and reproducibility. An intermediate step in the development
is explained, instead of deriving the process model fragments
directly from the catalogue of manufacturing operations presented
in Section 4.1. The intermediate step entails the decomposition of
manufacturing operations into concepts that must be represented
with BPMN2.0. As this research is primarily concerned with the
design of executable manufacturing process models, only concepts
related to execution semantic will be considered. The BPMN2.0

materials, consumables, parts, products or energy. 2001

standard (Object Management Group, 2014) provides execution
semantic for activities, gateways, events and sequence flow. This
subset of executable BPMN concepts is elaborated in detail by
Dijkman and Van Gorp (2010). Therefore, the following object-
types of the BPMN2.0 meta-model are included: activity, gateway,
control flow, and message flow. In the interest of clarity, the fol-
lowing object-types are not included: data objects, data stores, and
annotations. The focus on the flow of work, as opposed to the flow of
information, matches well with the physical nature manufacturing
processes.

The process model fragments are created by translating the con-
cepts of manufacturing operations (see Section 4.1) into model
elements (activities, events, gateways and sequence flow). We
apply the five rules of process progress defined by Hewelt and
Weske (2016), with slight adjustments to account for the physi-
cal nature of manufacturing processes. These rules are translated
for our purposes and summarized as the following:

1 Activity start: a fragment is instantiated as part of the process
model, but the activity is only started once all preconditions are
satisfied. Activity pre-conditions are modelled as one or more
events in our fragments. Importantly, this also allows activities
to be performed multiple times in the case of repetitive tasks or
rework.

2 Activity termination: an activity is ended once all post-conditions
are satisfied. Again, post-conditions are modelled as events in
our fragments. Activity termination does not remove the frag-
8 J. Erasmus, I. Vanderfeesten, K. Traganos et al. / Computers in Industry 123 (2020) 103297

Table 3

Operation types and descriptions of maintenance operations, extracted from the INCOSE Systems Engineering Handbook (INCOSE, 2015).

Process group Operation type Description

An activity which returns the capability of an asset that has failed to a level of performance equal to, or
greater than, that specified by its functions, but not greater than its original maximum capability.
A maintenance task to replace a component when it has failed or deteriorated to the point where

system performance is outside specified parameters.

. . Repairing
Corrective maintenance
Replacing
Servicing
Preventive maintenance
Scheduled replacing

An activity which returns the capability of an asset that has not failed to a level of performance equal
to, or greater than, that specified by its functions, but not greater than its original maximum capability.
A maintenance task to replace a component at a specified, pre-determined frequency, regardless of

the condition of the component at the time of its replacement.

Condition monitoring

The use of specialist equipment to measure the condition of equipment to assess whether it will fail

during some future period.

Sustaining

System modifications Upgrading

An activity which extends the expected life of an asset beyond its original expected useful life.
An activity which enhances the capability of an asset beyond its original maximum capability.

 

Table 4

Operation types and descriptions of quality operations, extracted from the INCOSE Systems Engineering Handbook (INCOSE, 2015).

Process group Operation type Description

Process measuring

. Equipment calibration

Process quality control . . .
Equipment inspection

Equipment testing

An activity to determine the value of a conformance or performance quantity of a process.

Set or adjust a machine or tool according to product and production requirements.

Conformity evaluation by observation and judgement accompanied as appropriate by measurement,
testing or gauging.

An activity in which a system or component is executed under specified conditions, the results are

observed or recorded, and evaluation is made of some aspect of the system or component.

Product inspection
Product quality control
Product measuring

Product testing

ment from the instantiated model, because the model must allow
rework or repetitive tasks.

3 Event occurrence: event occurrences are used to indicate the
satisfaction of conditions and, therefore, how different model
fragments are linked to each other.

4 Gateway behavior: this rule applies the XOR, AND and OR gate-
ways of BPMN2.0 as specified in the execution semantic (Object
Management Group, 2014).

5 Fragment termination: Instantiations of fragments are termi-
nated along with the termination of process instantiations. This
represents the only departure from Hewelt and Weske (2016),
caused by the difference between design-time and run-time
compilation of process models.

By applying these five rules, we infer that model fragments are
bound by pre- and post-conditions, modelled as start events and
end events, respectively. Between the start and event events, each
fragment must contain the activities to be performed. The activi-
ties can be supplemented by gateways to enforce process logic as
necessary. Additionally, the pre- and post-conditions are used to
combine fragments into executable process models. For example,
the application of mechanical force during a forming operation is an
activity performed by an assigned actor, whether human, machine
or a combination of several actors. The forming activity is condi-
tional on the arrival or availability of input material, represented
by a start event. The forming activity is ended once the work piece
is shaped, represented by an end event. Therefore, it is likely that
an inventory operation (e.g. transportation or handling) will pre-
cede the forming operation to make the work piece available at the
forming station.

Each operation type is described as inputs, activities and out-
puts, based on the descriptions from the literature. Table 5 shows
the results of the decomposition for production operations. In the
interest of consistency and clarity, the following two terms are used
to refer to inputs and outputs:

A Static analysis technique that relies on visual examination of development products to detect errors,
violations of development standards, and other problems.

An analysis technique that relies on the use of tools to determine the physical conformance of a
material or product.

Determination of one or more performance quantities, according to a procedure.

© Material: The matter from which a product is made.
© Work piece: A single part or product currently undergoing oper-
ation.

Each inventory operations can also be decomposed into input,
transformation and output. Table 6 shows the results of this
decomposition, making use of the same terminology as with pro-
duction operations. Notably, only packaging operations transform
the inputs into a different output. All other inventory operations
involve activities that move, manipulate or hold items, without
changing it in any way. Furthermore, the five types of handling
operations are collapsed into a single entry in Table 6, because there
was no discernible difference in terms of input, transformation and
output.

Maintenance operations are difficult to describe in terms of
input, transformation and output, because of uncertainty regard-
ing the activities involved. Most notably, the two modification
operations, sustaining and upgrading, can involve multiple activi-
ties, perhaps even performed by multiple people. Comprehensive
maintenance jobs may even be planned and managed as projects.
Nevertheless, the inputs and outputs can be inferred from the
descriptions in Table 3 and the transformation descriptions in
Table 7 are not limited to single activities.

Lastly, quality operations are also decomposed and shown in
Table 8. Predictably, the input and output of each quality oper-
ation does not change, because these operations involve various
verifications, rather than transformation of materials or products.

4.3. Manufacturing operations represented as process model
fragments with BPMN2.0

This section presents the interpretation of process concepts,
presented in Section 4.2, as BPMN2.0 model fragments. The cat-
alogue of fragments is the contribution of this research as it can be
used as building blocks to model executable manufacturing pro-
cesses. The combination of several fragments to model a process
is illustrated in Section 5.1 and evaluated in Section 6.1. Notably,
Table 5

J. Erasmus, I. Vanderfeesten, K. Traganos et al. / Computers in Industry 123 (2020) 103297

Production operations decomposed into input, activity and output elements.

Operation type

Casting and molding
Forming

Material removal
Separating
Permanent joining
Mechanical fastening
Heat treatment
Cleaning

Surface coating

Surface treatment

Input(s)

Unit of formless material.

Unit of material in solid state.

Unit of material in solid state.
Single unit of material in solid state.
Multiple work pieces.

Multiple work pieces AND fastening
material.

Single work piece.

Single work piece.

Single work piece.

Single work piece.

Activity(ies)

Apply energy to melt or evaporate material, pour
material into mold and allow to solidify.

Apply mechanical force to change shape of
material.

Apply mechanical energy to remove some of the
material.

Apply mechanical energy to divide a unit of
material into individual work pieces.

Apply thermal or chemical energy to permanently
attach two or more work pieces.

Use fastening material to fasten multiple pieces
together.

Apply thermal energy enhance work piece
properties.

Apply mechanical or chemical energy to remove
unwanted particles.

Deposit a chemical material on the surface of the
work piece.

Apply mechanical energy to enhance surface
integrity.

Output(s)

Shaped unit of material in solid state.
Shaped unit of material in solid state.
Unit of material with reduced mass
AND removed material.

Multiple work pieces AND excess
material.

Single work piece.

Single work piece.

Single work piece (enhanced).

Single work piece (cleaned).

Single work piece (coated).

Single work piece (enhanced).

 

Table 6

Inventory operations decomposed into input, activity and output.

Operation type

Individual
packaging
Multiple packaging

Handling (all five

types)
Buffering

Preserving
Vehicular
transporting

Fixed installation
transporting

Table 7

Maintenance operations decomposed into input, activity and output.

Operation type

Input(s)

Single work item or unit of material.

Multiple work items or units of
material.
Single work item OR unit of material.

Single or multiple work piece(s) OR
package(s).
Single or multiple work piece(s) OR
package(s).
Single or multiple work piece(s) OR
package(s).
Single or multiple work piece(s) OR
package(s).

Input(s)

Activity(ies)

Insert single item into a container.
Insert multiple items into a single container.

Manipulate or move item within a single work unit
or storage area.

Hold work piece(s) or package(s) until some
condition is met.

Hold work piece(s) or package(s) until retrieved.

Directed movement of work piece(s) or package(s)
aboard a vehicle.

Ongoing, point-to-point movement of material or
work pieces.

Activity(ies)

Output(s)

Package containing single item.
Package containing multiple items.
Single work item OR unit of material.

Single or multiple work piece(s) OR
package(s).
Single or multiple work piece(s) OR
package(s).
Single or multiple work piece(s) OR
package(s).
Single or multiple work piece(s) OR
package(s).

Output(s)

 

Repairing
Replacing
Servicing
Scheduled replacing

Condition monitoring
Sustaining

Upgrading

Table 8

Non-conforming asset.
Non-conforming asset AND
replacement part.
Conforming asset.

Asset AND replacement part.

Asset AND measurement equipment.
Asset.

Asset.

Quality operations decomposed into input, activity and output.

Operation type

Input(s)

Restore capability of a failed asset to within its
specification.
Exchange a component of an asset.

Restore the capability of an asset to within
specification.

Exchange a component of an asset at a
pre-determined time.

Measure the condition of equipment.

Extend the expected life of an asset beyond its
original expected useful life.

Enhance the capability of an asset beyond its
original maximum capability.

Activity(ies)

Repaired asset

Conforming asset AND replaced part.
Serviced asset.

Asset AND replaced part.

Asset AND measurement equipment.
Asset with extended life.

Asset with enhanced capability.

Output(s)

 

Process measuring
Equipment calibration
Equipment inspection
Equipment testing
Product inspection

Product measuring

Product testing

Manufacturing process.
Equipment.
Equipment.
Equipment.

Product.

Product.

Product.

Determine the value of a conformance or
performance quantity of a process.

Set or adjust a machine or tool according to
product and production requirements.

Inspect equipment for conformity.

Test some aspect of the system or component.
Visual examination of a product.

Determine the physical conformance of a material
or product.

Determine one or more performance quantities, of
a product.

Measured manufacturing process.
Calibrated equipment.

Inspected equipment.

Tested equipment.

Inspected product.

Measured product.

Tested product.

 
10 J. Erasmus, I. Vanderfeesten, K. Traganos et al. / Computers in Industry 123 (2020) 103297

Table 9
Model fragments of production operations.

Casting and molding

Melt material

      
    
 

_—

Formess material Work piece
available shaped
Material removal
Remove material
Work piece Work piece

available reduced

Removed material

Forming

Form work piece

    
   
     
 

Formless material
available

Work piece
shaped

Separating

Work piece 1
separated

Separate work
pieces

Combined w ork
piece available

Work piece 2
separated

Work piece n
separated

 

Permanent joining

  

Work piece 1
available

Mechanical fastening

   

Work piece 1
available

Join work pieces

   
 
  

Work piece 2 Joined w ork piece

available

Work piece n
available

Heat treatment

Cleaning
Surface Non-s haping
coatings operation

Work piece
available

Work piece

Surface enhanced

treatment

Work piece n
available available

Fastening
material

Fasten work
pieces

      
 

Fastened w ork
piece available

 

these process fragments are intended to give the expected execu-
tion behavior, in addition to accurate representation of the process
for understandability and communication purposes.

Similar to Hewelt and Weske (2016), we note that the model
fragments are usually straight-forward, but their interplay allows
for complex behavior. The fragments should be considered building
blocks that helps to accelerate the modelling of complex pro-
cesses. The model fragments are again presented according to the
categories of manufacturing operations, starting with production
operations in Table 9.

It can be argued that the permanent joining operation requires
joining material, analogous to the fragment for mechanical fas-
tening. However, permanent joining is typically achieved with
continuous or standardized material, such as adhesive or welding
gas. Conversely, mechanical fastening often involves discrete parts,
such as bolts and widgets. Thus, fastening material is shown as a
distinct inflow, whereas joining material is assumed to be present
at the workstation.

A similar assumption is made with all four non-shaping oper-
ations, i.e. heat treatment, cleaning, surface coatings, surface
treatment. These operations may require production consumables,
such as coating materials, but it is assumed that such consumables

will be abundantly available at the place of application. For exam-
ple, coating operations are often performed by submerging a work
piece in the coating material. In such a case, it does not make sense
to model the coating material as an inflow. As a result, the four
non-shaping operations can be represented with the same process
model and are therefore listed as a single entry in Table 9.

Inventory operations continues to be an interesting challenge.
Several of the inventory operations fragments, most notably pack-
aging and storing operations, require advanced process modelling
constructs. Multiple packaging is modelled as a multi-instance task,
providing the repetitive behavior of inserting multiple items into
a container. Buffering makes use of an intermediate event to place
the process in a holding state until some predefined condition is
met. Such a condition may be based on queuing logic or simply
time duration. Preserving uses a similar hold function, but the trig-
ger to continue processing is a signal or message instead. Table 10
shows the process fragments for inventory operations.

The model fragment for fixed installation transport is quite
unique. It is the only fragment that necessitates time passage on
a connecter, instead of an activity. It is modelled this way, because
the transport operation is not assigned to, and therefore not per-
formed by, a process participant. For example, a conveyor belt that
J. Erasmus, I. Vanderfeesten,

Table 10
Model fragments of inventory operations.

Individual packaging

  

Work piece
available

K. Traganos et al. / Computers in Industry 123 (2020) 103297

Unitizing

  

Work pieces
available

11

Insert work piece
into packaging

  
 

Work piece

Insert into
packaging

   
  

= Multiple w ork

 

packaged pieces packaged
Recies Multi-instance task, based
ckaging Packaging on space in the packaging
available available
Handling operations (all five variations) Buffering

Handling

   
    

Work piece
handled

Work piece
available

 

Preservation

; Retrieve from
Place in storage
storage

Notification
received

 
     

Work piece or Work piece or
package available package available
for storing for further

processing

Fixed installation transporting

Ready for task m

        

Material arrived Task n completed

transports parts from one point to another is not assigned a task
to perform the transportation. The belt simply rolls, carrying the
parts with it. A conditional event is used to indicate that “task n”
can only commence once the material arrives, but this still doesn’t
capture the elapse of time. A timer event can’t be used, because it is
not an accurate representation of the process behavior. The timer
event is used to indicate a fixed duration or a future timestamp. In
the case of fixed installation transporting, time elapses as a result of
material movement. “Task n” will initialize upon the arrival of the
material, not after the elapse of time. Therefore, this is considered
a deficiency, because time passage on a connector is not supported
by BPMN2.0, but the conditional event can be used to circumvent
the problem if it is possible to track when the material arrives.

The third category of operations, namely maintenance opera-
tions, are modelled as business processes and presented in Table 11.
All seven maintenance operations can be modelled without diffi-
culty, albeit not without uncertainty. The uncertainty is due to the
extensible nature of maintenance work, especially work involv-
ing equipment modification. For example, the upgrading operation
is modelled as a single task in Table 11, but upgrading a piece of
equipment may involve several tasks, perhaps even performed by
multiple people. Significant maintenance work is typically man-
aged as a project, subject to planning of the tasks to be performed.
The process fragments presented in Table 11 represent single
maintenance tasks that may be duplicated or combined for more
significant maintenance jobs.

Lastly, quality operations are also modelled as process frag-
ments and presented in Table 12. The seven quality operations
can be conveniently grouped into process, equipment and prod-
uct related operations. These groupings allow us to use only three
process fragments for quality operations. Equipment calibration,
inspection and testing can be modelled as a single fragment and the
same can be done for product inspection, measuring and testing.

  
 
  
 

Work piece or
package available
for storing

Item(s) ready for
transport

Retrieve from

Pl in stor:
ace in storage storage

   

Condition Work piece or

package available
for further
processing

Vehicular transporting

Transport

lten(s)

transported

Except for fixed installation transporting, manufacturing oper-
ations can be accurately represented with BPMN2.0. Thus far, the
analysis is confined to individual manufacturing operations that
must be used in conjunction to model real manufacturing pro-
cesses.

5. Implementation of process model fragments

The model fragments presented in Section 4.3 must be imple-
mented to deliver the expected process execution behavior.
Implementation, in this case, entails two parts. First, the model
fragments represent relatively small portions of an actual manufac-
turing process and must therefore be combined to model a practical
process. Secondly, the resulting process model must be subjected
to a process management system to enact the process. This section
details the implementation and is divided into the same two parts.

5.1. Design of manufacturing processes as an aggregation of
model fragments

To guide the combination of fragments into useful manufactur-
ing processes, we again draw on the work of Hewelt and Weske
(2016). Although Hewelt and Weske (2016) demonstrates run-time
combination of fragments into process models, the rules that gov-
ern fragment combination can be equally applied for design-time
combination of fragments. Therefore, the pre- and post-conditions
of the model fragments, represented by start and event events, are
used to link fragments to each other. The difference is that in the
work of Hewelt and Weske (2016) the initiation and termination
of activities are conditional on a specific data object entering a pre-
defined lifecycle state. In our work, due to the material nature of
manufacturing processes, we swap the initiation and termination
conditions to the state of a physical object, such as the arrival of a
12 J. Erasmus, I. Vanderfeesten, K. Traganos et al. / Computers in Industry 123 (2020) 103297

Table 11
Model fragments of maintenance operations.

     

   

Repairing Replacing
Servicing Scheduled
ws: Perform replacing
Condition maintenance
monitoring . .
Asset available Asset repaired
Sustaining
Upgrading
Table 12
Model fragments of quality operations.
Process Equipment
measuring calibration
Measure
process Equipment
Process available Process mspecion
measured .
Equipment
testing

Product inspection

  
      

Product measuring
Quality operation

Product testing result 1

Inspect /
measure /test

product
Product
available

Quality operation
result 2

  

Quality operation
resultn

Mechanical fastening

Mold prepared

Combine mold
and core

Melt material
Core and mold Formless material

ready available

Core prepared

Casting and molding

Pour material

 

  
  
 

Asset available
Replace
component of
asset
Component
replaced

Replacement
component
available

Calibrate /

inspect/ test
equipment

  

Equipment Equipment quality
available operation
performed

Handling

Solidify shape Rem ove work
piece
Work piece Work piece
shaped available

Work piece
removed

Fig. 3. Sand casting process according to Groover (2016).

work piece at the work cell. Furthermore, we do not apply run-time
compilation of model fragments, but rather opt for design-time
compilation. This is a conscious decision, that has two advantages:

© The formal semantic that dictates fragment combination is
less important, because the process modeler can apply expert
knowledge during modelling.

© The process modeler has more freedom to include scenario-
specific elements, such as time-out events or compensation for
non-conformances.

To explain how fragments are combined into process models, a
sand-casting process is used as an example. Any casting process is
centered around the pouring of liquid metal and allowing it to solid-
ify, but sand-casting also requires preparation of the mold and core
(as opposed to permanent mold casting). Additionally, any cast-
ing process is surrounded by several other operations to prepare
and remove material. The model fragments can be used to model
the sand-casting process using BPMN2.0. The fragments are com-
bined by stitching together the pre- and post-conditions described

in Section 4.2. Fig. 3 shows a portion of an illustrative sand-casting
process with the following three model fragments:

© A mechanical fastening fragment used to represent the joining
of the core and mold.

© A casting and molding fragment that represents the melting,
pouring and solidification of material.

© A handling operation fragment to remove the sand mold and
expose the work piece.

To extend the example further, Fig. 4 shows a sand-casting pro-
cess with some ancillary operations from Groover (2016). In this
process, it is shown that ‘mold making’ and ‘core making’ are inter-
jected mid-way into the ‘casting’ operation (between the melting
and pouring activities). This would represent a violation of the cast-
ing model fragment, but it does not change any process logic. It is
simply an efficiency enhancement in the process, as it is under-
stood that the material melting can start before the mold and core
are positioned.
J. Erasmus, I. Vanderfeesten, K. Traganos et al. / Computers in Industry 123 (2020) 103297

Pattern making

Preparation of

sand Mold making

 

Solidification and

cooling mold

13

Removal of sand Cleaning and

inspection

 

Core making

Fig. 4. Sand casting process according to Groover (2016).

Pattern making

Handling Material Handling Vehicular
removal transporting

Position material Transport
for pattern pattern to mold

making making area

Mold making

Handling Material Vehicular
removal transporting

Transport mold
to pouring area

           
 

Core making

Handling Material Vehicular Handling
removal transporting

Position core in
mold

Handling

Position mold
for pouring

Casting

  

Handling Cleaning Product Vehicular Handling
inspection transporting

Transport to
storage area

 

    
 

Place in storage

Fig. 5. Sand casting process of Groover (2013) modelled as a combination of model fragments.

Fig. 5 shows a model of a sand-casting process, as a combina-
tion of manufacturing process fragments with BPMN2.0. The BPMN
model shown in Fig. 5 is certainly more complicated than the dia-
gram shown in Fig. 4, but also less ambiguous. In Fig. 4 it is not clear
whether all inflows to the pouring activity must be simultaneously
active or only a single inflow can trigger the pouring activity. In
Fig. 5 this relationship is clarified by an AND-gateway, clearly indi-
cating that mold and core must be ready, and the material must
be melted, before pouring can commence. A realistic manufactur-
ing process can thus be accurately represented with BPMN2.0, as a
combination of model fragments.

5.2. Enactment of manufacturing operations processes

The purpose of the model fragments presented in Section
4.3 is to support automation of manufacturing operations pro-

cesses using business process modelling. Hence, the process models
derived from the fragments must be subjected to a process man-
agement system. Furthermore, the process management system
must be connected to the resources that will perform the activi-
ties specified in the process model, to relay commands and receive
data from the factory floor. Such an arrangement represents a com-
plex information system, as it provides functionality for process
enactment, control of individual resources, coordination between
multiple resources and, of course, communication between the pro-
cess engine and resources. In this section we provide guidance, still
in the form of prescriptive knowledge, on the realization of such
an information system. However, this section is kept very brief, as
it isn’t the focus of this article. Instead of a lengthy discussion, we
provide an overview with references to our other work focused
on the development and realization of a manufacturing operations
management system.
14 J. Erasmus, I. Vanderfeesten, K. Traganos et al. / Computers in Industry 123 (2020) 103297

| HORSE Design Global

Process Design

   
 
 
  
  
   
 

  
 

Process /
Agent Data

| HORSE Config Local

Task
Design

Human
Step Design Task / Step

/ Cell Data

Automated
Step Design

Work Cell
Simulator

HORSE Exec Global |

Global

Global Execution
Awareness

D 4}

Exec Global Abstraction Layer

Exec Local Abstraction Layer

4} 4}

   
 
    
 

Local

Local Execution
Awareness

HORSE Exec Local |

Fig. 6. Software aspect of the HORSE System (Grefen et al., 2016).

The separation between process control and resource control
is an important consideration in the design of a manufacturing
operations management system. Manufacturing operations pro-
cesses are comprised of multiple unitary activities, as illustrated
by the set of model fragments presented in Section 4.3. Process
control is concerned with the initiation of activities according to
the logic encoded in the process model. As those activities are per-
formed by resources, process control is also concerned with the
assignment of resources to activities. Once a resource, or team
of resources, are assigned to an activity, the actions performed
by those resources are governed by resource control. The separa-
tion between process control and resource control is particularly
useful in the manufacturing domain, because of resource diver-
sity. A factory floor may be populated by various of autonomous
and human-operated machines. Furthermore, versatile robotics are
increasingly affordable, human-robot collaboration is now viable in
specialized cases and emerging technologies (e.g. the Internet-of-
Things and augmented reality) are also appearing on the factory
floor (Kang et al., 2016; Lu, 2017; Qu et al., 2016; Tao and Qi, 2018).
This distinction between process control and resource control is
perfectly aligned to the functional hierarchy of IEC62264:2013 (IEC,
2013), as introduced in Section 4.1. Level 3 of the hierarchy refers
to the coordination and monitoring of the workflow across the fac-
tory floor, while level 2 represents the control systems of individual
resources (or minds in the case of human resources). In fact, we
use this distinction as a primary motivator for the use of business
process management in manufacturing operations (Erasmus et al.,
2018).

The process management system used to enact the designed
manufacturing processes was developed as part of the HORSE
Project (www.horse-project.eu), a multi-year research and inno-
vation project funded by the European Commission under the
Horizon 2020 program. The project aims to make advanced man-
ufacturing technology more accessible to small and medium
manufacturing enterprises (Vanderfeesten et al., 2016). These tech-

nologies include human-robot collaboration, augmented reality,
autonomous guided vehicles and teaching robots by demonstra-
tion. The primary outcome of the HORSE Project is a modular
information system that integrates the emerging technologies with
a BPMS. The HORSE System architecture is shown in Fig. 6, at
a fairly high level of aggregation. In the interest of brevity, only
process-related aspects are discussed here, as the system design
is substantially covered in our other work (Erasmus et al., 2020;
Grefen et al., 2017).

The HORSE System has a layered architecture pattern, with
a global orchestration layer and a local control layer (Grefen
et al., 2016). The global layer includes functionality to design and
enact processes and the local layer is responsible for control of
individual resources, in the form of machine control systems, aug-
mented reality and graphical user interfaces. The global layer is
based on Camunda BPM, an open-source BPMS, that provides pro-
cess modelling and enactment functionality. The following three
enhancements were made to Camunda BPM to account for the vast
differences between resources on the factory floor:

1 A new resource design module (named ‘Agent Design’ in Fig. 6)
to specify the capabilities of resources.

2 Anew advanced resource assignment module (as part of ‘Global
Execution in Fig. 6) to select the most appropriate resource (or
team of resources) to perform a task.

3 Anew ‘Global Awareness’ module that performs complex event
processing to identify patterns and trends on the factory floor,
such as a gradual decrease in productivity or process quality.

As a high-level description, individual activities are designed
with the HORSE Config Local subsystem. The HORSE Design Global
subsystem is then used to specify processes and resource capabil-
ities. Those specifications are then used by the HORSE Exec Global
subsystem to enact the processes and coordinate the resource
assignment. Once a resource is assigned, the HORSE Exec Local
J. Erasmus, I. Vanderfeesten, K. Traganos et al. / Computers in Industry 123 (2020) 103297 15

™ i Position new 7 to

box

| } Box placed
_ + Pos

Batch production i
started

y
{ui
s-7

Box full Priority message
sent

  
  

Product
quality

 
   
    
 
 

4. 1 minute
.

 

S i

Woy,
pe
Evaluate

 
  
 

   
  
  

a

  

Product Defect
quality detected

&

     
 
 

Handling

& Unload

assembly from
conveyor belt
Assembly arrived

 
 
  

  

Assembly

 

  
   
    

  
 

False negative
recorded
Defect
=x corrected

conforms to
Visual specification
inspection
Visual inspection

 
 
 

on
*

Ey
Es

  
  

Layer in box full
Space available
in packaging

True defect
evaluated

   

     

Handling Multiple packaging Ea

Packaging
completed

Orie defective

assembly on
reject platform
R iorm

  
    
  
 

  

Defective
assembly placed
on reject platform

  

  
 
   
   

  
 
 
   

Production halted &

Place in
packaging

    

Fig. 7. Process model for the wiper system inspection and packaging.

subsystem controls the actions of that resource, until the assigned
activity is completed (or terminated in case of failure). The global
and local layers of the HORSE System are connected via middle-
ware named OSGi, conceptually represented by the global and local
abstraction layers in Fig. 6. This middleware facilitates communi-
cation between the layers, by allowing resources to subscribe and
listen for messages with pre-defined identifiers. Importantly, the
communication middleware allows machines and robots from var-
ious vendors to collaborate in the same process and driven by the
singular process management system. The middleware also allows
the resources to communicate with the global layer, to report on
the outcome of activities.

6. Evaluation

The research is extensively evaluated, with an emphasis on prac-
tical relevance as part of the HORSE Project. The HORSE System
is implemented and demonstrated at ten factories across Europe.
Only one of the demonstrations is included in this article, but addi-
tional demonstrations are described in our other work (Erasmus
et al., 2020) and all ten cases are elaborated on the HORSE Project
website (http://horse-project.eu/Experiments). The evaluation is
presented in two parts, based on the dual purpose of process mod-
els: enactment and comprehension. The first part demonstrates
how a real process at the factory is modelled as a composition
of process fragments, and then enacted to demonstrate that the
correct process behavior is observed. Secondly, comprehension is
gauged by assessing the ease with which typical users understand
the process models.

6.1. Assessment of the enactment of aggregated process models

The process execution evaluation is done by modelling the pro-
cess as a combination of the process fragments presented in section
4.3. The models are then used to enact the processes using the
HORSE System (introduced in Section 5.2). Successful execution of
the manufacturing processes, in commercial factories, is consid-
ered adequate evidence for practical use of the model fragments to
design executable manufacturing processes.

Fig. 7 shows the process model for the final inspection and pack-
aging of wiper system assemblies. Confidential names are replaced
by generic labels, but all other process details are shown as origi-
nally captured. This model is composed of seven process fragments,

as indicated in Fig. 7. Unfortunately, five of the seven fragments are
handling operations, part of the inventory operations category. As
such, these five fragments are single tasks connected with singu-
lar inflows and outflows. The remaining two fragments are both
product inspection fragments, from the quality operations cate-
gory. Therefore, these two fragments consist of single tasks with
multiple conditional outflows. The first quality task, named “visual
inspection”, has two potential outflows and the second task, named
“evaluated detected defect”, has three possible results.

The process model shown in Fig. 7 includes elements not com-
posed of any process fragments presented in section 4.3. These
elements cater for scenario specific requirements as elicited from
the process owner. Table 13 lists five scenario requirements that are
translated into seven model elements that do not originate from the
process fragments.

As a detailed example, the inspection task named “evaluate
detected defect” has two boundary timer events attached to it. This
is arequirement, specified by the process owner, that a supervisor
must be informed if a detected defect is not evaluated promptly.
Therefore, a priority message is sent after one minute and the task is
interrupted after four minutes. The following elements are present
in the process model of Fig. 7 that do not come from one of the
fragments in Section 4.3:

© Aboundary, non-interrupting, conditional event to initiate a task
to replace the packaging box;

© Aboundary, non-interrupting, conditional event to initiate a task
to replace the carton sheet in the box, to allow placing of a new
layer of products;

© A boundary, non-interrupting, timer event that triggers if a
detected defect is not evaluated within one minute;

© Amessage end-event to send a priority message if a defect is not
evaluated within one minute;

© Aboundary, interrupting, timer event that triggers if a detected
defect is not evaluated within four minutes;

© Aboundary, interrupting, conditional event that triggers if there
is more than one unevaluated defect in the work cell;

© Atermination event that stops process execution if there is more
than one unevaluated defect in the work cell;

The seven model elements listed in Table 13 do not invalidate
the model fragments of Section 4.3. All seven elements are events
that correspond to specific business rules. All manufacturing oper-
16 J. Erasmus, I. Vanderfeesten, K. Traganos et al. / Computers in Industry 123 (2020) 103297

Table 13
Five scenario specific requirements as specified by the process owner.

Requirement

The box that the product is packaged in must
be replaced when it is full to ensure
continued production.

A carton sheet must be placed between layers
of products to protect the product from
transport damage.

Detected defects must be resolved within one

minute after detection.

The product must be discarded if a detected
defect is not resolved within four minutes.

Production must be stopped if there is more
than one unevaluated defect in the process.

Process interpretation

Keep track of the number of products in the
box and an event to initiate a task to replace
the packaging box.

Keep track of the number of products in the
current layer and an event to initiate a task to
replace the carton sheet in the box.

Measure the time since the detection of a
defect and send a message if the defect is not
resolved within one minute.

Measure the time since the detection of a
defect and discard the product if the defect is

not resolved within four minutes.
Keep track of the number of unevaluated

defects in the process and stop process
execution if it exceeds one.

Additional model elements

A boundary, non-interrupting, conditional event that
triggers when the box is full.

A boundary, non-interrupting, conditional event to that
triggers when the layer is full.

A boundary, non-interrupting, timer event that triggers if a
detected defect is not evaluated within one minute.

A message end-event to send a priority message if a defect
is not evaluated within one minute

A boundary, interrupting, timer event that triggers if a
detected defect is not evaluated within four minutes

A boundary, interrupting, conditional event that triggers if
there is more than one unevaluated defect in the work cell.
A termination event that stops process execution if there is

Table 14
Mapping of Prat et al. (2014) and Moody (2009) criteria.

more than one unevaluated defect in the work cell.

 

Prat et al., 2014 Moody, 2009

Self-reported competence Expert-novice differences

Simplicity Complexity Management
. Perceptual Discriminability
Clarity .
Semantic Transparency
Homomorphism Semiotic Clarity
Level of detail Visual Expressiveness
Consistency Cognitive Integration

ations of the process correspond to model fragments, as it should be
for acatalogue of manufacturing operations. The process fragments
are, by their nature, approximations of common manufacturing
operations. Real processes will invariably have specific require-
ments that are not common enough to warrant a standardized
fragment.

The success of this evaluation is that a very specific process
model was obtained as a composition of the process fragments,
in conjunction with scenario specific requirements. Therefore, the
process fragments are useful for creating a specific, executable pro-
cess model. A video of the operational process is available online’,
showing direct evidence of manufacturing operations orchestrated
by a BPMS, based on a BPMN2.0 process model. Interestingly,
this process requires several smart manufacturing innovations,
including advanced robotics, augmented reality and human-robot
collaboration during the correction of defective products. Such low-
level synchronization can’t easily be controlled by a BPMS, because
of slow response times. Instead, we deployed a dedicated con-
trol system that uses state machine modelling for this task. This
points to a general lower limit for the process management engine.
Actions that require sub-second synchronization can’t dependably
be controlled by a BPMS.

6.2. Assessment of the comprehensibility of aggregated process
models

Apart from obtaining correct process behavior, process models
are also used as a facilitator of comprehension and communication.
For this purpose, it is important that the model accurately repre-
sents the process and that it is understandable for the intended
audience. In the case of manufacturing operations processes, the
intended audience is any party that is involved with process
improvement or equipment installation. Notably, process partic-

* https://youtu.be/P6XhSHQ]j_s

The competence level of the person using the notation.

The ability of a visual notation to represent information without overloading the human mind.
The ease and accuracy with which graphical symbols can be differentiated from each other.
The extent to which the meaning of a symbol can be inferred from its appearance.

One-to-one correspondence between symbols and their referent concepts.

The number of visual variables used in a notation.

Cognitive and perceptual integration of information from different diagrams.

ipants are not necessarily considered as part of the intended
audience, because factory workers will often undergo on-the-job
training or at least perform tasks without detailed knowledge of
the process model.

Process models are not necessarily used as instruction or
training material. Therefore, it is pertinent to evaluate the compre-
hension of people involved in process improvement and equipment
installation, to determine whether a business process model is an
accurate and understandable representation of a manufacturing
process.

Prat et al. (2014) recommends eight criteria for the evaluation
of models: self-reported competence, completeness, simplicity,
clarity, style, homomorphism (fidelity of a model to modelled phe-
nomena), level of detail, and consistency. The physics of notation
advocated by Moody (2009) is intended to help creation of new
notations, but it can also be used to evaluate an existing notation.
More importantly, Moody (2009) also provides clear descriptions
of the criteria, helping us to create a questionnaire. Table 14 shows
the mapping of criteria of Prat et al. (2014) and Moody (2009), with
descriptions.

We created a form with ten questions and space for comments
from the descriptions in Table 14. The form was completed by
18 respondents from 11 different organizations. All 18 respon-
dents were involved in the modelling of executable manufacturing
processes. The 11 organizations included four manufacturing com-
panies, four universities and three research organizations. In the
interest of transparency, Table 15 presents the full results of the
survey, followed by summarizing graphs in Fig. 8 and Fig. 9.

Fig. 8 shows overwhelmingly positive results for homomor-
phism. The four questions assess the fidelity of a model to a
modelled phenomenon and are directly based on the criteria advo-
cated by Moody (2009). Similarly, Fig. 9 shows highly positive
results regarding model understandability.

Fifteen respondents also added comments when completing
the questionnaire. The comments reflected the general enthusi-
asm of the respondents, but a few cautionary entries were also
Table 15
Results of the survey regarding comprehension of process models.

Question / Respondent 1

 

What is your competence level (skill, I
knowledge and experience) with BPMN2.0?
(Novice; Intermediate; Expert)

One element can represent more than one S
manufacturing concept. (Never; Sometimes;
Always; Don’t know)

One manufacturing concept can be A
represented with more than element.
(Never; Sometimes; Always; Don’t know)

An element doesn’t represent any N
manufacturing concept. (Never; Sometimes;
Always; Don’t know)

A manufacturing concept can’t be represented S
with any available element or combination
of elements. (Never; Sometimes; Always;

Don’t know)

I find it easy to tell one model element from 1
another. (Range: completely disagree = -2 to
completely agree = +2)

The notation gives enough information about —1
the process. (Range: completely disagree =
-2 to completely agree = +2)

I find it easy to understand the meaning of a 1
model element, from its appearance (how it
looks). (Range: completely disagree = -2 to
completely agree = +2)

I find the process models simple enough (not 1
too complicated). (Range: completely
disagree = -2 to completely agree = +2)

I find it easy to understand the relationship 1
between different models. (Range:
completely disagree = -2 to completely agree
= +2)

Z6ZEOI (OZOZ) EZI A4ISNpu] ul Stajndwo) / ]D Ja SOUDSDAL “y ‘UajsaafiapuvA ‘| ‘snwispD1q ‘f

 

LL
18 J. Erasmus, I. Vanderfeesten, K. Traganos et al. / Computers in Industry 123 (2020) 103297

MNever Sometimes Always’ M1 don't know

One element can represent more than one
manufacturing concept.

One manufacturing concept can be represented with
more than element.

An element doesn't represent any manufacturing
concept.

A manufacturing concept can't be represented with
any available element or combination of elements.

100%

0%

 
 

100%

Fig. 8. Results of homomorphism related questions.

™ Completely disagree © Slightly disagree

| find it easy to tell one model element from another.

The notation gives enough information about the
process.

| find it easy to understand the meaning of a model
element, from its appearance (how it looks).

| find the process madels simple enough (not too
complicated).

| find it easy to understand the relationship between
different models. For example, a process may be...

100%

Neutral / No opinion

® Slightly agree

@ Completely agree

 

of
7°

100%

Fig. 9. Questions and results related to model understandability.

recorded. In the interest of brevity, only a summary of the com-
ments is discussed here. One respondent remarked that it’s easy to
create business models but difficult to create executable models,
while another respondent appreciates the power of subprocesses
to limit the number of elements on a diagram. Three respondents
mentioned that BPMN is easy to learn, but also complained about
a lack of good learning material. Two respondents found it diffi-
cult to distinguish manufacturing tasks from each other, because
the same symbol is used for any task. It is especially difficult to see
which tasks are performed by humans or machines.

Most notably, three respondents found it difficult to relate to
the notation, due to a lack of manufacturing specific symbols. They
commented that the following concepts can’t easily be represented
with BPMN: buffers, queues and flow of material. Although those
concepts can be captured in a roundabout way, as we found in
Section 4.3, such techniques are not intuitive.

7. Discussion

The comments from the respondents in the comprehension
evaluation (Section 6.2) raise a few interesting topics. The men-
tioned notation deficiencies contradict the set of model fragments
(Section 4.3). The flow of physical material was found lacking
in BPMN2.0 (see the fixed installation transporting operation in
Table 10), but the other two deficiencies (buffers and queues) were
not identified. In fact, the buffering operation fragment in Table 10
explicitly makes use of the concept of queuing to release mate-
rial according to a predetermined condition. Thus, the difference
between the manufacturing process fragments and the experience

of the respondents supports the argument that the notation is not
intuitive for manufacturing processes. While all concepts can be
represented with BPMN, the process fragments are rather obscure
and difficult to understand.

The comment regarding the development of executable mod-
els is also worth discussing. It is clearly more difficult to create
executable models, considering the need to control the activities
of humans, robots and machines. However, the expressiveness of
BPMN helps with the complexity of manufacturing processes. For
example, the repetitive nature of some manufacturing activities
can be modelled as multi-instances, as is done for the multiple
packaging operation, shown in Table 10.

This approach to the modelling of manufacturing operations
allows extensive flexibility and design freedom. All activities shown
on a single view of the process do not have to represent similar lev-
els of detail. For example, the “removal of sand mold” and “transport
to storage area” activities shown in Fig. 5 may represent different
amounts of work. “Removal of sand mold” may involve a compli-
cated work instruction, while the transport activity is a singular
action. This freedom makes it possible to use multiple instances
at different levels of process aggregation to accurately capture the
repetitive nature of certain manufacturing operations.

The use of business process management in manufacturing
operations will not replace current practices. Detailed scheduling
and resource management will remain as important and expedi-
ent for the foreseeable future. The prospect is rather to add an
additional perspective that can be used to view and manage the
activities of the manufacturing system, independent of the location
where those activities happen and who/what is involved in those
J. Erasmus, I. Vanderfeesten, K. Traganos et al. / Computers in Industry 123 (2020) 103297 19

activities. The additional perspective is contemplated in anticipa-
tion of the continued increase of complexity in factories (Ugarte
et al., 2009).

8. Conclusion

This research demonstrates the use of business process mod-
elling for manufacturing operations, using a catalogue of model
fragments that capture the essential elements of operations. The
research is motivated by the promise of seamless cross-functional
process management that can be achieved by using the same
notation for business management and operations functions. To
align with the most common industry standards, we have cho-
sen IEC62264:2013 for the description of manufacturing operations
and BPMN2.0 as the process specification language in our work.

The catalogue of model fragments is developed and presented in
a structured and reproducible manner. Firstly, a single list of manu-
facturing operations, with accompanying descriptions, is compiled
to represent common activities in manufacturing processes. This
list of manufacturing operations can act as a frame of reference
for further research endeavors. Secondly, the manufacturing oper-
ations are decomposed into concepts that must be represented
with BPMN2.0 primitives. Thirdly, the concepts are translated to
BPMN2.0 and illustrated as process model fragments. Fourth, and
lastly, it is shown how the process model fragments can be com-
bined into practical, executable manufacturing processes.

The contribution of this work is the catalogue of manufacturing
process model fragments, presented in Section 4.3. These fragments
can be used as building blocks to create executable process models.
This way of working is demonstrated by modelling and enacting
a inspection and packaging process at a factory. While only one
demonstration is included in this article, the same evaluation was
performed at nine other factories in Europe.

In conclusion, the use of BMPN2.0 to specify executable man-
ufacturing processes was successfully demonstrated. The only
difficulty identified with respect to the modelling of manufacturing
operations is related to the flow of materials. More specifically, the
time it takes for material to flow. If some physical items must flow
from one location to another between two manufacturing opera-
tions, BPMN2.0 does not include the primitives to represent the
time that elapses for the material to move - something that is
explainable by the fact that the notation was designed for processes
with an administrative character. We opted for an approximate rep-
resentation of this construct, by using a conditional intermediate
event to determine when the material arrives at the next work cell.
This may not be a perfect representation, but it is considered good
enough to avoid the introduction of yet another BPMN extension.

Apart from the difficulty with the flow of material, some
respondents of the evaluation questionnaire found the notation
unintuitive for manufacturing processes, due to a lack of specific
manufacturing symbols. This is not surprising, given the novelty
of using a business process modelling notation for manufacturing
operations, as well as the focus on physical aspects in manufactur-
ing operations design. At this time, we prefer not to speculate ona
potential solution to this problem, but rather relegate it to future
work, as this will require substantial effort.

This research presented in this article is positioned as a
stepping-stone towards more research and practical implementa-
tion. The current set of process model fragments utilizes very few
of the primitives of BPMN2.0. For example, message flow and data
items were not explicitly excluded from our assessment, but these
concepts were not needed for the catalogue of manufacturing oper-
ations. Such concepts can perhaps be used to provide more precise
guidance on the combination of process fragments into practical
process models. Furthermore, the current research is limited to dis-
crete manufacturing operations, thus excluding other production

types, such as continuous production. The same research method-
ology can be applied in other domains related to manufacturing.
More interestingly, the set of model fragments can be implemented
as acatalogue of operations in a process modelling tool to help users
design manufacturing process models.

This work is part of a larger effort to develop new manu-
facturing process management techniques and tools. The rise of
new technologies such as the Internet-of-Things, versatile robotics
and augmented reality opens new possibilities for operations
management. Instead of locally controlled work cells, a single pro-
cess management system can be used to centrally orchestrate
all activities, including business management and manufacturing
operations activities. Thus, the set of process model fragments pre-
sented in Section 4.3 represents a significant step towards the
unification of process modelling and management across all busi-
ness functions, driving integration and cooperation.

CRediT authorship contribution statement

Jonnro Erasmus: Conceptualization, Methodology, Valida-
tion, Investigation, Writing - original draft, Visualization. Irene
Vanderfeesten: Methodology, Writing - review & editing, Super-
vision, Project administration, Funding acquisition. Konstantinos
Traganos: Software, Validation, Investigation, Writing - review &
editing, Visualization. Paul Grefen: Conceptualization, Methodol-
ogy, Writing - review & editing, Supervision, Funding acquisition.

Declaration of Competing Interest

The authors report no declarations of interest.

Acknowledgements

The work described in this paper was part of the HORSE Project
and has received funding from the European Union’s Horizon
2020 research and innovation program under grant agreement no.
680734.

References

Baumgraf, A., Dijkman, R., Grefen, P., Pourmirza, S., V6lzer, H., Weske, M., 2015]. A
software architecture for transportation planning and monitoring in a collabo-
rative network. In: Camarinha-Matos, L.M., Bénaben, F., Picard, W. (Eds.), Risks
and Resilience of Collaborative Networks: 16th IFIP WG 5.5 Working Confer-
ence on Virtual Enterprises, IFIP Advances in Information and Communication
Technology. Springer International Publishing, Cham, pp. 277-284.

Berente, N., Vandenbosch, B., Aubert, B., 2009]. Information flows and business pro-
cess integration. Bus. Process. Manag. J. 15, 119-141, http://dx.doi.org/10.1108/
14637150910931505.

Bohms, H.M., Tolman, F.P., 1993]. A methodology for expressing CIM reference archi-
tectures. Robot. Comput. Manuf. 10, 131-140, http://dx.doi.org/10.1016/0736-
5845(93)90035-I.

Braglia, M., Carmignani, G., Zammori, F., 2006]. A new value stream mapping
approach for complex production systems. Int. J. Prod. Res. 44, 3929-3952,
http://dx.doi.org/10.1080/00207540600690545.

Brahe, S., 2007]. BPM on Top of SOA: experiences from the financial industry. In:
Alonso, G., Dadam, P., Rosemann, M. (Eds.), Business Process Management: 5th
International Conference, Lecture Notes in Computer Science. Springer Berlin
Heidelberg, Berlin, Heidelberg, pp. 96-111.

Brandimarte, P., Cantamessa, M., 1995]. Methodologies for designing CIM sys-
tems: a critique. Comput. Ind. 25, 281-293, http://dx.doi.org/10.1016/0166-
3615(94)00037-Q.

Braun, R., Esswein, W., 2014]. Classification of domain-specific BPMN extensions.
In: The Practice of Enterprise Modeling, Lecture Notes in Business Information
Processing, Springer, Berlin, Heidelberg, pp. 42-57, http://dx.doi.org/10.1007/
978-3-662-45501-2_4.

Braun, R., Schlieter, H., Burwitz, M., Esswein, W., 2014]. BPMN4CP: design and imple-
mentation of a BPMN extension for clinical pathways. In: 2014 IEEE International
Conference on Bioinformatics and Biomedicine (BIBM), IEEE, Belfast, UK, pp.
9-16, http: //dx.doi.org/10.1109/BIBM.2014.6999261.

Cadavid, J., Alférez, M., Gérard, S., Tessier, P., 2015]. Conceiving the model-driven
smart factory. In: Proceedings of the 2015 International Conference on Software
and System Process, ICSSP 2015, ACM, New York, NY, USA, pp. 72-76, http://dx.
doi.org/10.1145/2785592.2785602.
20 J. Erasmus, I. Vanderfeesten, K. Traganos et al. / Computers in Industry 123 (2020) 103297

Centre for Trade Facilitation and Electronic Business, 2001]. Codes for Modes of
Transport, second. ed. United Nations, Geneva, Switzerland.

Chen, D., 2005]. Enterprise-control system integration - an international standard.
Int. J. Prod. Res. 43, 4335-4357, http: //dx.doi.org/10.1080/00207540500142399.

Cheng-Leong, A., Pheng, K.L., Leng, G.R.K., 1999]. IDEF*: a comprehensive modelling
methodology for the development of manufacturing enterprise systems. Int. J.
Prod. Res. 37, 3839-3858, http://dx.doi.org/10.1080/002075499189790.

Chinosi, M., Trombetta, A., 2012]. BPMN: an introduction to the standard. Comput.
Stand. Interfaces 34, 124-134, http://dx.doi.org/10.1016/j.csi.2011.06.002.

Chung, P.W.H., Cheung, L., Stader, J., Jarvis, P., Moore, J., Macintosh, A., 2003].
Knowledge-based process management—an approach to handling adaptive
workflow. Knowledge Based Syst. 16, 149-160, http://dx.doi.org/10.1016/
S0950-7051(02)00080-1.

Davidsson, P., Henesey, L., Ramstedt, L., Tornquist, J., Wernstedt, F., 2005]. An anal-
ysis of agent-based approaches to transport logistics. Transp. Res. Part C Emerg.
Technol. 13, 255-271, http://dx.doi.org/10.1016/j.trc.2005.07.002.

Decker, G., Barros, A., 2008]. Interaction modeling using BPMN. In: Proceedings of
the 2007 International Conference on Business Process Management, BPM’07,
Springer-Verlag, Berlin, Heidelberg, pp. 208-219.

Defense Acquisition University, 2011. Integrated Product Support Element Guide-
book. Defense Acquisition University, USA.

Dijkman, R., Van Gorp, P., 2010]. BPMN 2.0 execution semantics formalized as graph
rewrite rules. In: Mendling, J., Weidlich, M., Weske, M. (Eds.), Business Process
Modeling Notation. Springer, Berlin Heidelberg, Berlin, Heidelberg, pp. 16-30.

Doumeingts, G., Vallespir, B., Chen, D., 1995]. Methodologies for designing CIM
systems: a survey. Comput. Ind. 25, 263-280, http://dx.doi.org/10.1016/0166-
3615(94)00036-P.

Erasmus, J., Vanderfeesten, I., Traganos, K., Grefen, P., 2018]. The case for unified
process management in smart manufacturing. In: EDOC 2018. Presented at
the 22nd International Enterprise Distributed Object Computing Conference,
IEEE, Stockholm, Sweden, pp. 218-227, http://dx.doi.org/10.1109/EDOC.2018.
00035.

Erasmus, J., Vanderfeesten, I., Traganos, K., Keulen, R., Grefen, P., 2020]. The HORSE
project: the application of business process management for flexibility in smart
manufacturing. Appl. Sci. 10, 4145, http://dx.doi.org/10.3390/app10124145.

Fleischmann, A., Kannengiesser, U., Schmidt, W., Stary, C., 2013]. Subject-
oriented modeling and execution of multi-agent business processes. In: 2013
IEEE/WIC/ACM International Joint Conferences on Web Intelligence (WI) and
Intelligent Agent Technologies (IAT), IEEE, Atlanta, GA, USA, pp. 138-145, http://
dx.doi.org/10.1109/WI-IAT.2013.102.

Fleischmann, A., Schmidt, W., Stary, C., 2015]. Subject-oriented business process
management. In: J, vomBrocke, M, Rosemann (Eds.), Handbook on Business
Process Management 2: Strategic Alignment, Governance, People and Culture,
International Handbooks on Information Systems. Springer, Berlin Heidelberg,
Berlin, Heidelberg, pp. 601-621, http://dx.doi.org/10.1007/978-3-642-45103-4_
25.

Fowler, M., 1997]. Analysis Patterns: Reusable Object Models, the Addison-wesley
Series in Object-oriented Software Engineering. Addison Wesley, Menlo Park,
Calif.

Garcia-Dominguez, A., Marcos-Barcena, M., Medina, I.V., 2012. A comparison of
BPMN 2.0 with other notations for manufacturing processes. In: The 4th Man-
ufacturing Engineering Society International Conference, AIP Publishing, Cadiz,
Spain, pp. 593-600, http://dx.doi.org/10.1063/1.4707613.

Gerber, T., Theorin, A., Johnsson, C., 2014]. Towards a seamless integration between
process modeling descriptions at business and production levels: work in
progress. J. Intell. Manuf. 25, 1089-1099, http://dx.doi.org/10.1007/s10845-
013-0754-x.

Ghiani, G., Laporte, G., Musmanno, R., 2013]. Introducing logistics. In: Introduction
to Logistics Systems Management. John Wiley & Sons, Ltd, Chichester, UK, pp.
1-43, http://dx.doi.org/10.1002/9781118492185.ch1.

Grefen, P., Brouns, N., Ludwig, H., Serral, E., 2019]. Co-location specification for
IoT-aware collaborative business processes. In: Cappiello, C., Ruiz, M. (Eds.),
Information Systems Engineering in Responsible Information Systems. Springer
International Publishing, Cham, pp. 120-132.

Grefen, P., Mehandjiev, N., Kouvas, G., Weichhart, G., Eshuis, R., 2009]. Dynamic
business network process management in instant virtual enterprises. Comput.
Ind. 60, 86-103, http://dx.doi.org/10.1016/j.compind.2008.06.006.

Grefen, P., Vanderfeesten, I., Boultadakis, G., 2017]. D2.2A - HORSE Complete System
Design - Public Version (Project Deliverable No. HORSE-D2.2a). HORSE Consor-
tium. Brussels, Belgium.

Grefen, P., Vanderfeesten, I., Boultadakis, G., 2016]. Architecture Design of the HORSE
Hybrid Manufacturing Process Control System (Design Report). Technische Uni-
versiteit Eindhoven, Eindhoven, The Netherlands.

Gregor, S., Hevner, A.R., 2013]. Positioning and presenting design science research
for maximum impact. MIS Q. 37, 337-356.

Grewal, C., 2008]. An initiative to implement lean manufacturing using value stream
mapping in a small company. Int. J. Manuf. Technol. Manag. 15, 404-417, http://
dx.doi.org/10.1504/IJMTM.2008.020176.

Groover, M.P., 2016]. Principles of Modern Manufacturing: SI Version, 6th ed. John
Wiley & Sons, Singapore.

Groover, M.P., 2011]. Fundamentals of Modern Manufacturing: Materials, Processes,
and Systems, 4th ed. J. Wiley & Sons, Hoboken, NJ.

Gschwind, T., Koehler, J., Wong, J., 2008]. Applying patterns during business process
modeling. In: Dumas, M., Reichert, M., Shan, M.-C. (Eds.), Business Process Man-
agement. Springer, Berlin, Heidelberg, pp. 4-19, http://dx.doi.org/10.1007/978-
3-540-85758-7 4.

Haarmann, S., Podlesny, N.J., Hewelt, M., Meyer, A., Weske, M., 2015]. Production
case Management: a prototypical process engine to execute flexible business
processes. In: CEUR Workshop Proceedings, Innsbruck, Austria, pp. 110-114.

Hanson, J.E., Nandi, P., Kumaran, S., 2002. Conversation support for business process
integration. In: Proceedings of the Sixth International Enterprise Distributed
Object Computing Conference, IEEE, Lausanne, Switzerland, pp. 65-74, http://
dx.doi.org/10.1109/EDOC.2002.1137697.

Hausman, W.H., Montgomery, D.B., Roth, A.V., 2002]. Why should marketing and
manufacturing work together?: some exploratory empirical results. J. Oper.
Manag. 20, 241-257, http://dx.doi.org/10.1016/S0272-6963(02)00010-4.

Hevner, A.R., March, S.T., Park, J., Ram, S., 2004]. Design science in information sys-
tems research. MIS Q. 28, 75-105.

Hewelt, M., Weske, M., 2016]. A hybrid approach for flexible case modeling and exe-
cution. In: La Rosa, M., Loos, P., Pastor, O. (Eds.), Business Process Management
Forum. Springer International Publishing, Cham, pp. 38-54, http://dx.doi.org/
10.1007/978-3-319-45468-9_3.

Hildebrandt, T., Mukkamala, R.R., Slaats, T., 2012]. Nested dynamic condition
response graphs. In: Arbab, F., Sirjani, M. (Eds.), Fundamentals of Software Engi-
neering, Lecture Notes in Computer Science. Springer, Berlin Heidelberg, Tehran,
Iran, pp. 343-350, http://dx.doi.org/10.1007/978-3-642-29320-7_23.

IEC, 2013]. Enterprise-control System Integration - Part 1: Models and Termi-
nology, 2nd ed. The International Electrotechnical Commission (IEC), Geneva,
Switzerland.

INCOSE, 2015]. Systems Engineering Handbook: a Guide for System Life Cycle Pro-
cesses and Activities, fourth. ed. John Wiley & Sons, Inc., Hoboken, NJ.

Jalali, A.. Wohed, P., Ouyang, C., Johannesson, P., 2013]. Dynamic weaving in aspect
oriented business process management. In: On the Move to Meaningful Internet
Systems: OTM 2013 Conferences, Lecture Notes in Computer Science. Springer
Berlin Heidelberg, Berlin, Heidelberg, pp. 2-20, http://dx.doi.org/10.1007/978-
3-642-41030-7_2.

Kamara, J.M., Anumba, C.J., Evbuomwan, N.F.O., 2000]. Process model for client
requirements processing in construction. Bus. Process. Manag. J. 6, 251-279,
http://dx.doi.org/10.1108/14637150010325462.

Kang, H.S., Lee, J.Y., Choi, S., Kim, H., Park, J.H., Son, J.Y., Kim, B.H., Noh, S.D., 2016].
Smart manufacturing: past research, present findings, and future directions. Int.
J. Precis. Eng. Manuf. Technol. 3, 111-128, http://dx.doi.org/10.1007/s40684-
016-0015-5.

Keyte, B., Locher, D., 2004. The Complete Lean Enterprise: Value Stream Mapping
for Administrative and Office Processes, 1st ed. Productivity Press, New York,
http://dx.doi.org/10.1201/b16650.

Kim, C.-H., Weston, R.H., Hodgson, A., Lee, K.-H., 2003]. The complementary use of
IDEF and UML modelling approaches. Comput. Ind. 50, 35-56, http://dx.doi.org/
10.1016/S0166-3615(02)00145-8.

Kobayashi, T., Tamaki, M., Komoda, N., 2003]. Business process integration as a solu-
tion to the implementation of supply chain management systems. Inf. Manag.
40, 769-780, http://dx.doi.org/10.1016/S0378-7206(02)00102-7.

Langford, J.W., 2007]. Logistics: Principles and Applications, 2nd ed. McGraw-Hill
SOLE Press series. SOLE Press/McGraw-Hill, New York.

Lu, Y., 2017]. Industry 4.0: a survey on technologies, applications and open research
issues. J. Ind. Inf. Integr. 6, 1-10, http://dx.doi.org/10.1016/j.jii.2017.04.005.
Marengo, E., Nutt, W., Perktold, M., 2018]. Construction process modeling: repre-
senting activities, items and their interplay. In: Weske, M., Montali, M., Weber,
I., vom Brocke, J. (Eds.), Business Process Management. Springer International
Publishing, Cham, pp. 48-65, http://dx.doi.org/10.1007/978-3-319-98648-7_4.

Meyer, A., Herzberg, N., Puhlmann, F., Weske, M., 2014]. Implementation frame-
work for production case management: modeling and execution. In: 18th
International Enterprise Distributed Object Computing Conference, IEEE, Ulm,
Germany, pp. 190-199, http://dx.doi.org/10.1109/EDOC.2014.34.

Moody, D., 2009]. The “Physics” of notations: toward a scientific basis for construct-
ing visual notations in software engineering. Ieee Trans. Softw. Eng. 35, 756-779,
http://dx.doi.org/10.1109/TSE.2009.67.

NA 152-06-10 AA National Committee, 2003]. DIN 8580:2003-09 Manufacturing
Processes - Terms and Definitions, 2003rd-09 Ed. Beuth Verlag, Berlin, Germany.

Neubauer, M., Stary, C. (Eds.), 2017]. S-BPM in the Production Industry. , first. ed.
Springer International Publishing, Cham, Switzerland.

Neubauer, M., Stary, C., Krenn, F., 2014. Subject-oriented process design across
organizational control layers. In: 2014 12th IEEE International Conference on
Industrial Informatics (INDIN), IEEE, Porto Alegre, Brazil, pp. 418-423, http://
dx.doi.org/10.1109/INDIN.2014.6945549,

Oberhauser, R., Stigler, S., 2017]. Microflows: enabling agile business process mod-
eling to orchestrate semantically-annotated microservices. In: Proceedings of
the 7th International Symposium on Business Modeling and Software Design,
Barcelona; Spain, pp. 19-28.

Object Management Group, 2014]. Business Process Model and Notation (BPMN),
2.0.2. Ed. Object Management Group, Inc., USA.

O’Leary-Kelly, S.W., Flores, B.E., 2002]. The integration of manufacturing and mar-
keting/sales decisions: impact on organizational performance. J. Oper. Manag.
20, 221-240, http://dx.doi.org/10.1016/S0272-6963(02)00005-0.

Pauker, F., Mangler, J., Rinderle-Ma, S., Pollak, C., 2018]. Centurio.Work - modular
secure manufacturing orchestration, in: proceedings of the dissertation award,
demonstration, and industrial track at BPM 2018. In: Presented at the 16th Inter-
national Conference on Business Process Management, CEUR-WS.Org, Sydney,
Australia.

Pesic, M., van der Aalst, W.M.P., 2006]. A declarative approach for flexible busi-
ness processes management. In: Eder, J., Dustdar, S. (Eds.), Business Process
Management Workshops, Lecture Notes in Computer Science. Springer, Berlin
J. Erasmus, I. Vanderfeesten, K. Traganos et al. / Computers in Industry 123 (2020) 103297 21

Heidelberg, Vienna, Austria, pp. 169-180, http://dx.doi.org/10.1007/11837862_
18.

Prades, L., Romero, F., Estruch, A., Garcia-Dominguez, A., Serrano, J., 2013]. Defin-
ing a methodology to design and implement business process models in BPMN
according to the standard ANSI/ISA-95 in a manufacturing enterprise. Procedia
Eng. 63, 115-122, http://dx.doi.org/10.1016/j.proeng.2013.08.283.

Prat, N., Comyn-Wattiau, I., Akoka, J., 2014]. Artifact evaluation in information sys-
tems design-science research - a holistic View. In: Proceeding of the 19th Pacific
Asia Conference on Information Systems, Association for Information Systems,
Chengdu, China.

Qu, T., Lei, S.P., Wang, Z.Z., Nie, D.X., Chen, X., Huang, G.Q., 2016]. loT-based real-time
production logistics synchronization system under smart cloud manufacturing.
Int. J. Adv. Manuf. Technol. 84, 147-164, http://dx.doi.org/10.1007/s00170-015-
7220-1.

Ray, S., 2008]. Introduction to Materials Handling. New Age International (P) Ltd.,
Publishers, New Delhi.

Reichert, M., 2011]. What BPM technology can Do for healthcare process support.
In: Peleg, M., Lavrac¢, N., Combi, C. (Eds.), Artificial Intelligence in Medicine: 13th
Conference on Artificial Intelligence in Medicine, Lecture Notes in Computer
Science. Springer Berlin Heidelberg, Berlin, Heidelberg, pp. 2-13.

Reijers, H.A., Russell, N., van der Geer, S., Krekels, G.A.M., 2010]. Workflow for
healthcare: a methodology for realizing flexible medical treatment processes.
In: Rinderle-Ma, S., Sadiq, S., Leymann, F. (Eds.), Business Process Management
Workshops. Springer Berlin Heidelberg, Berlin, Heidelberg, pp. 593-604, http://
dx.doi.org/10.1007/978-3-642-12186-9_57.

Sale, R.S., Mesak, H.I., Inman, R.A., 2017]. A dynamic marketing-operations interface
model of new product updates. Eur. J. Oper. Res. 257, 233-242, http://dx.doi.
org/10.1016/j.ejor.2016.07.051.

Sawhney, R., 2006]. Interplay between uncertainty and flexibility across the value-
chain: towards a transformation model of manufacturing flexibility. J. Oper.
Manag. 24, 476-493, http://dx.doi.org/10.1016/j.jom.2005.11.008.

Scheer, A.-W., 1994]. CIM: Towards the Factory of the Future, third. ed. Springer,
Berlin.

Shitkova, M., Taratukhin, V., Becker, J., 2015]. Towards a methodology and a tool for
modeling clinical pathways. Procedia Comput. Sci. 63, 205-212, http://dx.doi.
org/10.1016/j.procs.2015.08.335.

Stock, J.R., Lambert, D.M., 2001]. Strategic Logistics Management, 4th ed. The
McGraw-Hill/Irwin series in marketing. McGraw-Hill/Irwin, Boston.

Takemura, T., 2008]. Formal semantics and verification of BPMN transaction and
compensation. In: IEEE Asia-Pacific Services Computing Conference, IEEE, Yilan,
Taiwan, pp. 284-290, http://dx.doi.org/10.1109/APSCC.2008.208.

Tang, C.S., 2010]. A review of marketing-operations interface models: from co-
existence to coordination and collaboration. Int. J. Prod. Econ. 125, 22-40, http://
dx.doi.org/10.1016/j.ijpe.2010.01.014.

Tao, F., Qi, Q., 2018]. New IT driven service-oriented smart manufacturing: frame-
work and characteristics. IEEE Transactions on Systems, Man, and Cybernetics:
Systems, 1-11, http://dx.doi.org/10.1109/TSMC.2017.2723764.

Todd, R., 1994. Manufacturing Processes Reference Guide, 4th ed. Industrial Press,
Inc., USA.

Ugarte, B.Sde, Artiba, A., Pellerin, R., 2009]. Manufacturing execution system - a
literature review. Prod. Plan. Control. 20, 525-539, http://dx.doi.org/10.1080/
09537280902938613.

US Air Force, 1969]. MIL-STD-499 System Engineering Management, first. ed. US Air
Force, Washington, DC.

van der Aalst, W.M.P., Barros, A.P., ter Hofstede, A.H.M., Kiepuszewski, B., 2000].
Advanced workflow patterns. In: Scheuermann, P., Etzion, O. (Eds.), Cooperative
Information Systems. Springer Berlin Heidelberg, Berlin, Heidelberg, pp. 18-29,
http://dx.doi.org/10.1007/10722620_2.

van der Aalst, W.M.P., ter Hofstede, A.H.M., Kiepuszewski, B., Barros, A.P., 2003].
Workflow patterns. Distrib. Parallel Databases 14, 5-51, http://dx.doi.org/10.
1023/A:1022883727209.

Van Gorp, P., Vanderfeesten, I., Dalinghaus, W., Mengerink, J., van der Sanden, B.,
Kubben, P., 2013]. Towards generic MDE support for extracting purpose-specific
healthcare models from annotated, unstructured texts. In: Weber, J., Perseil,
I. (Eds.), Foundations of Health Information Engineering and Systems: Second
International Symposium, Lecture Notes in Computer Science. Springer Berlin
Heidelberg, Berlin, Heidelberg, pp. 213-221.

Vanderfeesten, I., Erasmus, J., Grefen, P., 2016]. The HORSE project: IloT and Cloud
solutions for dynamic manufacturing processes. In: Lazovik, A., Schulte, S. (Eds.),
Proceedings of the 5th European Conference on Service-Oriented and Cloud
Computing. Springer, Berlin, Heidelberg, Germany, Vienna, Austria, pp. 303-304,
http://dx.doi.org/10.1007/978-3-319-72125-5.

Weerdt, J.D., Schupp, A., Vanderloock, A., Baesens, B., 2013]. Process Mining for
the multi-faceted analysis of business processes - A case study in a finan-
cial services organization. Comput. Ind. 64, 57-67, http://dx.doi.org/10.1016/
j.compind.2012.09.010.

Wieringa, R., 2009]. Design science As nested problem solving. In: Proceedings of
the 4th International Conference on Design Science Research in Information
Systems and Technology, DESRIST’ 09, ACM, New York, NY, USA, p. 8, http://dx.
doi.org/10.1145/1555619.1555630, 1-8:12.

Williams, T.J., 1994]. The Purdue enterprise reference architecture. Comput. Ind. 24,
141-158, http://dx.doi.org/10.1016/0166-3615(94)90017-5.

Witsch, M., Vogel-Heuser, B., 2012]. Towards a formal specification framework
for manufacturing execution systems. IEEE Trans. Industr. Inform. 8, 311-320,
http://dx.doi.org/10.1109/TII.2012.2186585.

Zor, S., Gdrlach, K., Leymann, F., 2010]. Using BPMN for modeling manufacturing
processes. Proceedings of 43rd CIRP International Conference on Manufacturing
Systems, 515-522.

Zor, S., Schumm, D., Leymann, F., 2011]. A proposal of BPMN extensions for the man-
ufacturing domain. In: Proceedings of the 44th CIRP International Conference on
Manufacturing Systems, CIRP: Paris, France, Madison, MI, USA.
