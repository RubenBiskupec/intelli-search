Finite Fields and Their Applications 68 (2020) 101733

      

ELSEVIER

  

Contents lists available at ScienceDirect
Finite Fields and Their Applications

www.elsevier.com/locate/ffa

FINITE FIELDS
Ae M islstl wis O08 eh)

 

 

Classification of quadratic APN functions with ®

Check for

 

coefhcients in Ig for dimensions up to 9 me

Yuyin Yu*, Nikolay Kaleyski®*, Lilya Budaghyan ”,

Yongqiang Li ©

* College of Mathematics and Information Science, Guangzhou University,

Guangzhou, China

> Department of informatics, University of Bergen, Norway
© State Key Laboratory of Information Security, Institute of Information
Engineering, Chinese Academy of Sciences, China

ARTICLE INFO

Article history:

Received 28 December 2019
Received in revised form 15 May
2020

Accepted 28 July 2020

Available online 28 August 2020
Communicated by Pascale Charpin

MSC:
94A60
06 E30

Keywords:

Boolean functions
Almost perfect nonlinear
Almost bent

Quadratic functions

* Corresponding author.

ABSTRACT

Almost perfect nonlinear (APN) and almost bent (AB)
functions are integral components of modern block ciphers
and play a fundamental role in symmetric cryptography. In
this paper, we describe a procedure for searching for quadratic
APN functions with coefficients in Fe over the finite field Fon
and apply this procedure to classify all such functions over
Fon with n < 9. We discover two new APN functions (which
are also AB) over Fos that are CCZ-inequivalent to any known
APN function over this field. We also verify that there are no
quadratic APN functions with coefficients in Fz over F2n with
6 <n <8 other than the currently known ones.
© 2020 The Author(s). Published by Elsevier Inc. This is an
open access article under the CC BY license
(http: //creativecommons.org/licenses/by/4.0/).

E-mail addresses: yuyuyinQ@163.com (Y. Yu), Nikolay.Kaleyski@Quib.no (N. Kaleyski),
Lilya. BudaghyanQ@uib.no (L. Budaghyan), yongq.lee@gmail.com (Y. Li).

https: //doi.org/10.1016/j.ffa.2020.101733

1071-5797/© 2020 The Author(s). Published by Elsevier Inc. This is an open access article under the CC
BY license (http://creativecommons.org/licenses/by/4.0/).
2 Y. Yu et al. / Finite Fields and Their Applications 68 (2020) 1017383

1. Introduction

A vectorial Boolean (n, m)-function is a function between the vector spaces F3’ and F3”
over the finite field Fp = {0,1} for some two positive integers m,n. Vectorial Boolean
functions play a crucial role in the design of modern block ciphers (where they are
referred to as “S-boxes” or “substitution boxes”), in which they typically represent the
only nonlinear part of the encryption. For this reason, the resistance of a block cipher
to cryptanalytic attacks directly depends on the properties of its substitution boxes.
Vectorial Boolean (n,n)-functions are of particular importance in cryptography since
one typically wishes to substitute a sequence of bits for another sequence of the same
length. In this case, the vector space F3’ is usually identified with the finite field Fon,
and (n,n)-functions are expressed as polynomials over Fn.

Among the most powerful cryptanalytic attacks known to date are the so-called “differ-
ential cryptanalysis” introduced by Biham and Shamir [1], and the “linear cryptanalysis”
introduced by Matsui [25]. Almost perfect nonlinear (APN) functions were introduced
by Nyberg [26] as the class of (n,n)-functions offering optimal resistance to differential
cryptanalysis, while almost bent (AB) functions are the ones that are optimal against
linear cryptanalysis [21]. Finding new examples and constructions of APN and AB func-
tions is very important not only for the purpose of constructing new block ciphers in
cryptography, but also for other areas of computer science and discrete mathematics
(such as combinatorics, sequence design, coding theory, design theory) in which some
APN functions correspond to optimal objects. Furthermore, finding new APN and AB
functions is a difficult task, especially for large dimensions n: indeed, to date only six
infinite monomial APN families and twelve infinite polynomial APN families have been
discovered,! despite ongoing research on the topic since the early 90’s. Among these, there
are four infinite families of AB monomials and eight infinite families of AB polynomials.

The case of quadratic APN functions is more tractable than the general one, which
is evinced by the fact that all the infinite polynomial families constructed so far are
quadratic, and only one known sporadic example of a non-quadratic (up to CCZ-
equivalence) APN function (which is defined over F2.) is known [23]. Nevertheless,
quadratic APN functions are an important ongoing direction of research: in 2010, Dil-
lon et al. discovered an APN permutation in dimension n = 6, thereby disproving the
conjecture that APN functions over fields of even dimension could never be bijective [5].
Despite Dillon’s permutation not being a quadratic APN function per se, it was con-
structed by traversing the CCZ-equivalence class of a quadratic function. The question
of the existence of other APN permutations for even n remains open, and investigating
new instances of quadratic APN functions is a promising way to approach it.

A lot of research has been done on the topic of APN functions in recent years.
An infinite construction of APN binomials inequivalent to power functions is given

' Tables of the known infinite monomial and polynomial families can be found at https://boolean.h.uib.
no/mediawiki/.
Y. Yu et al. / Finite Fields and Their Applications 68 (2020) 101733 3

in [13], disproving the long-standing conjecture that all infinite APN families must be
monomials. Further infinite constructions of APN and AB functions are proposed in
[2,8-15,29,32]. Previously, a classification of all APN functions over Fon for n up to 5
was given in [3], with classification for dimensions n higher than 5 remaining incomplete
at the time of writing. In the case of n = 6, classification is complete for the particular
cases of quadratic and cubic functions: in [4], 13 CCZ-inequivalent quadratic functions
over Fo. are listed, and it is shown that these encompass all quadratic CCZ-classes over
Foe in [22]; as for the case of cubic APN functions, their classification is given in [24].
Furthermore, a study of the EA-equivalence classes corresponding to all known APN
functions over Fy is presented in [16,17]. More background on APN functions and their
construction can be found e.g. in [7] or [19].

Using a matrix construction, a large number of CCZ-inequivalent APN functions were
found over F 97 and Fs [31], bringing the total number of known APN functions over these
fields to 490 and 8180, respectively. To the best of our knowledge, no systematic search
of this kind has been performed over Fon for any dimension n > 9. The main reason for
this is that the complexity of a computer search (which increases exponentially with the
dimension n) becomes too demanding over dimensions of this magnitude.

Results similar to those in [31] have been independently obtained in [30], wherein
285 and 10 previously unknown quadratic APN functions are obtained over F a7 and
Fos, respectively. Another similar approach based on the concept of antidifferentiation
is developed in and [27] and [28}.

In this paper, we focus on the particular case of quadratic APN functions over Fon
with n < 9 and with coefficients in Fg. We employ a specialization of the matrix method
presented in [31] to conduct our search, and obtain a complete classification (up to CCZ-
equivalence) of these functions over F29. In particular, we discover two instances of APN
functions over F 9 that are inequivalent to any known APN function over this field. For
dimensions n with 6 < n < 8, we show that there are no quadratic APN functions with
coefficients in F2 other than the already known ones.

In our classification, we list a shortest possible representative from each discovered
CCZ-equivalence class. In dimensions n up to 6, these shortest representatives are all
monomials. In dimensions n € {7,8}, the longest representative has 6 terms, while
in dimension n = 9, the longest representative has 9 terms. This raises the question
of whether any quadratic APN function over Fan represented by a polynomial with
coefficients in Fz is CCZ-equivalent to a function that can be represented by a polynomial
with coefficients in Fo with at most n terms.

Furthermore, although all of the functions that we find over Fos are equivalent to
representatives from [23], we find shorter representatives for two of these functions, viz.
a + 2° + 2” for «3 + Tr(x®) and x? + «° + x4 for «° + Tr(x?). Thus, to the best
of our knowledge, our classification lists the shortest known representatives for these

CCZ-equivalence classes.
4 Y. Yu et al. / Finite Fields and Their Applications 68 (2020) 1017383

2. Preliminaries

Let n be a positive integer. We denote by Fn the finite field with 2” elements, by
F3, its multiplicative group, and by Fon[a] the univariate polynomial ring over F gn in
indeterminate x. The trace function Tr : Fon — F»2 is defined by Tr(x) = eo a2" for
x € Fon. By Rx , we denote the set of m-by-k matrices with entries in Fon, and if
M € F22**, we denote by M[i,j] the entry in the i-th row and j-th column of M, for
0<i<m-1,0<j< k-1. By Submatrix(M,i,j, p,q), we will denote the p x q
submatrix of M rooted at (i,j), forO <i << m—-1,0<j<k-1l<p<m-i,
1<q<k-—1. Note that we index matrix rows and columns from zero.

We will use the following conventions and notation throughout the paper:

(i) When working over Fan, integers indexing i.a. basis elements and matrix rows and
columns will be considered modulo n. For instance, a normal basis {ag, @1,...,Q@n—1}
satisfies aj41 = a? for 0 <i <n-—1; this means that a;.1 = a? for0 <i<n-2,
and ap = a2_,.

(ii) Suppose {a9,Q1,...,Q@n—1} is a normal basis of Fyn over Fo, so that a;41 = a? for
0 <i<n-—1, and suppose {40,61,...,4n-1} is its dual basis, i.e. Tr(a;6;) = 0
for i £ j and Tr(a;0;) = 1 for 0 < 1,7 < n—1. Note that {09,61,...,0,-1} is
also a normal basis, so that without loss of generality, we can assume 0;4, = 6? for
O<i<n-l.

Let Ma € Fo" and Mg € FS" be such that

M, |i, ul] = a2" and Moli, ul] = g2' (1)

for 0 < ui < n—1. Then Mi Mo|u,j] = Tr(a,0;) for 0 < u,j < n-—1, so that
Mt Ms = In, where I, is the identity matrix of order n. Thus M,;* =

a?)

where
M:¢ is the transpose of My.

(iii) Lett B € Fit be a vector B = (0,71,°°:Nm—-1) where 7; € Fan for 0 <
i < m-—41. Then Span(B) = Span(7,71,--:,;%m—1) is the subspace spanned
by {10,71,°°:;%m—1} over Fo. The dimension of this subspace is denoted by
Rank(B) = Rank(70,71,--+ ,%m—1), and is referred to as the rank of B over Fo.

If 7; = 5 Ai,ja; forO <7 <m—1, with Ay; € Fo for 0 <7,7 <n—1, and we
define an m-by-n matrix A € F3"*” by Afi, 7] = Ai,;, then the rank of B is equal to
the rank of A.

An (n,n)-function, or vectorial Boolean function, is any mapping F : Fon > Fon
from the field with 2” elements to itself. Any (n,n)-function can be represented as a
polynomial F(x) = an ‘aya’ over Fon with a; € Fon; this representation is referred
to as the univariate representation of F’, and is unique. The binary weight wt2(z) of a
positive integer 7 is the number of ones in its binary notation; equivalently, if we write 7
as a sum of powers of two, so that 7 = eo b;2) for b; € {0,1}, then its binary weight
Y. Yu et al. / Finite Fields and Their Applications 68 (2020) 101733 5

is wto(x) = ar b;, with the sum taken over the integers. The largest binary weight of
an exponent 7 with non-zero coefficient a; in the univariate representation of an (n,7n)-
function F is called the algebraic degree of F' and is denoted by deg(F’). A function of
algebraic degree 1, resp. 2, resp. 3 is called affine, resp. quadratic, resp. cubic. An affine
F satisfying F'(0) = 0 is called linear.

In the following, we concentrate on the case of homogeneous quadratic functions,
which can be written as

F(a) _ Ss” a,j? +?”

0<i<j<n-1

for aj,; € Fon, i.e. quadratic functions with no linear terms in their univariate repre-
sentation.

Definition 1. A mapping F’ : Fon — Fon is called differentially 5(F’)-uniform if

o(F) — acFs,, beFon HAP (a, b),
where Ar(a,b) = {x € Fon : F(x +a) + F(x) = 6b}, and #Ap(a, b) is the cardinality of
Ar(a,b). If 6(F’) = 2, F is called almost perfect nonlinear (APN).

Definition 2. Let F and F” be two functions from Fon to Fon. We say that F' and F” are
EA-equivalent (Extended affine equivalent) if we can write F” as

F'(a) = Ay(F(Aa(@))) + As(2),

where A; and Ag are affine permutations of Fon, and A3 is an affine function on Fon.

We say that F and F”’ are CCZ-equivalent (Carlet-Charpin-Zinoviev equivalent) [20],
if there exists an affine permutation which maps Gr onto Gr, where Gr = {(x, F(x)) :
x € Fon} is the graph of F’', and Gr is the graph of F’.

EA-equivalence is a special case of CCZ-equivalence, and the latter, which also in-
cludes taking inverses of permutations as a particular case, is known to be strictly more
general that the combination of both of the aforementioned transformations [6,8,18]. An
important property of CCZ-equivalence is that it leaves the differential uniformity 6(F’)
invariant, i.e. if two (n, n)-functions F and F’ are CCZ-equivalent, then 6(F’) = 6(F"). For
this reason, APN functions are typically classified up to CCZ-equivalence, and this makes
the classification process somewhat easier despite the large amount of (n,n)-functions.

Computationally testing whether two (n,n)-functions are CCZ-equivalent is typically
done by associating a linear code to each function and then testing whether the resulting
two codes are isomorphic [4]. To the best of our knowledge, this test is reliable for
finite fields Fon with n < 9, but sometimes fails for higher values of n due to a lack
of computational resources. The T-rank, A-rank, and the order of the multiplier group
6 Y. Yu et al. / Finite Fields and Their Applications 68 (2020) 1017383

are CCZ-invariants introduced in [23]. In our search, we use the code isomorphism test
to partition the APN functions that we find into CCZ-equivalence classes, and use the
I-ranks of the two new functions that we find as proof that they lie outside the bounds
of all previously known APN functions over Fo.

We recall a couple of useful notions from [31].

Definition 3. Let H € F3"** (m,k <n). We say that H is proper if every nonzero linear
combination over F> of the m rows of H has rank at least k — 1.

Definition 4. Let H be an nxn matrix defined on Fyn. Then H is called a QAM (quadratic
APN matrix) if:

i) H is symmetric and the elements in its main diagonal are all zeros;

ii) H is proper, i.e. every nonzero linear combination of the n rows (or, equivalently,
columns, due to H being symmetric) of H has rank n— 1.

3. Construction of quadratic APN functions

3.1. Correspondence between quadratic functions with coefficients in Fo and a class of
matrices

As shown in [31], there is a one-to-one correspondence between quadratic APN func-
tions and QAM’s. The precise statement is given in Theorem | below.

Theorem 1. /31/ Let F(©) = Vigcpejen—1 c.4u2 +? € Fon[a] be a homogeneous quadratic
(n, n)-function and let Cr € F3.*" be defined by Cri, t] = Cr[t, 1] = ci, Crli,i] = 0 for
0O<i<t<n-1. Let H = M‘*HM, where My, is as defined in (1). Then 6(F) = 2*
if and only if any non-zero linear combination over Fo of the n rows of H has rank at
least n —k. In particular, F is APN if and only if H is a QAM.

The following theorem addresses the specific case when all coefficients of the function
are in Fo.

Theorem 2. Let F(z) = > cya? t+?’ be a quadratic homogeneous (n,n) -function.
O0<t<i<n-1
Define ann x n matrix Cr by Crlt,t] = Crlt,t] = a, forO <t<i<n-1 and

Crli,i] =0 for0 <i<n-1. Finally, take
H = MiCrM,.
Then

Hlu+1,v +1] = A[u,v]? (2)
Y. Yu et al. / Finite Fields and Their Applications 68 (2020) 101733 7

(with the indices taken modulo n) for 0 < v,u < n—1 if and only if c.4 € Fe for
O<t<i<n-l1.

Proof. (<=) Suppose ¢;4 € Fz for0 <t <i<n-—1. From H = MiCrM, we have, for
allO<v,u<n-1,

Alu, v| = Ss” cit(az a2 + a a2’),
O0<t<i<n-1
It is easy to see that H[u+1,v+1] = A[u, v]? for 0 < v,u < n—-1, since {ag, a1,...,An—1}

is a normal basis such that a;41 = a? for 0 <i<n-—1. Note that in the case 2 = n—1,
this means that a2_, = ag.

(=) Suppose now that H satisfies (2). From H = Mi CrMg,, we have Cr =
(Mt)-'HMz* = MoH Mj, which means that, for all0 < v,u<n-—1,

ci =Crli,t]= SY > (02 02) H[u, v].

O<u,v<n-1

Since 6;41 = 6? for 0 <i<n-—1, if H[u+1,v+1] = Alu, v]? for 0<v,u<n-1, we
have

cit = SY > Tr(03 03,,H[0,0 +k),

O0<k<n-1

which clearly belongs to Fp. O

By Theorem 2, any matrix H representing a quadratic APN function with coefficients
in F2 satisfies (2); this significantly reduces the search space, and allows an exhaustive
search to be performed in practice for higher dimensions.

3.2. Conditions on QAM’s

In the following subsection, we describe how we conduct an exhaustive search over all
n x n QAM’s corresponding to (n,n)-functions represented by univariate polynomials
with coefficients in Fy. The condition H[u+1,v+1] = H[u, v]? greatly reduces the search
space, and, in fact, implies that the values of only |n/2| entries of the matrix have to
be guessed before the values of the remaining entries can be uniquely reconstructed.
Depending on the parity of n, the situation is slightly different, and so, in the following
we look at two concrete examples, one for n = 5, and one for n = 6.

Example 1. In the case of n = 5, suppose that H is a symmetric 5 x 5 matrix with zero
diagonal and such that H[u+1,v+1] = A[u,v]? for all 0 < u,v < 4. If we denote the
entries of this matrix at H[0,1] and H[0,2] by a and 8, respectively, we can readily see
that H must take the form
8 Y. Yu et al. / Finite Fields and Their Applications 68 (2020) 1017383

a b Bb ql
2 b2 p16
H= b a2 0 a* Ob
be vb? at O a8
16 p16 74 8 9

a a

Thus, knowing the values of only two entries of the matrix completely determines the
rest. For comparison, without the condition H[u + 1,v + 1] = H[u,v]?, we would have
to guess 1+ 2+3+4= 10 entries of the matrix.

In the case of n = 6, we once again label the entries of a 6 x 6 matrix H at H(0, 1],
H(0, 2], and H[0, 3] by a, b, and c, respectively. The matrix then takes the form

0 a b c pq?
a az b2 ce b?2

We b a? 0 a vb ¢é
7 & 6 at oO a 8B
p16 cb b4 ae 0 qi

a2 p82 32S gi =

Since H must be symmetric, from H[0,3] = c and H[3,0] = c® we get an additional
condition on the value of c, namely c® = c, i.e. c € Fos. In this case, only 3 entries of
H need to be guessed before the entire matrix can be reconstructed. For comparison,
omitting the condition H[u+1,v+1] = H[u, v]? would require us to guess 1+2+3+4+5 =
15 entries of the matrix.

The above principles can be generalized as follows.

Proposition 1. Let n be a positive integer and H be a symmetric n x n matrix over Fon
with zeros on its main diagonal such that H{u+1,v+1] = H[u, v]? for all0 < u,v < n—-1,
with the indices being taken modulo n. Then:

1. H[i,j] = H[0,j — 7? for any 0 <i,j <n-1;

2. H[0, 7] = H[0,—j]?’ for anyO<j<n-1;
3. ifn is even, then H[0,n/2] € Fone.

Consequently, the entries of H at H|0,j| for 1 <7 < |n/2| uniquely determine the
values of all entries of H.

Proof. The first point follows from (2) by induction on 7. For the second point, we have

pr gn—j+l

H(0,n —j +1) = H[n—j+1,0])=HA[0,j-—n-1 ‘= H[0,j-J

using the symmetry of H and the first point. The third point then follows from the
second one by taking 7 = n/2. O
Y. Yu et al. / Finite Fields and Their Applications 68 (2020) 101733 9

In general (that is, without the condition from Theorem 2), a symmetric n x n matrix
with zeros on the main diagonal is determined by 1+ 2+.---+(n—1) = n(n —1)/2
entries. By restricting ourselves to matrices satisfying (2), the number of entries drops
to |n/2| as pointed out in Proposition 1, which decreases the number of guesses from
quadratic to linear in the dimension n.

The following proposition allows us to further reduce the search complexity by dis-
carding QAM’s which a priori correspond to equivalent functions. Proposition 2 follows
from Theorem 3 of [31], which asserts that if H € F3.°" is a symmetric matrix, and
H’ © F3," is defined by applying a linear permutation DL : Fyn — Fon to all elements of
H, then the quadratic functions defined by H and H’ are EA-equivalent. As the mapping
x +> x is a linear permutation on account of gcd(2,2” — 1) = 1, the proposition is an
immediate consequence of this theorem. The restriction to linear permutations of the
form x ++ 22” comes from the fact that the property (2) remains invariant under such
permutations.

Proposition 2. Suppose F, € Fon[a] is a homogeneous quadratic APN function with
coefficients in Fo, and H is its corresponding QAM. Let H’ be the matrix defined by
HA'\i,j] = Hfi,j]? for 0 < i,j < n. Then H’' is also a QAM, and its corresponding
function F2 € F2|x] is EA-equivalent to Fy.

Following the statement of Proposition 2, recall that we will two elements a,b €
Fon conjugates if there is a non-negative integer k such that a = b?. The relation
“conjugate to” is an equivalence relation which induces a partition of Fon into conjugacy
classes.

To summarize, by Proposition 2, only a single representative from each conjugacy
class has to be considered for the first entry that we guess, which further reduces the
number of possibilities that have to be considered. Furthermore, in the case of even n,
the set of possible values for the last entry that we guess can be restricted to the subfield
Fon/2.

The results from Theorems |, 2 and Proposition 2 are combined into an efficient
procedure for searching for quadratic APN functions over Fon with coefficients in Fan in
Algorithm 1.

3.3. The algorithm

The algorithm is essentially an exhaustive search which traverses all possible n x n
QAM’s by starting with the n x n zero matrix and iteratively assigning concrete values
to its entries. Condition (2) greatly reduces the search space.

The Search(j, H) procedure implements the basic logic of the exhaustive search. An
invocation of Search(j,H) attempts to assign a value to the entry of the matrix in
the first row and j-th column, i.e. H|0,7]. In order to achieve this, it first invokes the
GetPossible Values (j, H ) function which returns a list W of all possible values that H[0, 7]
10 Y. Yu et al. / Finite Fields and Their Applications 68 (2020) 1017383

Input: An integer n = 2m+41

Output: A list of APN functions over Fgn represented by univariate polynomials with coefficients in
F.

procedure Search(n);

H «+ ann Xn zero matrix;

Search(1, H);

end procedure;

procedure Search(j, H);
W + GetPossibleValues(j, H);
for w  € W do
Assign(j, H, w);
if 7 = m then
if H is a QAM then
| output the polynomial corresponding to H;
end

oman hkh wn

Se = —
wonwmre &

else
| Search(j + 1, A);
end

eS
a

end
end procedure;

Nee
ou aoNn

procedure Assign(j, H, w);

A[0, j] — w;

H[j, 0] — w;

for t € 1,--- ,n—1do
//Note that all indices are modulo n
H{t,j7 +t] ¢ H[t -—1,7+t- 1];
Alj +t,t] << Alt,j + t];

wow wow wd WD
ant fk WN

end
end procedure;

won ds bw
ovo n

function Get PossibleValues(j, H);
if 7 = 1 then

| return GetConjugacyClassRepresentatives(n);
else

www w
LK won

S + Span({A[0,2], H[0,n — i] :% €1,2,--- ,7 — 1});
if #S < 27/~? then
| return Q;
end
E+ F3, \ S;
for e € E do
(0, j] + e;
A + Submatrix(H,0,0,7,7+4+ 1);
if A is not proper then
| EB E\ {e};
end

a RR ww www
FSweErsesanrs &

end
return £;

SE
a ON

end
end function;

ES
coon

 

 

Algorithm 1: A procedure for searching for QAM’s corresponding to APN functions
with coefficients in Fo.

can take; using Proposition 2, a number of impossible values are filtered out by GetPos-
sibleValues, which further reduces the complexity of the search. For all possible values
w € W, the Search procedure attempts to assign w to H{0,j|. This is performed by
calling the Assign(j, H, w) procedure, which assigns w to H{0, 7] and derives the values
Y. Yu et al. / Finite Fields and Their Applications 68 (2020) 101733 11

of all other entries of the matrix that follow from H|0, 7] by symmetry and by (2). If
7 = |n/2| and a value w is assigned to H{0, 7], then all entries in the matrix are already
known, and it remains to check whether the obtained matrix is a QAM. If 7 < m, then
Search(j + 1, H) is called recursively to assign a value to the next variable.

The GetPossibleValues(j, H) function distinguishes between two cases. Since a QAM
must contain zeros on the main diagonal, H[{0,1] is the first variable to be assigned
a value. By Proposition 2, it suffices to consider a single representative from every
conjugacy class in Fon; this is precisely what the function GetConjugacyClassRepresenta-
tives(n) returns.

When 7 > 2, we can no longer restrict ourselves to a single representative from each
conjugacy class, but can reduce the range of possible values for H|0,7] in other ways.
Recall that by the definition of a QAM, every nonzero linear combination of rows must
have rank n — 1. Since every row contains a zero element on the main diagonal, this is
equivalent to saying that the elements of each row that do not lie on the main diagonal
must be linearly independent. For this reason, the subspace S' spanned by the entries in
the first row that have already been assigned is removed from the list EF’ of possible values.
After S is computed, its size is used to test whether the known elements on the first row
are linearly independent; note that while the element at H[0, 7] is always selected so that
it is linearly independent on the previously assigned elements, the same is not necessarily
true for the value of H|0,—j] derived by Proposition 1, and this necessitates the test
for linear independence. If the test fails, GetPossibleValues returns an empty set for the
possible values of H[0, 7], which immediately forces the search procedure to backtrack
to H[0,7 —1]. By Corollary 2 of [31], every submatrix of a QAM must be proper. This
condition is also exploited by GetPossibleValues in order to reduce the set E of possible
values; once all entries H{0, 7] for 1 < 7 < 7—1 are known, the submatrix of H consisting
of the first 7 rows and j + 1 columns is fully determined. All values of H[0,7| for which
this submatrix is not proper are removed from E.

The entire search procedure begins by initializing H to an n x n zero matrix and
invoking Search(1, H) to assign a value to the first variable.

As observed in Subsection 3.2, the cases for an even and for an odd dimension n are
slightly different. The only major difference is that the values of one of the entires of
the matrix can be restricted to the subfield Fyn/s2 when n is even. When implementing
the search in practice, the distinction between the odd and even case manifests in the
indexing of the variables. Algorithm 1 provides an explicit description of the search
procedure in the case of odd n; this is motivated by the fact that our experiments for
n = 9 constitute the main point of interest in our experimental output, as, to the best
of our knowledge, no search of this type has been performed for dimensions greater than
8. The algorithm in the case of an even n is principally the same, keeping in mind that
the value of H|0,n/2] can be restricted to Fonz.
12 Y. Yu et al. / Finite Fields and Their Applications 68 (2020) 1017383

Table 1
List of representatives from all CCZ-equivalence classes of quadratic APN functions over Fan represented
by polynomials with coefficients in F2, for 4<n <9.

 

 

n ID Functions T-rank A-rank |M(GF)|

4 41 x? 100 20 5760

5 5.1 x? 330 42 4960
5.2 x? 330 AQ 4960

6 6.1 x? 1102 94 24192

7 71 x 3610 198 113792
7.2 x? 3708 198 113792
7.3 x 3610 198 113792
7.4 et+aee + 2% + 7172 +733 4+ 734 4050 210 896
7.5 eta? +19 + 733 4 734 4040 212 896
7.6 xv? + 7% + 77? 4038 212 896
7.7 vo +78 + 734 4 77 4 77? 4048 212 896
7.8 ve ta? + a9 + 7? 4 78° 4026 212 896
7.9 xv +29 + 71 + 7% 4044 212 896
710 a#+at2? 4217 4+ 738 4048 210 896
T1100 oP teal ec * 4 27? 4048 210 896
71200 ae tat +779 + 734 4 7% 4040 210 896
7130 @ tat 4733 + 734 4040 212 896
7140 ao +279 + 34 4 7% 4048 210 896
7.15 2#? +a1% + 734 4034 210 896

8 8.1 x? 11818 420 522240
8.2 x? 12370 420 522240
8.3 eta? + rt8 4 72? + 7 14044 446 2048
8.4 ee tata" 13800 432 6144
8.5 x? + o® + 7S + 79 4 182 4 1 O° 14040 454 2048
8.6 xv? + 7% + e144 13804 434 6144
8.7 ve + aol? + 729 4 7% 4 7180 14046 438 2048

9 91 x 38470 872 2354688
9.2 x 41494 872 2354688
9.3 git 38470 872 2354688
9.4 36 4 7182 4 796 4 780 4 36 4 34 4 718 4 gl 4 gl A8856 940 4608
9.5 eit 4 7180 4 7? 4 785 4 go t8 4 79 4 73 48428 930 4608
9.6 pret 4 44 4 7180 4 7 4 7 4 8 4 7? 48460 944 4608
9.7 e264 4 160 4 gp l44 4 7182 4 780 4 72 4 766 4 740 41 17 = 47890 920 4608
9.8 e288 4 7272 4 77264 4 7160 4 14d 17130 4 748 4 34 48858 940 4608

3.4. Summary of experimental results

Running the search for n = 9 on a server operating with an Intel Xeon E5 CPU at
3.5G GHz took approximately 33 days and produced a list of 21504 functions. Partition-
ing them into CCZ-equivalence classes by the code isomorphism test was performed by
running several parallel processes on a server with an Intel Xeon E5 CPU at 2.60 GHz,
and around 15-16 months. As a result, we obtain the 8 CCZ-inequivalent representatives
given in Table 1. Computing the I-rank of one representative on the same server takes
around an hour, while computing the A-rank takes approximately 3 days.

The running times for lower dimensions are negligible, and the computations were
performed on a personal computer running an Intel m5-6Y54 CPU at 1.5 GHz. For n = 8,
performing the exhaustive search took around 3 hours and produced 7616 functions,
Y. Yu et al. / Finite Fields and Their Applications 68 (2020) 101733 13

which were partitioned into CCZ-classes in 8 hours. For n = 7, 4410 functions were
found in 2 minutes, and partitioned into CCZ-classes within 12 hours. For 4 < n < 6,
both performing the search and partitioning the resulting functions into CCZ-equivalence
classes takes less than a second; the number of functions found was 4 for n = 4, 72 for
n = 5, and 32 for n= 6.

Table | lists representatives from all CCZ-equivalence classes found by our method.
Note that the search is complete, i.e. the CCZ-equivalence classes containing these rep-
resentatives cover all possible homogeneous quadratic APN functions with coefficients in
Fo over Fon with 4 < n < 9. For each representative, we have also computed its I-rank,
A-rank, and the order |M(GF)| of its multiplier group [23].

In dimensions n < 6, we only find power functions as expected. In dimension n = 7,
besides three power functions, we find 12 polynomials, among which are two trinomials,
five quadrinomials, four pentanomials, and one hexanomial. In dimension n = 8, we find
two power functions and 5 polynomials, which consist of two trinomials, two pentanomi-
als, and one hexanomial. In dimension n = 9, we find three power functions, along with
5 polynomials: two of them have 7 terms, one has 8 terms, and two have 9 terms. All
the representatives given in the tables are in shortest possible presentation.

In the case of dimension n < 8, all of the representatives that we have discovered
are identical or equivalent to switching class representatives from [23]. Despite this, in
dimension n = 8, we discover very “short” and previously undocumented representatives
(namely, trinomials) for two of the switching classes from [23]: 2° + 2° + 2” is CCZ-
equivalent to x? + Tr(x’), and 2° + 2° + 214 is CCZ-equivalent to x? + Tr(x?). Both
of these trinomials consist of monomials from the cyclotomic cosets of x* and x’, and
despite their nearly identical structure, they belong to distinct CCZ-equivalence classes.
Note that the x? + Tr(x’) belongs to the infinite family of APN functions from [14],
while the second has not be generalized into any infinite family so far.

Furthermore, in dimension n = 9, we discover two representatives, viz.

51 (a) = 36 4 gl82 4 96 4 980 4 936 4 84 4 1B 4 gl? 4 yl?

and

272 264 160 144

so (ax) = 278% 4 op? 4 97204 4 gph 4 htt 1 180 4 7 AB 4 84
which are CCZ-inequivalent to any currently known APN function over Fos. We have
verified this inequivalence in two ways: by means of the code isomorphism test, and, in
addition, by computing their I-ranks, which turn out to be 48856 AND 48858, respec-
tively.

We have computationally checked that these newly found functions are not CCZ-
equivalent to a permutation, which took us about 40 hours computation. Thus, no
quadratic APN function with coefficients in Fp can be CCZ-equivalent to a permuta-

tion over Fon with n < 9, except for the Gold APN monomials in the case of odd n.
14 Y. Yu et al. / Finite Fields and Their Applications 68 (2020) 1017383

Based on the computational results for dimensions n < 9, we can observe that any
quadratic APN function F) with coefficients in Fp appears to be CCZ-equivalent to
a quadratic APN function Fh with at most n non-zero coefficients in Fon. It would be
interesting to establish whether this is true in general; if so, it would indicate the existence
of a simple polynomial form for functions of this type, which would significantly simplify
the complexity of searching for them.

This is closely related to the problem of finding the “simplest” possible polynomial
representation for a given (n,n)-function F’. A simple representation not only results
in a polynomial representation that can be evaluated more efficiently in practice, but
facilitates the mathematical analysis of the function in question and its properties.

Problem 1. Given an (n,7)-function F’, find a function G, such that G is CCZ-equivalent
to F and its univariate representation has the least possible number of non-zero coeffi-
cients.

4. Conclusion

We have described a procedure for searching for quadratic APN functions with co-
efficients in Fy over Fon by constructing matrices of a particular type, and have used
this procedure to classify all such functions over the finite fields Fon with n < 9. We
have discovered two previously unknown APN functions over Fos, and a representation
of two of the switching class representatives over Fos in the form of trinomials, which is
simpler than their currently known representations. In the case of 6 <n < 8, we have
experimentally verified that there are no quadratic APN functions with coefficients in
F> other than the previously known ones.

CRediT authorship contribution statement

Yuyin Yu: Conceptualization, Data curation, Formal analysis, Funding acquisition,
Investigation, Methodology, Resources, Software, Validation, Writing - original draft.
Nikolay Kaleyski: Data curation, Formal analysis, Investigation, Methodology, Re-
sources, Software, Validation, Writing - original draft, Writing - review & editing.
Lilya Budaghyan: Formal analysis, Funding acquisition, Methodology, Project admin-
istration, Resources, Supervision, Validation. Yongqiang Li: Formal analysis, Funding
acquisition, Investigation, Methodology, Resources.

Acknowledgments

The research of the second and the third authors is supported by the “Construction
of Optimal Boolean Functions” project of the Trond Mohn Foundation. Yuyin Yu is
supported by the NSF of China (Grant No. 61502113), and the Guangdong Provincial
Y. Yu et al. / Finite Fields and Their Applications 68 (2020) 101733 15

NSF (Grant No. 2015A030310174). Yonggiang Li is supported by the NSF of China
(Grant No. 61772517).

References

[1] E. Biham, A. Shamir, Differential cryptanalysis of DES-like cryptosystems, J. Cryptol. 4 (1) (1991)
3-72.

[2] C. Bracken, E. Byrne, N. Markin, G. McGuire, A few more quadratic APN functions, Cryptogr.
Commun. 3 (3) (2011) 43-53.

[3] M. Brinkmann, G. Leander, On the classification of APN functions up to dimension five, Des. Codes
Cryptogr. 49 (1-3) (2008) 273-288.

[4] K. Browning, J.F. Dillon, M. McQuistan, APN polynomials and related codes, in: Honoring the 75-
th Birthday of Prof. D.K. Ray-Chaudhuri, J. Comb. Inf. Syst. Sci. 34 (1-4) (2009) 135-159, Special
volume.

[5] K. Browning, J.F. Dillon, M. McQuistan, A.J. Wolfe, An APN permutation in dimension six, Con-
temp. Math. 58 (2010) 33-42.

[6] L. Budaghyan, The simplest method for constructing APN polynomials EA-inequivalent to power
functions, in: Proceedings of the International Workshop on the Arithmetic of Finite Fields, WAIFI
2007, Madrid, Spain, in: Lecture Notes in Computer Science, vol. 4547, June 2007, pp. 177-188.

[7] L. Budaghyan, Construction and Analysis of Cryptographic Functions, Springer Verlag, 2014.

[8] L. Budaghyan, C. Carlet, A. Pott, New classes of almost bent and almost perfect nonlinear poly-
nomials, IEEE Trans. Inf. Theory 52 (3) (2006) 1141-1152.

[9] L. Budaghyan, C. Carlet, Classes of quadratic APN trinomials and hexanomials and related struc-
tures, IEEE Trans. Inf. Theory 54 (5) (2008) 2354-2357.

[10] L. Budaghyan, C. Calderini, C. Carlet, R. Coulter, I. Villa, Constructing APN functions through
isotopic shifts, https://eprint.iacr.org/2018/769.

[11] L. Budaghyan, C. Carlet, P. Felke, G. Leander, An infinite class of quadratic APN functions which
are not equivalent to power mappings, in: IEEE International Symposium on Information Theory,
2006, pp. 2637-2641.

[12] L. Budaghyan, T. Helleseth, N. Kaleyski, A new family of APN quadrinomials, Cryptology ePrint
Archive, Report 2019/994, 2019.

[13] L. Budaghyan, C. Carlet, G. Leander, Two classes of quadratic APN binomials inequivalent to power
functions, IEEE Trans. Inf. Theory 54 (9) (2008) 4218-4229.

[14] L. Budaghyan, C. Carlet, G. Leander, Constructing new APN functions from known ones, Finite
Fields Appl. 15 (2) (2009) 150-159.

[15] L. Budaghyan, C. Carlet, G. Leander, On a construction of quadratic APN functions, in: 2009 IEEE
Information Theory Workshop, 2009.

[16] L. Budaghyan, M. Calderini, I. Villa, On equivalence between known families of quadratic APN
functions, https: //eprint.iacr.org/2019/793.

[17] M. Calderini, On the EA-classes of known APN functions in small dimensions, https://eprint.iacr.
org/2019/369.

[18] A. Canteaut, L. Perrin, On CCZ-equivalence, extended-affine equivalence, and function twisting,
Finite Fields Appl. 56 (2019) 209-246.

[19] C. Carlet, Vectorial Boolean functions for cryptography, in: Boolean Models and Methods in Mathe-
matics, Computer Science, and Engineering, in: Encyclopedia of Mathematics and Its Applications,
vol. 134, 2010, pp. 398-469.

[20] C. Carlet, P. Charpin, V. Zinoviev, Codes, bent functions and permutations suitable for DES-like
cryptosystems, Des. Codes Cryptogr. 15 (2) (1998) 125-156.

[21] F. Chabaud, S. Vaudenay, Links between differential and linear cryptanalysis, in: Workshop on the
Theory and Application of Cryptographic Techniques, Springer, Berlin, Heidelberg, 1994 May 9,
pp. 356-365.

[22] Y. Edel, Quadratic APN functions as subspaces of alternating bilinear forms, in: Proceedings of the
Contact Forum Coding Theory and Cryptography III, Belgium, vol. 2009, 2011, pp. 11-24.

[23] Yves Edel, Alexander Pott, A new almost perfect nonlinear function which is not quadratic, Adv.
Math. Commun. 3 (1) (2009) 59-81.

[24] P. Langevin, Classification of APN cubics in dimension 6 over GF (2), http://langevin.univ-tln.fr/
project /apn-6/apn-6.html.
16 Y. Yu et al. / Finite Fields and Their Applications 68 (2020) 101733

[25] M. Matsui, Linear cryptanalysis method for DES cipher, in: Advances in Cryptology - EUROCRYPT
93, Workshop on the Theory and Application of Cryptographic Techniques, Lofthus, Norway, May
23-27, 1993, Proceedings, Springer, Berlin, Heidelberg, 1993.

[26] K. Nyberg, Differentially uniform mappings for cryptography, in: Advances in Cryptology - EU-
ROCRYPT ’93, Workshop on the Theory and Application of Cryptographic Techniques, Lofthus,
Norway, May 23-27, 1993, Proceedings, Springer, Berlin, Heidelberg, 1993.

[27] A. Salagean, Discrete antiderivatives for functions over F/’, Des. Codes Cryptogr. 88 (3) (2020)
471-486.

[28] V. Suder, Antiderivative functions over Fan, Des. Codes Cryptogr. 82 (1-2) (2017) 435-447.

[29] H. Taniguchi, On some quadratic APN functions, Des. Codes Cryptogr. 87 (9) (2019) 1973-1983.

[30] G. Weng, T. Yin, G. Guang, On quadratic almost perfect nonlinear functions and their related
algebraic object, in: Workshop on Coding and Cryptography, WCC, 2013.

[31] Y. Yu, M. Wang, Y. Li, A matrix approach for constructing quadratic APN functions, Des. Codes
Cryptogr. 73 (2) (2014) 587-600.

[32] Y. Zhou, A. Pott, A new family of semifields with 2 parameters, Adv. Math. 234 (2013) 43-60.
