Han et al. Chin. J. Mech. Eng. (2020) 33:2
https://doi.org/10.1186/s10033-019-0424-9

Chinese Journal of Mechanical
Engineering

ORIGINAL ARTICLE Open Access

A Computational Synthesis Approach

-)

Check for
updates

of Mechanical Conceptual Design Based
on Graph Theory and Polynomial Operation

Lin Han, Geng Liu’, Xiaohui Yang and Bing Han’

Abstract

The design synthesis is the key issue in the mechanical conceptual design to generate the design candidates that
meet the design requirements. This paper devotes to propose a novel and computable synthesis approach of
mechanisms based on graph theory and polynomial operation. The graph framework of the synthesis approach is
built firstly, and it involves: (1) the kinematic function units extracted from mechanisms; (2) the kinematic link graph
that transforms the synthesis problem from mechanical domain into graph domain; (3) two graph representations, i.e.,
walk representation and path representation, of design candidates; (4) a weighted matrix theorem that transforms the

synthesis process into polynomial operation. Then, the formulas and algorithm to the polynomial operation are pre-
sented. Based on them, the computational flowchart to the synthesis approach is summarized. A design example is
used to validate and illustrate the synthesis approach in detail. The proposed synthesis approach is not only support-
ive to enumerate the design candidates to the conceptual design of a mechanical system exhaustively and automati-
cally, but also helpful to make that enumeration process computable.

Keywords: Design synthesis, Conceptual design, Graph theory, Polynomial operation, Kinematic link graph,

Weighted matrix theorem

1 Introduction

As an early and the most creative phase of engineering
design, the basic task of conceptual design is develop-
ing and synthesizing the building blocks to generate
meaningful concept solutions that meet design require-
ments. In all the feasible design candidates, the optimal
and novel one is pursued in this design phase. However,
because of the limitation of bias and shorten of knowl-
edge or experienced to the designers, it is always difficult
to identify all the feasible design candidates and further-
more to find out the optimal one in them. Therefore,
numerous researchers have focused their study on the
computer aided design synthesis, and many models and
approaches have been developed.

 

*Correspondence: npuliug@nwpu.edu.cn; nouhanbing@nwpu.edu.cn
Shaanxi Engineering Laboratory for Transmissions and Controls,
Northwestern Polytechnical University, Xi’an 710072, China

o) Springer Open

 

Based on physical working principles, Kota proposed
a Function-Structure model and implemented it in the
design of hydraulic systems [1]. Besides, a matrix meth-
odology to the design synthesis was developed by him
and Chiou on the basis of that model [2, 3]. Another two
famous models are Function-Behavior-Structure and
Function-Behavior-State [4—6]. The common character
of these functional models is that they describe objects
or design problems and solutions in terms of their known
functions, and regard the design process as a function
decomposition process. Therefore, the associated syn-
thesis approaches are so-called function-based synthesis
[7-11]. There exist other kinds of synthesis approaches,
e.g., the grammar-based synthesis [12—16] and the graph-
based synthesis [17-21]. In grammar-based synthesis,
the generative grammars, which are a class of produc-
tion systems that capture design knowledge by defin-
ing a vocabulary and rule-set, are constructed and used
to generate design alternatives [22]. In graph-based

© The Author(s) 2020. This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing,
adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and
the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material

in this article are included in the article’s Creative Commons licence, unless indicated otherwise in a credit line to the material. If material
is not included in the article’s Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the
permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit http://creativeco

mmons.org/licenses/by/4.0/.
Han etal. Chin. J. Mech. Eng. (2020) 33:2

synthesis, the graph theory is used to represent a product
and define the relationships between its components, and
the graph concepts and theorems are employed to gen-
erate design candidates [23]. For now, graph-based syn-
thesis approaches have been widely used in the synthesis,
analysis and optimization process of linkage systems
[24—26] and epicyclic gear trains [27, 28]. Moreover, Bin
proposed a computational conceptual design synthesis
model based on space matrix [29], and he also integrated
the functional synthesis of mechanisms with mechanical
efficiency and cost to find out the optimal solution [30,
31]. Similarly, Masakazu proposed an integrated optimi-
zation for supporting functional and layout designs dur-
ing conceptual design phase [32].

With the help of above considerable researches, the
paper proposes a novel and more computable synthesis
approach of mechanisms. The advantage of this approach
is that it builds up the mathematical structure of the
design synthesis of mechanisms based on graph theory,
and makes the design candidates are calculated by the
induced polynomial operation formulas. Besides, each
design candidate is finally represented by a matrix form,
which will be conducive to the analysis and optimization
of the design candidates in the future research. The rest of
the paper is outlined as follows. Section 2 describes some
basic concepts of the graph theory that will be used in
the proposed synthesis approach. Section 3 builds up the
graph framework of the synthesis approach. The polyno-
mial operations including the polynomial-walk operation,
edge sequence operation and vertex sequence operation
are presented in Section 4. The computational flowchart of
the synthesis approach is summarized in Section 5. In Sec-
tion 6, the proposed synthesis approach is applied to figure
out all the feasible design candidates of a mechanical sys-
tem. Some concluding remarks are made in Section 7.

2 Basic Concepts on the Used Graph Theory

As a branch of mathematics, graph theory has gotten
numerous applications in many fields of engineering for
its ability to concisely represent and handle the relation-
ships between different objects. In this section, some fun-
damental concepts of graph theory that are essential for
the paper proposed synthesis approach are introduced
briefly. The detailed descriptions of these concepts can be
found in Ref. [33].

The mathematical structure of a directed graph or
digraph D, as illustrated in Figure 1(a), is an ordered tri-
ple (V(D), E(D), Wp). Where V(D) is a nonempty set of
vertices, e.g., {V,, Vz, Vz, Vi}, E(D) is a set of edges, e.g.,
{€1, Cy, C3) Cy Cs, Cg}, that disjoints from V(D), and wp is
an incidence function that assigns every edge e an initial
vertex init(e) and a terminal vertex ter(e). The edge e is
said to be directed from init(e) to ter(e), e.g., the direction

Page 2 of 15

 

 

    

a A digraph D
ty Vy V,
0 1 0 1TI”
{0 1 0 O|J%
AM)=|9 1 0 1\/%
0 0 1 O01W,

b The adjacency matrix of D

 

 

Figure 1 A digraph and its adjacency matrix

of e, is from init(e,) = V, to ter(e,)= V,. Usually, an edge
is always written as a two-tuple style, e.g., the two-tuple
of e, is e3(Vj, V4).

In a digraph, if the vertices of several edges are the
same, such edges are called multiple edges, e.g., e; and &¢;
if an edge whose initial vertex init(e) equals to its terminal
vertex ter(e), such edge is called a loop, e.g., e,. A directed
walk Win D is a finite non-null sequence, e.g., W=(Vj, es,
Vas Cg Var C51 Vas C6 V3» €4, V>), whose terms are alternately
vertices and edges. A walk is called a path if all the verti-
ces and edges are distinct, e.g., P=(Vj, e3, Vy, eg, V3), and
the length of it is the number of edges between the start-
ing and ending vertices. A path of D is also a subgraph of
D, for all its vertices and edges contained in D.

The topological structure, or in other words the con-
nection relationships between vertices, can be conveni-
ently represented in matrix form. A vertex-to-vertex
adjacency matrix to a digraph is defined as AWD) = [aj],
where aj = (Vi, V;) is the number of directed-edges
whose init(e)=V, and ter(e)= V; eg., Figure 1(b). Let
A*(D) be the kth power of A(D), where k is a positive inte-
ger number. Then an adjacency matrix theorem can be
described as follows.

Adjacency Matrix Theorem: The number of walks
of length n from vertex V; to vertex V; in a digraph D is
given by the (i, j) element of A” (D).

For example, the third power of A(D) in Figure 1(b) is

0201

0100
A*(D) = 0201f
0110
Han etal. Chin. J. Mech. Eng. (2020) 33:2

 

 

   

a Slider-Crank Mechanism
KFU, ={SC™ (R,L-D,(L,L)}

KFU, = {SC;*,(T,1,1),(R,1L-)}

b Two KFUs of Slider-Crank

Figure 2 Representation of a slider-crank and its KFUs

 

Ne wy,

Then, the number of walks of length 3 from V, to V,
is A°(D)(1, 2) =2, and they are W,=(V,, €,, Vo, €9, Voy Co»

3 Graph Framework

3.1 Kinematic Function Unit

A mechanical system, which is made up by variety mech-
anisms, is designed to transform the power or motion
from the system input to the system output. Therefore,
each mechanism has the function of transferring and
transforming the power or motion that pass through it.
In this paper, the function representation of a mechanism
is called a kinematic function unit (KFU). It has four
fundamental features: (1) structure type (crank-rocker,
spur gear, etc.), (2) motional type (rotation, translation
or swing), (3) continuous or intermittent motion, (4)
reciprocating motion or not. The relationship between a
specific mechanism and the KFU belonging to it is one-
to-one or one-to-many, for the kinematic transforma-
tion between the input and output members of a specific
mechanism may be interchangeable.

For example, if the crank is the driving member in a
slider-crank mechanism displayed in Figure 2(a), the
slider-crank is able to transform the crank’s continuous
rotational motion into the slider’s reciprocating transla-
tional motion. While, if slider is the driving member, the
slider-crank is able to transform the slider’s reciprocating
translational motion into the crank’s continuous rota-
tional motion. Therefore, the slider-crank mechanism
has two different KFUs. To describe these KFUs in a gen-
eral way and make it easy to be applied and recognized
in computer, a general mathematical structure of KFU is
given by

KFU = {Ci , MI, MO}, (1)

where on is the identification of a KFU, and it includes
three different symbols, i.e., C, F, i, that have diverse

 

Page 3 of 15

values and meanings. The value of C is the abbrevia-
tion for the name of a mechanism to which KFU is
subordinate, e.g., SC in Figure 2(b) is the abbreviation
of slider-crank. The value of F is the motional trans-
formation type of a KFU, e.g., F=RT in Figure 2(b)
represents a rotational motion is transformed into
a translational motion, while F=TR represents a
translational motion is transformed into a rotational
motion. The value of i is a positive number and rep-
resents the serial number of a KFU in a design candi-
date generated through the synthesis process, in case
a KFU is used more than once in that solution. The
initial value of it to all KFUs are set to 1. MI and MO
are two 1 x 3 row vectors and represent the input and
output motions of the KFU respectively. The elements
x1, x2 and x3 of these vectors are encoded symbols or
numerals, and the encoded values and meanings of
them are illustrated in Table 1.

3.2 Kinematic Link Graph

The kinematic link graph (KLG) is a directed graph and
constructed by looking each KFU as a vertex and the
kinematic relationship between two KFUs as an edge.
Through KLG, the synthesis problem of mechanisms
are transformed from mechanical domain into graph
domain, so that the feasible design candidates can be rep-
resented and calculated by the methods and theorems of
graph theory.

When building a KLG, the first task is to extract KFUs
from mechanisms. Table 2 illustrates eight KFUs from
seven mechanisms. Here, the input and output of a mech-
anism system are abstracted as two virtual mechanisms
that named as “System Input” and “System Output”
respectively. Specially, it should be noticed that “Sys-
tem Input” only has the function to send out the power
or motion, while “System Output” only has the func-
tion to incept power or motion. Thus, the values of MI
of “System Input” as well as the values of MO of “System
Output” are set to (0, 0, 0). Since the input and output
motions of a mechanism system are various according to

Table 1 Meanings and coded values to the elements x1, x2
and x3 of vectors Ml and MO

 

 

Elements Meanings Coded values
x1 Rotational motion R
Translational motion T
Swinging motion S
x2 Continuous motion 1
Intermittent motion —]
x3 Reciprocating motion 1

Non-reciprocating motion —]

 
Han etal. Chin. J. Mech. Eng. (2020) 33:2

Table 2 Eight KFUs from seven mechanisms

 

Mechanisms KFUs

 

Crank-rocker {cR?>, (R, 1,—1), (5,1, 1)}

{CRF (5,1, 1), (R,1,-1)}

 

Spur gear {SGR* (R, 1,1), (R,1,-1)}
Geneva wheel {GWRR (R,1,-1), (R, -1,-1)}
Cam-follower {CFRT, (R,1,-1), (7,1, 1)}
Pawl-Ratchet wheel {PRW>*, (S,1,1),(R, -1,-1)}
System input {SI", (0,0,0), (R,1,—1)}
System output {So}, (R, -1,—1), (0,0,0)}

a >

 

 

 

 

Figure 3 Graph representation of KLG(T2)
NN

different design requirements, the KFUs of them illus-
trated in Table 2 are only for a simple instance.

The second task when building a KLG is to establish
the rules about how the KFUs connect with each other to
form the directed edges. Here, two connection rules are
defined and presented below.

Connection Rule 1: If one KFU’s MO is equal to another
KFU’s MI, a directed edge will be formed between them
and the direction is from former to latter.

Connection Rule 2: If a KFU’MI is equal to its MO, a
directed loop will be formed around it.

Based on the KFUs illustrated in Table 2 and the two
connection rules, a kinematic-link graph is built and
named as KLG(T2) as Figure 3 shows. The labels of ver-
tices in KLG(T2) are the identifications of the corre-
sponding KFUs. Specially, the vertices that represent the
KFUs of “System Input” and “System Output” in a KLG
are called input-vertex (e.g., SI®) and output-vertex (e.g.,
SO%), respectively. To distinguish them with other verti-
ces, they are marked by “@’ in KLG(T2).

Page 4 of 15

3.3 Graph Representation of Design Candidate

There are two different graph representations of design
candidate, i.e., the walk representation and the path rep-
resentation. They have different application backgrounds
and meanings in the synthesis process.

3.3.1 Walk Representation

The walk representation adopts the vertex sequence and
edge sequence of a walk to represent the mechanisms
and their kinematic relationships in a design candidate.
This kind of representation is mainly used in the calcula-
tion part of synthesis process.

The walk representation directly derives from KLG, for
each walk whose head is input-vertex and tail is output-
vertex in a KLG can be looked as a design candidate. For
instance, Figure 4(a) displays a walk in KLG(T2) and the
design candidate it represents is shown in Figure 4(b).
Basically, the constitute of a walk can be divided into
four parts: (I) vertex terms (VT), (II) edge terms (ET),
(III) vertex sequence (VS), and (IV) edge sequence (ES).
Where, VT and ET are two unordered sets that made up
by the vertices and edges of a walk respectively, while VS
and ES are the ordered sets of VT and ET respectively.
Thus, the mathematical model of walk representation is
defined as

W = {VS(W), ES(W)}. (2)

Figure 4(c) shows the VS(W) and ES(W) of the walk W
in Figure 4(a). In a walk, the terms adjacent to one edge
are two vertices, and these two vertices are exactly the
initial vertex and terminal vertex of that edge. Thus, once
the ET and ES of a walk are specified, the VT and VS of
that walk are determined. Based on this, the key issues
of the proposed computational synthesis approach is to
compute the ET and ES of the walks whose head is input-
vertex and tail is output-vertex in a KLG firstly, and then
figure out their VT and VS.

3.3.2 Path Representation

The path representation is used as the final storage repre-
sentation of a design candidate, and it is transformed by
the walk representation. The transformation relationship
between them is one-to-one. Since a path is a subgraph
of the graph it belongs to, it can be described by an adja-
cency matrix. Therefore, the general mathematical model
of path representation to a design candidate is defined as

P(W) = {VS"(W), A? (W)}, (3)

where VS'(W) is the vertex sequence of the path repre-
sentation and it is generated by recoding the subscript
 

   

  

Han et al. Chin. J. Mech. Eng. (2020) 33:2 Page 5 of 15
(— >)
Dial Wheel2
Wheel]
Gwe Pinion2
Represent
SEs soe
Input
Pinion!

   

171 RR

a A walk W of KLG(T2)

Mathematizing

W ={VS(W), ES(W )}

ES(W ) = (€3,€145€14>€125€s$

¢ Mathematical model of walk representation

 

XN

index of the vertex who is used more than once in the
VS of corresponding walk representation. Figure 4(d)
shows the path representation of Figure 4(c). Here, the
vertex SGRR is used twice in VS(W), so the second SGR
is recoded into SGR in VS’(W). A’(W) is the adjacency
matrix of the path representation. This matrix repre-
sentation is very helpful to analysis, optimize and fur-
thermore to find out the optimal solution in the design
candidates generated through the synthesis process in
the future research. That is why the path representation is
more suitable than the walk representation to be the final
storage representation.

3.4 Weight Matrix Theorem

The weighted matrix theorem is a theorem to determine
the ET of a walk with the aid of weighted graph and
weighted matrix. In graph theory, the weighted graph,
which exerts a weighted value on each edge of it, has a
wide application in many practical problems. The forms
of weighted value are arbitrary according to the practical
problem, such as numerals, functions, symbols, etc. The
weighted matrix A,, = [aj] is an extension of adjacency
matrix to describe the weighted graph in a matrix way.

Transforming

VSW) i {SI* SG, SG’ GW SOs —_——pp

 

b Spur Gear-Spur Gear-Geneva wheel
intermittent mechanical system

Represent

PW)= VS" (W),A’ (W)}
VsP (W) = {srr . SG SG!" GW, SO":

A’ (W) =

Cooooo
oo°ocor;
oooro
oorooe
or-ooco

d Mathematical model of path representation

 

Figure 4 Relationship between the walk representation and path representation of a mechanical system

Here, the elements a, are the weighted values of the cor-
responding edges.

Let edge labels e;(i = 1,2,...,16) be the weighted val-
ues of KLG(T2) in Figure 3. Then, KLG(T2) becomes a
weighted graph and its weighted matrix is

Oe; e2 O eg O eg O
00 00 0 0 0 €@5
00 0e 0e 0 O
0 €g €9 0 €10 0 E11 0
Ao(KLG(T2)) = | 9 €12 €13 0 ey4 O ej5 O
00 0 0 0 0 O ej4¢6
00 00 0 0 0 0
00 00 0 0 0 0

It is an 8 x 8 symbolic matrix, where its rows and col-
umns are associated with the vertices of KLG(T2), e.g.,
the first row and first column are associated with the
vertex S/®, while the last (8th) row and last column are
associated with the vertex Sor. As mentioned above, the
adjacency matrix theorem gives a way to determine the
number of walks of length k from one vertex to another
in a directed graph. Based on it, a weighted matrix theo-
rem is defined as follows.
Han etal. Chin. J. Mech. Eng. (2020) 33:2

Weighted Matrix Theorem: The edge terms(ET) of
walks of length k from vertex V; to vertex V; in a weighted
graph G,,, who regards the edge labels as the weighted val-
ues of each edge, are given by the (i, j) element of A‘ (Gy).

Let WK, V;,V;) be the walks of length k from V; to V; in
G,,. Based on mathematical inductive method, the theo-
rem can be proved as follows:

Proofs When k=1, the edge term of W(LV;V;) is
the edge e(V;,V;). Thus, the theorem is definitely cor-
rect according to the definition of weighted matrix.
Let as 1 and ak ij be the (i, 7) elements of Ak 1(G,)
and Ak (Gy) respectively. Assuming that the edge
terms (E T) of WkK-LV, V;) are given by a 1 Since

Ak (Gy) = AK! (Gy) Ao,

Ny
= (> cs Ain (4)
m=1

where WN, is the dimension of the weighted matrix and
equals to the number of vertices of G,,. As we known,
each W(k,V;,V;) is constructed by connecting an edge
eV »V;) with W{k—1,V,,V,,,). In Eq. (4), the value of dy mj iS
O or the edge label of e(V,,, Vi), while the value of a, is O
or a polynomial that made up by one or several monomi-
als. Based on the assumption, se 1 ai is the ET to all
the walks of W(k—1,V,,V,,,). Thus, Eq. (4) can be looked
as the polynomial operation to construct W(k,V;,V;), and

ak j is the ET to all the walks of W(K,V,, V;).

In Eq. A ), the value of ak . is also O or a polynomial.
When ak jj 18 0, there is not a walk of length k from V;, to
V; in the weighted graph. When a jj 18 a polynomial, the
alphabetic items of each monomial of it are the ET of a

walk of W(k,V;,V;) in the weighted graph. For example,
the (1,8) element of At (KLG(T2)) is

4
A) 3 = €2e5€6eg + €3€5€12€14 + €3€7€13€16. (5)

It can be found that aS is made up by three different
monomials, and the alphabetic items of each monomial
are the ET of a walk of W(4,V,,V) in KLG(T2) as Figure 5
shows. Here, V,= SIK and Vg= sof as A,y(KLG(T2))
shows.

As mentioned above, each walk in KLG(T2) whose head
is input-vertex (i.e., SIX) and tail is output-vertex (i.e., Sot)
can be looked as a design candidate. Therefore, the three
monomials in polynomial ay can be looked as three dif-
ferent design candidates. To highlight this kind of mono-
mial and polynomial, they are named as monomial-walk
and polynomial-walk respectively in this paper. Thus, it
can be said that the synthesis process of mechanical con-
ceptual design is transformed into polynomial operations
through the weighted matrix theorem.

Page 6 of 15

 

Gwk

 

a The walk in KLG(T2) of €,€5€¢@¢
Gw*

 

SGi*
b The walk in KLG(T2) of €325€)5@)4

ERY

 

PRWS*

¢ The walk in KLG(T2) of €3€,2,3€;,

Figure 5 Three walks in KLG(7T2) corresponding to the three
monomials in a¥ g
L

 

4 Polynomial Operations

4.1 Polynomial-Walk Operation

The polynomial-walk operation is used to calculate the ET
to all the walk representations of design candidates in a
KLG. Based on the weighted matrix theorem, a formula is
given as

Nmax+1
= ‘> aAk-?(KLG)b,

= A,(KLG)(m,), (6)

b = A, (KLG)(:,n),

Pym (KLG)

where Pym (KLG) is the computed polynomial-walk,
while A,,(KLG) is the weighted matrix of KLG. N,,,, is
a positive number that denotes the maximum number

of mechanisms a mechanical system may have without

 
Han etal. Chin. J. Mech. Eng. (2020) 33:2

considering the virtual mechanisms of “System Input”
and “System Output” The value of it is given by the
design specifications. Moreover, m and n are the row
index or column index of input-vertex and output-vertex
of A,,(KLG) respectively. Thus, a and b are the row vector
and column vector of input-vertex and output-vertex in
Aw(KLG) respectively.

For example, in the weighted matrix A,,(KLG(T2)) of
KLG(T2), m=1 and n=8. Then, a=(0, e,, €, 0, es, 0; 4,
0) and b=(0, ez, 0, 0, 0, e;¢, 0, 0)". Set N,,,.=3, the poly-

Max

nomial-walk P*,[KLG (T2)] calculated by Eq. (7) is

Py, [KLG(T2)] = €1€5 + €12€3€5 + €16€2€7 + €12€14€36€5
+ €13€16€3€7 + e2€5€6e8.

(7)
Let N,, be the number of mechanisms in a design
candidate and N, be the number of degree to the corre-
sponding monomial-walk. Then, N,,=N,—1. Therefore,
Eq. (7) illustrates the ET to the walk representations of
six feasible design candidates with the number of mecha-

nisms of them from N,, =1 to N,, =3.

4.2 Edge Sequence Operation

Generally, every monomial-walk is made up by two
parts, i-e., the numeral item and the alphabetic items. In
the monomial-walks of the polynomial-walks ay and
P}, [KLG(T2)], the value of their numeral items are all
equal to 1. However, sometimes the value of numeral
item of a monomial-walk may be larger than 1. For

Page 7 of 15

example, Figure 6(a) shows the composition of Mi", who
is a monomial-walk of the (1,8) element of A’ (KLG (T2)).
Here, the value of the numeral item of M{” is 2. As men-
tioned above, the alphabetic items of a monomial-walk
are the ET (edge terms) to the walk of a KLG. However,
it should be noticed that several different walks of a KLG
might have the same ET, while a walk is uniquely deter-
mined by its ES (edge sequence). It means that the ET
of a monomial-walk may be sorted into several different
ES to several different walks. Since the numeral item of
a monomial-walk is generated by merging homogeneous
monomials in the polynomial operation of Eq. (5) and Eq.
(6), the value of it reveals that how many ES the ET of a
monomial-walk can be sorted.

In Figure 6(a), the ET of M*” is ET(MK”) = {e19, €13) C169
C5, Cg) Cg) C7) Eo}. It can be sorted into two different edge
sequences ES} (Mx”) and ES» (Mx”) (see Figure 6(b))
according to the connection relationship between the
edges shown in Figure 6(c). In fact, Figure 6(c) is also the
graph representation of two different walks in KLG(T2)
from SI* to SOX. Both of these two walks have the same
edge terms ET(M<"), and ES) (Mx”) and ES» (Mi) are
exactly the ES of them respectively.

Based on above analysis, the key issue of edge sequence
operation is how to figure out all the edge sequences of
a monomial-walk M*”, i.e., ESp(M4&"”)(£ = 1,2,...,Ny);
according to its edge terms ET(M*”) and the connection
relationship between the edges. Here, N,, is the value of
numeral item of M*”.

 

Va

Kw __ 2
My = 2 019013816 CnC 6 C720
Numeral —]

item>1

Alphabetic items =
edge terms (ET)

a The composition of a monomial-walk M *"

 

XN

Sort ET according to the connection
relationship between the edges

Kw
ES\(My") = (€25&6 59s &6 +2102 13> 279 e16)

Kw
ES, (My") = (€55€6s€10> 139 62 €9» 7 G16)

b Two edge sequences /S,(M*") and ES,(M*") of M*"

 

PRW,*
c The connection relationship between the edges in KLG(T2)

Figure 6 Composition of monomial-walk Mivand its two edge sequences

 
Han etal. Chin. J. Mech. Eng. (2020) 33:2

Let e; and e, be any two edges in ET (M*"), if
ter(e,) = init(e)), then e; and e, may be adjacent in
ES;(M*”). Besides, let e,, and e,,, be the first and last
edge of ES;(M*") respectively, then init(e,,) equals to the
input-vertex of KLG while ter(e,,,,) equals to the output-
vertex of KLG. According to above statements, an edge
sequence sorting algorithm is presented below.

Edge Sequence Sorting Algorithm:

(1): Set A=1, ST set = {teint f and SP et = {less -

(2): Generate all the items $7" .41) ser © Stesty-ser and

—set
out

5 E sou
mn,(k+1)—set (k+1)—-set *

{
(2.1): Slis-ser =O» For each 577.0, € Sp ser
Siig = ETM") — (S74. sor Cou 3)» We; Sie» if
Ter( 87x se; =init(e; ), then
s i (kel)-set =s i k-set Ufe j }
SGeit)-set =. For each Sin k—set € ae ’
Sine = ET(M*") — (Sint ser SX@n}) © Wen Sues if
Init( sr. ser =ter(e,, ), then
s min (k+l)-set = Sr k-set Ufe,}; .
(2.3): Check and remove the same items in S(i41)_ ser

(2.2):

and Soi1)-ser
j
(3): Let Ng be the number of edges in ET(M‘*”) . When Ne
is an even number, if k+1<N-z/2, then k=k+1 and go to
(2); Otherwise, go to (4) to find out all the ES,(/*"),
and then terminate. When Nz is an odd number, if
k+1<(Ne+1)/2, then k=k+1 and go to (2); Otherwise,
go to (5) to find out all the £S,(/*”), and then
terminate.
(4): Vs est-ser ANd Shin ceat)—ser » UE
Ter 874-41) -ser ANIM Shin (est)-ser)» then
Si (k+1)-set U Soon(k-+1)—set is an ES of ES,(M*").
(5): Vii (ket)-ser and shin (k+t)-ser> If
Last $3 e41)-ser =P Urst ser" ceat)-ser)» then
Si (est)-set U Sin (K-+1)—set is an ES of ES,(M*").

Here, 1 ot is a set in which each item Sih set is an
ordered set of k edges that starting with e,,. While, 5?”
is a set in which each item sr sep 18 an Ordered set of k
edges that ending with ej, Si.) sep ANG S74 1) sop have
the similar meanings with S/” _,, and S?““. respectively,
instead that the items in them contain k+1 edges. The
value of function Ter() equals to the terminal vertex of the
last edge in corresponding ordered set, while the value
of function Init() equals to the initial vertex of the first
edge in corresponding ordered set. For example, assum-
ing an ordered set of edges is {e, €,, eo}, then Ter({e,, e,

€y}) = ter(ey) = CRS and Init({e, &¢; eo})= init(e,)=SIK.

Page 8 of 15

The values of functions First() and Last() equal to the
first edge and last edge in the corresponding ordered set
respectively, e.g., First({e,, €¢, €o}J=e, and Last({e,,
€o})=€y. To explain the steps of edge sequence sorting
algorithm clearer, M<” is taken as an example to show
the execution process of the algorithm as illustrated in
Table 3.

4.3 Vertex Sequence Operation

The relationship between the vertex sequence VS;(M‘*")
and edge sequence ES;(M*"”) of a monomial-walk M‘”
is one-to-one. Here, the task of vertex sequence opera-
tion is to figure out all the VS¢ (M&”) of M*” based on its
ES;(M&"). In order to complete this task, a formula is
given as

NE
VS¢(MK") = [|_J init(e;)] U ter(er) (ei, ef € ESe(M*")),

i=1

(8)
where init(e,) is the initial vertex of the ith-edge e, in
ES;(M&"), while tere) is the terminal vertex of the
final edge e, in ESe(M ‘W), N; is the number of edges in
ES;(M&"). For example, ES;(M{") and ESo(M;") are
two edge sequences of Mi" (see Figure 6(b)), and the
final edge of both of them is e,,. Based on Eq. (8), the two
vertex sequences VS} (Mx”) and VS» (Mx”) of Mi” are

VS, (MK") = {SIB, CRE, CRER, CRE, CR}, SGRR, CRS,
PRW?* SOR},
VSo(ME") = {SI®, CRS, CRPR, SGRR, CRE, CRO, CRE,
PRW?* SOR}.

(9)

5 Computational Flowchart of Synthesis Approach
The proposed computational synthesis approach begins
with the user-specified design requirements that includ-
ing the input motion, output motion and the maximum
number of mechanisms WN,,,, in the design candidates to
be generated. Then, the graph framework is built and dif-
ferent polynomial operations are adopted to figure out
the walk representations and path representations to all
the feasible design candidates. The computational flow-
chart of the synthesis approach is illustrated in Figure 7.
To summarize and explain this figure, the steps to the
computational process are:

Step 1: Set design requirements and extract KFUs
from the chosen mechanisms.

Step 2: Construct KLG based on the two connec-
tion rules, and generate its vertices set V(KLG) and
weighted matrix A,,.(KLG) so that the KLG can be
recognized and used in computer.
Han et al. Chin. J. Mech. Eng.

(2020) 33:2

Page 9 of 15

Table 3 Execution steps and execution results for each step of edge sequence algorithm with M*acting as an example

 

Execution steps
k=1,k+1=2<(8/2=4)

k=2,(k+1=3)<(8/2=4) SH or = {{€2, €6, Co}, {€2, €6, C10}}, S

Results for each step

Cin = €2€out = e16, thus $1” . = {{er}} Sou. = {fere}}, then 54”. = {{e2, eo}, {e2, e7}}, 5st. = {fe7, e16}}

3—set = {{€9, e7, C16}, {213, e7, ei6}}

k=3,(k+1=4)=(8/2=4) Sh cot = (2, €6, 09, C6}, {€2, €6, €10, €13}, {€2, €6, €9, €7}},
Sq ot = {{€6, €9,€7,e€16}, {€10, €13, 7, e16}}.

 

Since

Ter({€2, €6, €9, €6}) = Init({e10, €13, €7, €16})
=CR}*, and Ter({e2, €6,€10, €13}) = Init({e6, €9, €7,€16}) =CRY,

ES, (Mi)

={e2,€6, €9,€6} U {€10, €13,€7, 16}
={e2, €6, €9, €6, €10, E13, €7, C16},
E53 (Mi)

={e2, €6, €10,€13} U {€6, 9, €7, C16}
= {€2, €6, €10, €13, 66, €9, €7, C16}

 

 

 

XN

Figure 7 Computational flowchart of the synthesis approach

   
  
  

. : Ki
Start Run edge sequence operation for M ;"

Set design requirements :
Input motion; Output
motion; Niiax

     
   
 
  
   

. Kw
N n =the numeral item of M ;*"

|

ye = SES Awe — a
Sry = {ES,(M,"")}(€ =1,2,---, N,,)
Extract KFUs from the ,
chosen mechanisms

Generate V(KLG) and
A,(KLG)

Run polynomial-walk operation
to compute Pp max ( KLG )
Run vertex sequence operation
to compute V§, (M*")
i

 

W (M*) = VS,(ME"), ES,(M**)}

|

Generate and Save VS(P(W,))
and A(P(W,))

ft

C=C41

 

 

 

Step 3: Run polynomial-walk operation to compute
polynomial-walk Pye (KLG), and then separate and
save all its monomial-walks Mi" in set Syjpkw.

Step 4: Run edge sequence operation for each Mi”
to figure out all its edge sequences ES, (ME"), and
then save them in set S;<.

Step 5: Run vertex sequence operation for each
ES;(ME”) to figure out its vertex sequence
VS;(Mk"). Then, a walk representation W, of Mi”
is formulated.

Step 6: Generated and save the vertex sequence
VS?(W-¢) and adjacency matrix A’(W,) to the path
representation of W?.

6 Design Example

The task here is to figure out all the feasible design can-
didates of a mechanical system, who is able to trans-
form the input continuous rotational motion into the
output reciprocating translational motion, from the
chosen mechanisms. The maximum number of mecha-
nisms in the mechanical system WN,,,, is set to 3.

6.1 Extract and Formulate the KFUs

Due to space consideration of the paper, only four kinds
of mechanisms, i.e., slider-crank, worm gear, cam-fol-
lower and spur gear, from the 43 identified mechanisms
in Ref. [3] are chosen as the building blocks to con-
struct the mechanical system. The KFUs extracted from
these four mechanisms and two virtual mechanisms,
i.e., “System Input” and “System Output’, are illustrated
in Table 4.

6.2 Construct Kinematic Link Graph KLG

The structure of KZG is up to the types of KFUs and
their kinematic relationship. Based on Table 4, the
graph representation to the KLG of design example, i.e.,
KLG(T4), is shown in Figure 8(a). It is a directed graph
that has seven vertices and twenty edges, and the input-
vertex is SIK while the output-vertex is sot . The verti-
ces set V(KLG(T4)) and weighted matrix A,,(KLG(T4))
of KLG(T4) are shown in Figure 8(b) for subsequent
computing applications.
Han etal. Chin. J. Mech. Eng. (2020) 33:2

Table 4 Seven KFUs of the design example

 

 

Mechanisms KFUs

Slider-crank {SCR (R,1,-1), (7,1, 1)}
{SC]R,(T,1,1),(R,1,-1)}

Spur gear {SGR* (R, 1,1), (R,1,-1)}

Worm-gear {wa'® (R,1,—1),(R,1,-1)}

Cam-follower {CFRT, (R,1,-1), (7,1, 1)}
{SI?, (0,0,0), (R,1,—1)}

{SOf, (T, 1,1), (0,0,0)}

System input
System output

 

 

 

a The graph representation of KLG(T4)

V (KLG (T4)) ={ 1? wG sc SC™ sG™ CR® sor}

0 ee 0 e e O| ISK
0e e& OO e e OO} |WG*
oOo 0 & 0 DO S| Sco
A,(KLG(T4))=|0 e, @, 0 @, @, O| JSC”
0 4; @%6 O @7 &g 0} [SG
00 04 0 0 e | |CK"
00 0 0 0 0 0 | Jsor

b The vertices set and weighted matrix of KLG(T4)

Figure 8 Graph representation, vertices set and weighted matrix of

 

 

KLG(TA)
XN

6.3 Compute Polynomial-Walk

In the weighted matrix A,,(KLG(T4)), the row index of
SIK is m=1 while the column index of sor is n=7. Then,
the row vector of SIP is a=(0,e1,€,0,€3,€4,0) while the
column vector of SO? is b=(0,0,€,9,0,0,€99,0)’. Run pol-
ynomial-walk operation and substitute the values of m, n,
a, b, Nygy and Aw(KLG(T4)) into Eq. (6), the computed
polynomial-walk P},[KLG(T4)] is

Page 10 of 15

Pw [KLG(T'4)] = e2e10 + eae20 + e1e6e10 + e1eser0
+ €3€10€16 + €3€18€20 + €1€5€6€10
+ €2€9€10€12 + €1€5€8€20
+ €1€7€10€16 + €3€6€10€15
+ €2€9€14€20 + €4€10€12€19
+ €1€7€18€20 + €3€ge15€20
+ €3€10€16€17 + €4€14€19€20
+ €3€17€18€20.
(10)
It can be found that there are 18 different monomial-
walks Mi" (i =1,2,...,18) in P},[KLG(T4)], whose
numeral item are all equal to 1. Thus, it can be said that
there are a total of 18 different design candidates that are
assembled by the four different mechanisms in accord-
ance with the design requirements.

6.4 Compute the Walk Representations and Path
Representations to the Design Candidates

Run edge sequence operation and vertex sequence opera-
tion for each Mi” in turn, the achieved edge sequences
and vertex sequences of the walk representations to all
design candidates are illustrated in Table 5, Column 3.
To each walk representation, its path representation is
transformed and illustrated in Table 5, Column 4. Fur-
thermore, the design candidate that corresponds to the
walk representation and path representation is displayed
by a two-dimensional motion sketch and illustrated in
Table 5, Column 5.

7 Conclusions

This paper presents a novel computable synthesis
approach of mechanical conceptual design. It employs
the walk and path mathematical structures in graph
theory to represent the design candidates. A kinematic
link graph (KLG) is constructed by looking every kin-
ematic function unit (KFU) extracted from the mecha-
nisms as a vertex. Two connection rules are defined to
build the edges between those vertices. In KLG, each
walk starting from the input-vertex and ending at the
output-vertex is looked as a design candidate. Since a
walk is represented by its edge sequence (ES) and vertex
sequence (VS), the synthesis problem of mechanisms is
turned into figuring out all the specified walks’ ES and
VS in KLG. Thus, a weighted matrix theorem is defined
and proved. Based on this theorem, a formula is induced
to compute the polynomial, in which every monomial’s
alphabetic items are the edge terms (ET) to one or sev-
eral different walks’ ES. Then, an edge sequence sort-
ing algorithm is given to sort and split the alphabetic
items into one or several different ES. Furthermore, a
formula is given to compute the VS of a walk based on
 

  

Page 11 of 15

  

      

 

 

(2020) 33:2

 

 

00000
Lo0000
aN OL000] =(3w) WM) Vv
L sa 00100
- ts RS) O0010 {Olg‘Zla'6a'la} = Cus) Ioj (sy)!
< “TyUBAD 1 1 1 1 1 1 1 1 =
aE Sons (los' 29s 'ylos' los List = (CyB) WA) SA (los plas ‘ytos' bos ss} = Cue isn f— seni Zig0la6aza WW
00000
_ ; Lo0000
ya \ O0L000] =(iW Ww) Vv
t N : NST 00100
om a = 00010 {0la'9a'Sa‘la} = (SW) !SJ = (,4w)\y)
SS TOR {FOS yDSyS9M ‘yiOM ‘yIS} = (ug) MI) gSA {FOS YDS‘ yyOM ‘yyOM “ylS} = Gus) SA my 01a%9aSala msi
0000
L000] _w 9,
0100 (ny) MW) a
0010 {0cg‘8la‘€a} = Cus) oq = ( OW) "
{FOS hd yiOS HIS} = Cs) WM) GSA {OS yD ‘yiOS ‘ylS} = Cus) ESA my OZa8lata my
0000
L000] Ly sani
0100 (ny) MW)
O01 0 {0la'9la‘ta} = Cus) oq = ( Sw) "
{FOS sf 9S ‘yi HIS} = (Cus) A) GSA {OS DS ‘yyDS ‘wlS} = Cus) “SA Mm 91a0laea my
0000
L000] Ly ban,
0100 (Guy) WM) a
0010 {928312} = GuyW)'ST YL tay iy
{JOS ‘hI ‘yhOM HIS} = (Guy) A) gSA {10S dD ‘yyDM HIS} = Guy) ISA mi O2a8ala my
0000
L000] Lw@ €,n1
0100 (Guy) WA) a
‘ 0010 [io 8} = CEID'ST © sayy
any WHORL {JOS "9S ‘yyOM ‘ylS} = (Cus) A) GSA {FOS 9S‘ yyOM ‘yIS} = Cus) ESA my Ola%alg sl
000
Loo} =(§W)'M) Vv
010 ya) —
i £083" = GD 'SIY tay gy .
{ 50S" yD ‘ylSt = (ny) MW) GSA { 0S‘ yD ‘ylSt = Guy) SA oy OZara myWV
000
100} = (nw) 'M) Vv
| O10 {Ola‘@a} = Guy) loq = ( LW) "
Samo {FOS * h9S HIS} = (Cu WA) GSA {JOS DS ‘ylSt = Guy) ESA my Olaza my
sa}epipue> ubisag suol}e}yUasaidal yjed suol}e}yUasaidas yjeM sy]eM-]eIWOUO|] ral

 

Han et al. Chin. J. Mech. Eng.

sa}epipue> uBbisap g| ay} 0} suo!}e}UaSa1daJ yZed pue suO!}e}UAaSAaJdaJ y/EM ‘syJeM-jeIWIOUOW SUL ¢ a1qGeL
Page 12 of 15

(2020) 33:2

Han et al. Chin. J. Mech. Eng.

 

FI MONO | |

we x Hod \

/ \ 7 \

x™ Afb Libba lied
\

/ \
t/-?- a :

; AN —>
\ A wading

 

ff ™,.
deg! | }
A 4a)

PTT

j }
ii

}

Cities

ynduy WHOM

 

        

 

 

[ 7 N
yuBlD Tues
=49Pls -AIpPS

    

JOMOTIOF

  
 

“AIPHS ~AOPHS

Iw _

 

 

  
   

mes +>
™ indjng
Ted")

ands

 

we)

4 MOJO

 

Tey . egeeedettet
v7 p— \

(RM

pw -— THO |

 

— [WLIO
induy

 

= (GiyW) ‘M) JW

OOO Oo

00
00
L O
Ol
00

—- O00 0
OOOO OC

{ OS‘ ydD‘yyOS ‘yyOM ‘ylS} = (Cry) WA) GSA
00000
Lo0000
01000] =(Giyw mM) v
00100

0010
{JOS 9S yi DS ‘ytd ‘ylS} = (CRY) WA) gSA

= (CW) 'M) JW

OOO Oo

0
0
L
0
0

OT OO OC
—-— OOO C0
OOOO CO

{FOS ID ‘ypDS ydDS ‘ylSt = (CSW) MA) SA

= (CnyW) WA) gv

OOO Oo

0
0
L
0
0

OT OCC
—- O00 0
OOO C CO

{OS yDS‘yGSM ‘yyDS ‘ylS} = (Cry) A) GSA

= (CW) ‘M) JW

OOO Oo
—- O00 0
oO OCC CO

0
0
L
0
0

OoOnT COCO

{ JOS" yDS‘y§9S ‘yyOM ‘ylS} = (Cay) “M) gSA
00000

0 = ((uSW) MA) WV
0

OT OC

0
0
L

OOO
OOO

00010
{FOS 940 ‘yG9M 'yGDM “yIS} = (nS) WA) gSA

{0ca'8la‘Za'la}

{OS ID ‘yyDS ‘yyDM ‘ylS}

{Ola ‘cla ‘6la‘va}
{70S DS ‘ypDS ‘yt ‘lS

{0¢9 'vla ‘6a 'Ca}
{JOS yt ‘yp DS‘ yDS ‘ylSI

{0la'99‘Sla'ta}

{JOS DS ‘yy DM ‘yyS ‘ylS}

{Ola'9la‘Za'la}

{OS DS ‘yyDS ‘yyDM ‘ylS}

{09 ‘89 'Sa‘la}

{JOS 4D ‘yyOM ‘yO “slSI

Cry) 's3

= (Vw)
rly isa f — GnindiM

COW) 's3

= (Eb)
Elisa f — Gnidia

CW) 'sg

(elisa, f= Gada

(ny) 'S3

= (Lh)
Gil isa f= Uni

(Sy) 'S3

= (AA)
CSlyisa f — Gnidia

Cus) 'Sg

= (_ Sy/)1
Cus) SA (ny) 'M

Oca8laZalg

6lgclgQ0lgrv9g

OCavla69C¢3

Sl9Q0La99¢9

9la0laZalo

Ofa8aSa la

vl
ny

El
fy

cl
Ay

LL
wy

Ol
my

6
uy

 

sajyepipue> ubisaq

suol}e}Uasoidas yjyed

suolj}eyUasaidas ye

syjemM-|elWOUuo|y

dl

 

(panuiuod)

$s 919eL
Page 13 of 15

(2020) 33:2

Han et al. Chin. J. Mech. Eng.

 

          

 

 

 

      

 

 

00000
L0000
01000] =(AywW) mM) v
00100
0001

 

 

0 {0¢g‘8la‘Zla‘ta} = CW) oJ 1 pg
Lace Laas Lae! gl Lact lan baer lpe! gt = GiyW)'M gl
{OS yd yyoS yyoOS ylS3 = (CmyW) IM) SA {;OS wd yyoS yyoS ylS3 = CnyW) ISA 1 OcaslaLlata myWV
00000
Lo000
01000} = (AWM)
00100
sant 00010 {0%g'vla‘6la‘va} = Cay) log = (Ly iy
Sanaa Sees {FOS yD‘ yf DS‘ pytD HS) = (CAS) A) SA {FOS 1D ‘yfOS‘ ptD‘gIS} = Chay) ESA mi OZablablava my
00000
Lo000
Yap | 01000] = Ci) yv
J ints siding 00100
00010 {0la/9lg‘Llg'tg} = Gay) loJ _ (Sly) WN
{105 "ph SyG9S whos IS} = (CRIN) WA) GSA {10S $95 ywOS ‘yOS “HIS} = GAY) ISA mi Lla9la0lata ay
won| 00000
Lo000
nding OL000] =(GiywW Wav
00100
WO,
00010 {0%g'89'Sla'Ea} = GiyW) log = (Sly) yp
{JOS ' 94D‘ yyDM ‘yyDS ‘ult = (Cay) “M) GSA {JOS 340 ywOM ‘yy5S ‘ylS} = Cay) ESA my 0zaSla8aea aay
sa}epipue> ubisaq suol}e}Uasaidas y}ed suol}e}Uuasaida ye syJem-j|elWOuo|y al
(panuijuod) ¢ ajqey
Han et al. Chin. J. Mech. Eng. (2020) 33:2

its ES. The proposed synthesis approach was success-
fully applied in figuring out all the feasible design can-
didates of a mechanical system, who is able to transform
the input continuous rotational motion into the output
reciprocating translational motion, from the four cho-
sen mechanisms. All the walk representations, path rep-
resentations and two-dimensional motion sketches to
the 18 design candidates of the design example are pre-
sented. Through the proposed synthesis approach, there
is no need to search and match the mechanisms in the
mechanisms library exhaustively to find out all the fea-
sible solutions. All the feasible solutions can be figured
out through one polynomial operation by the proposed
approach. Besides, though the proposed approach is a
graph-based approach, there is no pseudo-isomorphic
graph problem in it.

Authors’ contributions

GL was in charge of the whole trial; LH wrote the manuscript; XY and BH
assisted with building up the framework of the research. All authors read and
approved the final manuscript.

Authors’ Information

Lin Han, born in 1988, is currently a PhD candidate at Shaanxi Engineering
Laboratory for Transmissions and Controls, Northwestern Polytechnical University
(NWPU), China. He received his bachelor degree from Northwestern Polytechni-
cal, China, in 2011. His research interests include computer-aided design and
optimization design of mechanical system.

Geng Liu, born in 1961, is currently a professor and a supervisor of PhD
candidates and director of Shaanxi Engineering Laboratory for Transmissions
and Controls, Northwestern Polytechnical University (NWPU), China. His research
interests include mechanical transmissions; dynamics of mechanical systems;
virtual and physical prototyping simulation and design technology of
mechanical systems; finite element methods; contact mechanics.

Xiaohui Yang, born in 1970, is currently a professor at Shaanxi Engineering
Laboratory for Transmissions and Controls, Northwestern Polytechnical University
(NWPU), China. His research interests include mechanical design, measure-
ment and control technology and visualization in scientific computing.

Bing Han, born in 1981, is currently an engineer at Shaanxi Engineering
Laboratory for Transmissions and Controls, Northwestern Polytechnical University
(NWPU), China. His research interests include collaborative design and simula-
tion integration technology of mechanical system, data and process manage-
ment of design process.

Competing Interests
The authors declare no competing financial interests.

Funding
Supported by State Key Program of National Natural Science Foundation of
China (Grant No. 51535009), and 111 Project of China (Grant No. B13044).

Received: 12 July 2019 Revised: 6 September 2019 Accepted: 27 Decem-
ber 2019
Published online: 03 February 2020

References

[1] S Kota, C Lee. A functional framework for hydraulic systems design using
abstraction/decomposition hierarchies. ASME International Computers
in Engineering Conference, American Society of Mechanical Engineers,
Boston, August, 1990. p. 327-340.

Page 14 of 15

[2] S Kota, SJ Chiou. Conceptual design of mechanisms based on computa-
tional synthesis and simulation of kinematic building blocks. Research in
Engineering Design, 1992, 4: 75-87.

[3] SJ Chiou, S Kota. Automated conceptual design of mechanisms. Mecha-
nism and Machine Theory, 1999, 34: 467-495.

[4] U Yasushi, | Masaki, Y Masaharu, et al. Supporting conceptual design
based on the function-behavior-state modeler. Ai Edam Artificial
Intelligent for Engineering Design Analysis & Manufacturing, 1996, 10(4):
2/5-288.

[5] D Sanderson, J C Chaplin, S Ratchev. A function-behavior-structure
design methodology for adaptive production systems. /nternational
Journal of Advanced Manufacturing Technology, 2019, 19: 1-12.

[6] HZ Zhang, X Han, R Li, et al. Anew conceptual design method to sup-
port rapid and effective mapping from product design specification to
concept design. International Journal of Advanced Manufacturing Technol-
ogy, 2016, 87: 2375-2389.

[7] Y Zu, RB Xiao, X H Zhang. Automated conceptual design of mechanisms
using enumeration and functional reasoning. International Journal of
Materials and Product Technology, 2009, 34(3): 273-294.

[8] B Chen. Conceptual design synthesis based on series-parallel functional
unit structure. Journal of Engineering Design, 2018, 29(3): 87-130.

[9] BChen,Y B Xie. A computer-assisted automatic conceptual design sys-

tem for the distributed multi-disciplinary resource environment. Proceed-

ings of the Institution of Mechanical Engineers, Part C: Journal of Mechanical

Engineering Science, 2016, 231(6): 1094-1112.

B Chen, Y B Xie. A function unit integrating approach for the conceptual

design synthesis in the distributed resource environment. Proceedings

of the Institution of Mechanical Engineers, Part C: Journal of Mechanical

Engineering Science, 2017, 232: 759-774.

[11] B Chen, Y B Xie. Functional knowledge integration of the design process.
Science China Technological Sciences, 2016, 60(2): 209-218.

[12] J HLee, MJ Ostwald, N Gu. A syntactical and grammatical approach to
architectural configuration, analysis and generation. Architectural Science
Review, 2015, 58(3): 189-204.

[13] M!| Campbell, S Kristina. Systematic rule analysis of generative design
grammars. Artificial Intelligence for Engineering Design, Analysis and Manu-
facturing, 2014, 28(3): 227-238.

[14] Y Zou, J LU, X P Tao. Research on context of implicit context- sensitive
graph grammars. Journal of Computer Languages, 2019, 51: 241-260.

[15] | Jowers, C Earl, G Stiny. Shapes, structures and shape grammar imple-
mentation. Computer-Aided Design, 2019, 111: 80-92.

[16] S Maneth, F Peternek. Grammar-based graph compression. Information
Systems, 2018, 76: 19-45.

[17] HL Oh, T Lee, R Lipowski. A graph theory based method for functional
decoupling of a design with complex interaction structure. Proceedings
of the ASME 2010 International Design Engineering Technical Conference &
Computers and Information in Engineering Conference IDETC/CIE, Montreal,
Quebec, Canada, 2010: 123-132.

[18] V R Shanmukhasundaram, Y V D Rao, S P Regalla. Enumeration of
displacement graphs of epicyclic gear train from a given rotation graph
using concept of building of kinematic units. Mechanism and Machine
Theory, 2019, 134: 393-424,

[19] C Shi, H W Guo, M Li, et al. Conceptual configuration synthesis of line-
foldable type quadrangular prismatic deployable unit based on graph
theory. Mechanism and Machine Theory, 2018, 121: 563-582.

[20] L Sun, X Chen, CY Wu, et al. Synthesis and design of rice pot seedling
transplanting mechanism based on labeled graph theory. Computers and
Electronics in Agriculture, 2017, 143: 249-261,

[21] VV Kamesh, K M Rao, AB S Rao. An innovative approach to detect
isomorphism in planar and geared kinematic chains using graph theory.
Journal of Mechanical Design, 2017, 139(12): 122301.

[22] A Chakrabarti, K Shea, R Stone, et al. Computer-based design synthesis
research: an overview. Journal of Computing & Information Science in
Engineering, 2011, 11(2): 519-523.

[23] L Al-Hakim, A Kusiak, J Mathew. A graph-theoretic approach to concep-
tual design with functional perspectives. Computer-Aided Design, 2000,
32(14): 867-875.

[24] GLi, Z H Miao, B Li, et al. Type synthesis to design variable camber
mechanisms. Advances in Mechanical Engineering, 2016, 8(8): 1-16.

—
=
oO

=
Han et al. Chin. J. Mech. Eng. (2020) 33:2

[25] Y H Zou, P He, Y L Pei. Automatic topological structural synthesis algo-
rithm of planar simple joint kinematic chains. Advances in Mechanical
Engineering, 2016, 8(3): 1-12.

[26] Z F Shen, G Allison, L Cui. An integrated type and dimensional synthesis
method to design one degree-of-freedom planar linkages with only
revolute joints for exoskeletons. Journal of Mechanical Design, 2018, 140:
092302.

[27] W J Yang, H F Ding, B Zi, et al. New graph representation for planetary
gear trains. Journal of Mechanical Design, 2018, 140: 012303.

[28] VV Kamesh, K M Rao, AB S Rao. Topological synthesis of epicyclic gear
trains using vertex incidence polynomial. Journal of Mechanical Design,
2017, 139: 062304.

[29] B He, S Wei, Y G Wang. Computational conceptual design using space
matrix. Journal of Computing & Information Science in Engineering, 2015,
15(1): 011004.

Page 15 of 15

[30] B He, PC Zhang, L L Liu. Simultaneous functional synthesis of mecha-
nisms with mechanical efficiency and cost. International Journal of
Advanced Manufacturing Technology, 2014, 75: 659-665.

[31] B He, PC Zhang, J Wang. Automated synthesis of mechanisms with con-
sideration of mechanical efficiency. Journal of Engineering Design, 2014,
25: 213-237.

[32] M Kobayashi, Y Suzuki, M Higashi. Integrated optimization for supporting
functional and layout designs during conceptual design phase. Proceed-
ings of the ASME 2009 International Design Engineering Technical Conference
& Computers and Information in Engineering Conference IDETC/CIE, San
Diego, California, USA, August 30-September 2, 2009: 881-889.

[33] J A Bondy, U S R Murty. Graph theory. Springer Berlin, 2008.

 

Submit your manuscript to a SpringerOpen”®
journal and benefit from:

> Convenient online submission

> Rigorous peer review

> Open access: articles freely available online
> High visibility within the field

> Retaining the copyright to your article

 

Submit your next manuscript at > springeropen.com

 

 

 
