Liu et al. EURASIP Journal on Wireless Communications and Networking
(2020) 2020:33
https://doi.org/10.1186/s13638-019-1591-1

EURASIP Journal on Wireless
Communications and Networking

RESEARCH Oy else =e

Web intrusion detection system combined
with feature analysis and SVM optimization

Chao Liu'?, Jing Yang’ and Jingiu Wu:

Abstract

Check for
updates

 

The current network traffic is large, and the network attacks have multiple types. Therefore, anomaly detection
model combined with machine learning is developing rapidly. Frequent occurrences of Web Application Firewall
(WAF) bypass attacks and the redundancy of the data characteristics in Hypertext Transfer Protocol (HTTP) protocol
make it difficult to extract data characteristics. In this paper, an integrated web intrusion detection system
combined with feature analysis and support vector machine (SVM) optimization is proposed. By using expert's
knowledge, the characteristics of the common Web attacks are analyzed. The related data characteristics are

selected by the analysis of the HTTP protocol. In the classification learning, the mature and robust support vector
machine algorithm is utilized and the grid search method is used for the parameter optimization. Consequently, a
better detection capability on Web attacks can be obtained. By using the HTTP DATASET CSIC 2010 data set,
experiments have been carried out to compare the detection capability of different kernel functions. The results
show that the proposed system performs good in the detection capability and can detect the WAF bypass attacks
effectively.

Keywords: Hidden Markov model, Protocol analysis, Support vector machine, Grid search

1 Introduction

The 2017 Global Threat Intelligence Center (GTIC) [1]
Q?2 threat intelligence report pointed out that among all
types of attacks, Web application have the highest propor-
tion of attacks, accounting for 21%, of which Structure
Query Language (SQL) injection accounts for 97%.There-
fore, the prevention of Web attacks is still the most im-
portant. Although the WAF products are constantly
upgraded, WAF bypass attacks always exist. Abnormal in-
trusion detection based on data mining and machine
learning has been developed rapidly in order to better ex-
ploit intrusion characteristics. In 2014, Devaraju et al. used
the neural network algorithms in the intrusion detection
[2] to effectively perform feature extraction and classifica-
tion. Zhao et al. applied the Markov model to IDS in con-
junction with the commonly used method of reference
[3]. Mukkamala et al. applied the supervised standard
SVM algorithm to intrusion detection [4], which has bet-
ter detection effect compared with the intrusion detection
using the neural network method.

 

* Correspondence: 545361998@qq.com
"Harbin Engineering University, Harbin, China
Full list of author information is available at the end of the article

D) Springer Open

 

Jabbar Akhil proposes an intelligent network intrusion
detection system using AODE algorithm for the detec-
tion of different types of attacks [5], and average one de-
pendence estimator (AODE) is one of the recent
enhancements of naive Bayes algorithm. AODE solves
the problem of independence by averaging all models
generated by traditional one dependence estimator and
is well suited for incremental learning. Through experi-
ments, it got a good detection result. Longzhi Yang pro-
poses a data-driven network intrusion detection system
[6], in particular, the developed system equipped with a
sparse rule base not only guarantees the online perform-
ance of intrusion detection, but also allows the gener-
ation of security alerts from situations which are not
directly covered by the existing knowledge base.

In the machine learning-based anomaly detection
model, there are some applications of hidden Markov,
SVM, and neural networks [7-9] in which SVM com-
pensates the over-fitting and generalization better com-
pared to other algorithms and has the advantages of
small-scale and high-dimensional Web intrusion detec-
tion [10]. Experiments show that the performance of the
SVM algorithm is directly affected by its parameters.

© The Author(s). 2020 Open Access This article is distributed under the terms of the Creative Commons Attribution 4.0
International License (http://creativecommons.org/licenses/by/4.0/), which permits unrestricted use, distribution, and
reproduction in any medium, provided you give appropriate credit to the original author(s) and the source, provide a link to

the Creative Commons license, and indicate if changes were made.
Liu et al. EURASIP Journal on Wireless Communications and Networking

In 2014, Xuefeng Li proposed a network intrusion
detection model based on genetic algorithm to syn-
chronously select features and support vector ma-
chine parameters [11], aiming at the problem of
high-dimensional data generated by intrusion detec-
tion system and parameter optimization of support
vector machine, which can improve the accuracy of
network intrusion detection and meet the real-time
requirements of network intrusion detection. In
order to solve the shortcomings of slow convergence
and easy to fall into local optimum in the process of
parameter optimization of support vector, Zhang
et al. proposed particle swarm optimization algo-
rithm [12]. Some researchers utilize the ant colony
algorithm [13] to find the SVM parameters with the
highest detection rate, thereby improving the detec-
tion rate. Later, PRK Varma [14] proposes a set of
network traffic features that can be extracted for
real-time intrusion detection and also proposes fuzzy
entropy-based heuristic for ant colony optimization
(ACO) in order to search for global best smallest set
of network traffic features for real-time intrusion de-
tection data set. However, in practice, the algorithm
is relatively complicated, time-consuming, and does
not necessarily achieve an optimal solution. Rela-
tively, the grid search algorithm has the advantage of
easy to implement and the appropriate solution can
be found in a short time, which is more suitable for
the complex and variable network environment. In
this paper, an optimized Web intrusion detection
system based on feature analysis and SVM algorithm
is proposed. The hidden Markov model is used to
identify the parameter types, and the grid search al-
gorithm is applied to optimize the parameters to im-
prove the intrusion detection rate.

The remainder of this paper is organized as follows:
Starting from the analysis of Web attack characteristics,
Section 2 studies the attack techniques of common
Web attacks and summarizes the attack characteristics
of the bypass attack techniques for the protection de-
tection. Section 3 studies the characterization of data
detection, using SVM algorithm to establish the model
and optimize the parameters. The overall design of the
intrusion detection system is given in Section 4, and
the CSIC datasets were used to carry out experiments
in the model establishing. Conclusions are drawn in
Section 5.

2 Related work

When visiting a website, attackers often analyze the
vulnerability of the website first and then attempt to
access the sensitive resources of the website by
manually designing the uniform resource locator
(URL) request. After that, the website resources are

(2020) 2020:33 Page 2 of 9

modified or injected the Trojan by attackers and the
corresponding network data packet will change.
Common Web attacks include SQL injection, cross-
site script (XSS) attack, command execution, remote
code execution, and directory traversal attacks.
Among them, SQL injection usually uses the SQL
blind annotation to obtain the hidden information of
the database and then achieve the purpose of obtain-
ing database information and Web shell.

At present, most WAF products are based on the
blacklist of expert knowledge for detection and intercep-
tion. However, hackers often bypass the detection rules
to achieve attack. The following is a common bypass
Web attack analysis, as shown in Table 1.

Besides, websites often have vulnerabilities in code
detection and buffer overflow protection. Therefore,
attackers always try to attack websites by encode
bypassing or making the length of packet length
large. Among them, for the detection of sensitive
characters, the commonly used bypass methods are
used including comments, equivalent functions or
equivalent commands, special symbols, and encoding
bypass of sensitive characters. These bypass laws are
traceable, and the corresponding parameter features
can be extracted from the attack bypassing features
to mark the potential attack risk. The summary fea-
ture detection points are shown in Table 2:

According to the summarized detection points, key
parameter features such as access request, parameter
length, number of parameters, parameter type, param-
eter encoding, and parameter sensitive character are ex-
tracted. The extracted data features are used as the
attribute values of the model samples, which summarize
the data features of the Web attacks and solve the limi-
tations of large network data traffic, high dimensionality,
and difficulty in data feature extraction.

3 Methods

3.1 Proposed model establishment

According to the characteristics of the Web attack sum-
marized in the previous section, especially for the com-
mon methods of bypass attacking, the parameters such
as URL identifier, parameter length, sensitive character
detection identifier, abnormal code detection identifier,
and parameter type identifier are extracted. Then, the
nonlinear SVM algorithm is applied to find a kernel
function that is more suitable for this scenario. Finally,
combined with cross-validation, a grid search algorithm
is used to find the best combination of parameters. Be-
cause of the differences between access requests, a sep-
arate model needs to be established for each type of
access request. The model establishing process is shown
in Fig. 1.
Liu et al. EURASIP Journal on Wireless Communications and Networking

Table 1 Feature analysis of bypass Web attack

 

Common Web protection
measures

Corresponding bypassing
techniques

 

Case sensitive Bypass by case conversion

URL encoding detection Bypass by the multiple URL

encoding

Sensitive character detection Bypassing by comments

 

3.2 Data characterization

After summarizing the characteristics of the Web attack
in the previous section, the key parameter features are
extracted. The characteristics of each part are as follows:

(1) Access request identifier: A HTTP request access
consists of a domain name, a file path and a
commit parameter. The HTTP access request is
identified by the URL and parameter name and
then use the md5 encryption for desensitized.

(2) Parameter length: Get the length of the character
according to the extracted “post” or “get”
parameters. Transform sequence x}, %2,

__ x;-X ‘ x _ 1 N . __
= *~, In which¥ = - 0) xi, 8 =

Bt oie (*i-¥)”.

sequence ¥1, Y2,__, ¥, is O and the variance is 1.
(3) Number of the parameters: Separating the
parameters to obtain each parameter name and its
corresponding value. Normalizing the parameters
using the Min-max method, in which v; represents
the number of parameters. Performing Min-max
transformation: y,; = 7" ,i = 1,2, -+-, 1, Vmin

max Vin ?

= min {v;}, and Vmax = pmax {Vi f. Then, the nor-
<

malized attribute value data Vis Vos
interval [0 1].

(4) Abnormal Encoding Detection Identification:
Define 9 encoding types: urldecode, md5, shal,
sha256, base64, unicode, utf8, html entity
encoding, and undefine (normal). Among them,
the lengths of md5, shal, and sha256 are
different while the modes are the same.

» Ny: Vi

Then the mean value of new

   

, Vn falls in the

Table 2 Summary of feature detection points

 

Attack techniques Feature detection points

Case sensitive, keyword Detect sensitive characters

replacement

Multiple URL encoding Detecting the form of %25%

Comment the bypass, empty
byte bypass, special symbol
bypass

Detect the specific character of
characteristics

Weak coding detection Detect the hex encoding, char
encoding, html entity encoding,

unicode encoding

Overflow Detect packet length

 

(2020) 2020:33 Page 3 of 9

Therefore, the min-max method is used for the
normalization processing.

(5) Sensitive character detection identifier: A sensitive
character library is built for general attack, SQL
injection, and sensitive directory scanning. Then,
the Min-max method is used for the normalization
processing.

(6) Parameter type identification: According to the
different parameters of different URL requests, the
hidden Markov model (HMM) algorithm is trained
separately to obtain the score of the HMM
algorithm. The type of the parameter is identified
by a numerical value and the feature is digitized.
Then, the z-score method is used for normalization,
which will be expanded in the next section.

3.3 The identification of parameter type by the HMM
algorithm

The HMM algorithm [15] describes how to convert a hid-
den Markov chain into a state sequence and how to obtain
an observation sequence from a state sequence.

It can be concluded that the parameter value of the
HTTP access request consists of letters, numbers, con-
nectors (-_\), other special characters (ASCII codes with
the number 32-47), and other characters such as Chin-
ese characters. The hidden state is recorded as: S1, 82,
S3, 54, S5, and the generalization of the parameter
values is as follows: [a-zA-Z] is generalized to A, [0-9] is
generalized to B, [-_\] generalized to C, characters with
ASCII code 32-47 are generalized to D, and Chinese and
other characters are generalized to N, as shown in Fig. 2.

Since the value range of the parameter values in each
URL is different, it is necessary to establish HMM model
according to different parameters in different URLs. Fur-
thermore, the HMM model parameters of each parameter
in each URL are obtained, and the calculation of the model
parameters is performed using the Baum-Welch algorithm.

After the HMM model is obtained, all the access re-
quests are traversed: matching the corresponding HMM
models and then using the forward algorithm to calcu-
late the probability of different parameters in different
URLs. The probability of different parameters in the
same URL is summed up as the tag value of this URL
parameter type.

3.4 SVM algorithm modeling

SVM is a binary classification model, which is the classi-
fier defined in the feature space with the largest interval.
The learning strategy is to maximize the interval, which
can be formalized into a problem of solving convex
quadratic programming. The learning algorithm of SVM
is an optimization algorithm for solving convex quad-
ratic programming.
Liu et al. EURASIP Journal on Wireless Communications and Networking (2020) 2020:33 Page 4 of 9

 

Data preprocessing

Separate
modeling

Modeling of Modeling of
S¥ fi algorithm S¥fvl agorithm
Model URLI Model URL2 em Model URLn

Fig. 1 Model establishing process

 

Assume that the training set sample is T= {(x1, yi), (%2, 1, n
V2) °°) Xp» Yn)} among them, *je¥ = R”,y,<Y = {-1,4+1 a + cy ci (0.1)
_ vee . ‘ i=0 0.1
Li = 1,2,-::,u. The feature vector Xi of the i th sample, s.t. y(@-x; + b)21-€,,i=1,---,n
that is, the parameter vector participating in the oper- €.>0,i=1.2,-0n
1— ) ~~ ) ) )

ation, y; is the flag of the i-th sample, and when y;= - 1,
the sample is an attack sample, and when y;= +1, the
sample is a normal sample.

When the training data is linearly inseparable, the | n
soft-interval SVM algorithm is applied, and a slack vari- min 5 » aaj; /K (x a » ai
able €;>0 is introduced for each sample, and a corre- mt joi =I (0.2)
sponding penalty parameter C20 is added to the st. S- ay, = 0
corresponding objective function to obtain the following i=1
convex quadratic programming problem: OsajsC,i=1,2,--,n

 

Hidden sequence Si [ ss | [ s2 |

 

Observation sequence [ a | KS [ _ | [ 1 [ 1 ] [ «|

Observation sequence after generalization A NS [ c | BO 2)

Fig. 2 Character generalization

 
Liu et al. EURASIP Journal on Wireless Communications and Networking

(2020) 2020:33 Page 5 of 9

 

Data preprocessing

Parameter feature detection

string matching

Datanormalzation

Normalization. Normalzation

 

Fig. 3 System structure diagram

Among them, C 20 is the penalty parameter, and K(x;
-x;) is the kernel function. The parameter characteristics
of different access requests are independent of each
other, and each access request is modeled to more ac-
curately represent the characteristics of an access re-
quest. First, get a list of URLs, sort the dataset by URL,
and get the dataset for each URL. The model establish-
ment process of the i-th URL request is as follows:

In the first step, the HMM algorithm is used to calcu-
late the tag value of each parameter in the request, and
the model parameters of the HMM algorithm are stored
for data preprocessing during detection.

In the second step, the data is implemented in
vectorization for the calculation of the algorithm, and
the SVM algorithm is used for training and learning to
obtain the model.

In the third step, the established model is stored for
the use in the matching model for intrusion detection. A
corresponding model is created for each URL request in
the list for application detection.

3.5 Parameter optimization
Cross-validation (CV) [16, 17] groups the original data
into training sets and test sets. First training with the
training set, and then using the test set for verification,
which is a good statistical analysis method for classifier
performance testing.

Grid search method refers to the parameter dividing
and traversing all points in the grid according to the net-
work within a given range. For the selected parameters,

(— model research

Model building phase

Sym algorithm learning
Optimization of Gridsearch parameters

Model detection staze

Sym algorithm detection

Event response

Event database

Corresponding parameter characteristic

Early warning attack information

the CV method is used to calculate the classification ac-
curacy rate under this value. And the set of parameters
with the highest classification accuracy is taken as the
optimal parameter. In order to avoid the occurrence of
over-learning state, when the penalty parameter C has
multiple values, the minimum value is selected as the
optimal parameter.

4 Results and discussion
4.1 Design of the intrusion detection system
The feature analysis and SVM algorithm-optimized Web
intrusion detection system proposed in this paper is
mainly composed of data preprocessing, model research,
and event response. The system structure diagram is
shown in Fig. 3.

Among them, the data preprocessing stage is mainly
divided into two parts: parameter feature detection and
data normalization processing:

1) Parameter feature detection: According to the
detection points summarized in the Web attack
feature, the data is characterized, and the parameter
matching value of the data packet is obtained by
using the string matching algorithm which is taken
as the tag value of the attribute.

2) Data normalization processing: Data normalization
processing is mainly performed for the
abovementioned detected feature values, so as to
facilitate statistical analysis of subsequent data and
satisfy the data requirements of the SVM algorithm.
Liu et al. EURASIP Journal on Wireless Communications and Networking

Table 3 HMM calculation score value

(2020) 2020:33 Page 6 of 9

Table 5 Detection rate of different values of parameters

 

 

 

 

 

Parameter Scores C (0) 0.8 1 2 4 10 100
admin 19 1 0.800 0.786 0.728 0.700 0.600 0.557
admin123 20 2 0.786 0.771 0.714 0.686 0.614 0.557
root 18 3 0.771 0.757 0.700 0.700 0.614 0.557
zw-123 15 4 0.757 0.757 0.700 0.700 0.614 0.557
Test’%3Cscript%3Ealert (1)%3C/script%3E — 6389

 

The model analysis part is mainly divided into two
parts: model establishment and model detection:

1) Model establishment: Firstly, the data set is
classified according to the URL to obtain the data
sets of each URL. Then the data is preprocessed to
obtain normalized data.

Using the HMM algorithm to identify the
parameter type and the python module LIBSVM to
implement the SVM algorithm. The parameter
optimization is achieved by the grid search
algorithm to find an appropriate parameter to
ensure a better classification effect. In the
simulation stage, different kernel functions can be
adopted by modifying the input parameters of the
functions in the LIBSVM module to seek for an
optimal model, which can ensure each model has a
better detection result. The model is established for
each URL identifier, and the classification model
function for each URL identifier is obtained for the
application detection of the model.

2) Model detection: Firstly, the network accesses the
network packet of the HTTP application layer and
then performs protocol parsing to extract the
parameter features. The normalized data is obtained
according to the data preprocessing method, and
the application detection is performed by matching
the model data to detect whether there is an attack.
If there is an abnormal attack, the detection point

Table 4 Classification accuracy of different kernel functions

120
95.5
100 85.3 87.8 85 we
80 75.9 70.5 72.6 .
60.8
60
AO
20
0

urli url2 url3

HB polynomial & RBF sigmod

of the exception is extracted for the response of the
event.

The event response part is composed of two parts:
event database establishment and event warning.

1) Event database establishment: The corresponding
event database is generated according to the
parameter features in the Web attack feature
analysis, and then, the event database is matched
basing on the detected abnormality detection points
to obtain a more likely attack event.

2) Event warning: Using the detection information to
make an early warning prompt and give a possible
attack mode.

4.2 Simulation

4.2.1 Dataset

The dataset is derived from the HTTP dataset Canadian
Society Of Immigration Consultants (CSIC) 2010 devel-
oped by the Information Security Institute of CSIC (Na-
tional Committee for Spanish Studies), which generates
traffic for e-commerce Web applications, including 36,
000 normal requests and more than 25,000 exception re-
quests. HTTP requests are marked as normal or abnor-
mal. The data set includes SQL injection, buffer
overflow, information collection, file disclosure, Carriage
Return/line Feed (CRLF) injection, XSS, server-side in-
clusion, parameter tampering, and other attacks. It is di-
vided into three different subsets. In the training phase,
a subset with normal flow is selected. In the testing
phase, two subsets are selected, one of which is normal
traffic and the other one is malicious traffic.

4.2.2 Data pre-processing
The data set is consist of HTTP protocol request. Firstly,
the access path and access parameters are extracted
from them and then detecting the summarized param-
eter features to obtain the attribute values of the model.
Normalized data is obtained through data preprocess-
ing. The training set data is classified according to the
URL identifier, and the training sets with different URL
identifiers are obtained and the training sets of each
group are established respectively.
Liu et al. EURASIP Journal on Wireless Communications and Networking

Table 6 Classification accuracy of different attributes

120

7.6
100

96.3 92.8 94.5 92.8 9
83.9 84.4
] | | | | | .
0 | . .

urlt url2 url3 url4 url5

oo
oO

op)
oO

aS
oO

N
oO

®Donotcontain Contain

4.3 Experiment
The specific system information is as follows:

1) System: linux (ubuntul6.04)
2) Software environment: hadoop2.7.3, openjdk-8-jdk,
anaconda, libsvm3.22, hmmlearn.

Hadoop Distributed File System (HDFS) is used to
store data sets, anaconda is used to complete data pre-
processing, the hmmlearn library is used to implement
HMM model, the libsvm library is used to implement
SVM algorithm, and then, the model system is
established.

Because of the difference between access requests, it is
necessary to separately establish models for each type of
access request. First, the data set is classified according
to the URL, and the data set of each URL is obtained.
Data preprocessing is then performed to obtain normal-
ized data.

The parameter type tagging process using the HMM
learn library is divided into two steps:

In the first step, the data is classified according to dif-
ferent parameters of different URLs, and then, the pre-
processing is performed to obtain the observation set of
the parameter values to calculate the model parameters.
The Gaussian HMM is used to calculate the model and
the resulting model parameters are saved.

In the second step, the obtained model is used for cal-
culating the probability of each observation sequence,

Table 7 Detection result of the model

(2020) 2020:33 Page 7 of 9

which is used to identify the parameter type of the URL.
The different parameter values of the same URL are pre-
processed and then written into the dataset.

Use the score function to calculate the score value of
each parameter value which is shown in Table 3. A lar-
ger value indicates a higher probability that the value of
the parameter will appear and vice versa. Taking the
username parameter of a certain URL as example:

This section uses classification accuracy (ac) to evalu-
ate the classification effect of the model. Through data
preprocessing, the data set of the SVM algorithm is ob-
tained. The calculation of the SVM algorithm is imple-
mented using the LIBSVM module C-Support Vector
Classification (C-SVC) class problem. The time com-
plexity of the SVM algorithm is O(n’) which is closely
related to the number of samples (mm) and the dimension
of the feature (1). Meanwhile, the optimization problem
directly affects the computation time of the algorithm.
The Sequential Minimal Optimization (SMO) algorithm
optimization process selects two samples per operation,
which can greatly shorten the calculation time.

First, select the kernel function. After experiments, the
radial basis function kernel (RBF) kernel, the polynomial
kernel, and the sigmod kernel are selected as the kernel
functions to build the model. The classification accuracy
of the model is shown in Table 4, taking three random
selected URL as example:

The experimental data shows that the classification ac-
curacy of RBF core is better than the polynomial kernel,
and the polynomial kernel is better than the Sigmod
core. Therefore, this paper adopts the RBF kernel func-
tion to establish the model which can guarantee the ac-
curacy of the classification.

The SVM algorithm with the RBF kernel is imple-
mented after which the grid search parameter
optimization is realized. The detection rate of the SVM
algorithm with different C, o is shown in Table 5:

Experiments show that the value of the parameter
greatly affects the detection effect. It is especially import-
ant to select an appropriate parameter. This paper is de-
voted to finding the appropriate parameters to ensure
that the established model has a good detection rate in a
short time. Therefore, the grid search algorithm is

 

Inde Group Number of access Number of attacks Normal number Detection rate False alarm rate
1 2128 864 1264 0.982 0.014

2 2136 868 1268 0.952 0.036

3 2120 850 1270 0.985 0.020

4 2172 904 1268 0.938 0.034

5 2116 860 1256 0.988 0.012

average 2134 869 1265 0.958 0.0232

 
Liu et al. EURASIP Journal on Wireless Communications and Networking

Table 8 Detection result of the other existing model

(2020) 2020:33 Page 8 of 9

 

Paper 3 [20] Paper 4 [21] Paper 5 [22]

 

Papers Paper 1 [18] Paper 2 [19]
Detection rate 91.81 91.53
False alarm rate 0.55 0.58

96.63 94.6 89.71
9.1 3.0 0.1

 

selected. In the LIBSVM module, a grid.py is provided to
implement the grid search. The parameters are continu-
ously changed according to the fixed step size, and then,
the detection rate is calculated. The set of parameters
with the highest detection rate is taken as the optimal
parameter. Although this may not be the best one, it
guarantees that the models established for each type of
URL has an appropriate parameter to ensure the detec-
tion capabilities.

In this paper, the HMM algorithm is used to identify
the parameter type with different parameters, through
experiments, building the model with and without par-
ameter type identification respectively, and selecting the
most representative five URLs. The classification accur-
acy of the model is shown in Table 6.

Experiments show that the HMM algorithm can dis-
tinguish abnormal parameters from normal parameters,
which can improve the detection effect of the model..

Finally, five sets of data were randomly selected and
tested with the established model and the detection re-
sult is shown in Table 7.

Experiments show that the model can achieve 95.8%
detection rate and 2.32% false alarm rate, which is a very
good effect.

In addition, in the existing research of hybrid intrusion
detection model, the detection effect obtained by using
KDD CUP99 training set is as shown in Table 8.

It is shown that in the existing research of hybrid in-
trusion detection model, the detection rate has mostly
reached 90%, and the false alarm rate is less than 10%,
so that the intrusion detection model studied in this
paper has a relatively good detection effect.

5 Conclusion

This paper summarizes the characteristics of common
Web attacks, combines with the analysis of HTTP proto-
col, and selects relevant data features, which solves the
limitations of large network data traffic, high dimension,
and difficulty in data feature extraction. Because there
are large differences in the parameter characteristics of
different access requests, separate models are established
for each type of access requests. Data set are sorted by
URL and then preprocess the data to obtain normalized
data. Then, the parameter type is identified by the
HMM algorithm. SVM algorithm is used for the learning
classification and finally using the grid search method
for parameter optimization. The simulation and experi-
mental results show that the SVM algorithm with RBF

kernel function has better detection effect. At the same
time, the using of grid search optimization can acceler-
ate the parameter optimization process and ensure each
model has a better detection capability in a short time,
which is especially important in the dynamic and com-
plex network environment.

Abbreviations

WAF: Web application firewall; HTTP: Hypertext Transfer Protocol;

GTIC: Global Threat Intelligence Center; SQL: Structure Query Language;
HMM: Hidden Markov Model; URL: Uniform Resource Locator; XSS: Cross-site
script; CV: Cross-validation; CSIC: Canadian Society Of Immigration
Consultants; CRLF: Carriage Return Line Feed; C-SVC: C-Support Vector
Classification; RBF: Radial Basis Function kernel; SMO: Sequential Minimal
Optimization

Authors’ contributions

JY contributed to the conceptualization, software, manuscript reviewing,
editing, and funding acquisitions. CL contributed in the software
development, investigation, methodology, simulations, result analysis, and
draft manuscript writing. All authors read and approved the final manuscript

Funding

The authors thank the project of the National Natural Science Foundation of
China No.61672179, No.61370083, No.61402126, and No. 61901134; the
Natural Science Foundation of Heilongjiang Province (Grant No. F2015030,
201336); the Fundamental Research Funds in Heilongjiang Provincial
Department of Education No. 135109247; and the Science Foundation for
Young Scientists of Qigihar University No. 2014k-M0O9. The authors also thank
the Technical Bureau of Qigihar GYGG-201516 and GYGG-201622.

Availability of data and materials
The datasets used and/or analyzed during the current study are available
from the corresponding author on a reasonable request

Competing interests
The authors declare that they have no competing interest.

Author details
"Harbin Engineering University, Harbin, China. *Qigihar University, Qigihar,
China.

Received: 15 July 2019 Accepted: 30 October 2019
Published online: 03 February 2020

References

1. NNT Security. 2017 Global Threat Intelligence Center (GTIC) Quarterly Threat
Intelligence report Q2. http://www.nttcomsecurity.com/uploads/
documentdatabase/NTT%20Security%20Q2%20201 7_FINAL.pdf

2. S. Devaraju, Performance comparison for intrusion detection system using
neural network with KDD Dataset [J]. Ictact J. Soft Comput. 4(8), 743-752
(2014)

3. Y. Zhao, Network intrusion detection system model based on data mining
[Cl// leee/acis International Conference on Software Engineering, Artificial
Intelligence, NETWORKING and Parallel/distributed Computing. IEEE 1, 155-
160 (2016)

4. Mukkamala S, Janoski G, Sung A. Intrusion detection using neural networks
and support vector machines[C]// International Joint Conference on Neural
Networks. IEEE,(2002), pp.1702-1707

5. YangL,LiJ,Fehringer G, et al. Intrusion detection system by fuzzy
interpolation [C]// IEEE International Conference on Fuzzy Systems. IEEE,
2017.
Liu et al. EURASIP Journal on Wireless Communications and Networking (2020) 2020:33

22.

Akhil J, Sultana A. Intelligent network intrusion detection system using data
mining techniques [C]// ICATCCT16. IEEE, 2016.

D.P. Muni, N.R. Pal, J. Das, Genetic programming for simultaneous feature
selection and classifier design J]. IEEE Trans. Syst. Man. Cybern. B. Cybern.
36(1), 106-117 (2006)

J. Kennedy, R.C. Eberhart, Particle swarm optimization [C]// Proceedings of
IEEE International Conference On Neural Networks (\EEE, Perth, 1995), pp.
1942-1948

C-H. Chen, H.-Y. Kung, Feng-Jang Hwang. Deep learning techniques for
agronomy applications [J]. Agronomy 03(9), 1 (2019)

S.X. Tang, WJ. Cai, Intrusion detection based on unsupervised clustering
and hybrid genetic algorithm [J]. J. Comput Appl. 28(2), 409-411 (2008)
X. Li, Network intrusion detection using genetic algorithms for synchronized
selection of features and support vector machine parameters [J]. Comput.
Appl. Softw. 3, 301-303 (2014)

T. Zhang, J. Wang, Network intrusion detection model based on CQPSO-
LSSVM [J]. Comput. Eng. Appl. 51(2), 113-116 (2015)

L.|. Zhengang, Q. Gan, University T C, Network intrusion detection model
based on MACO-SVMUJ].JJournal of Chongqing University of Posts and
Telecommunications. 26(6), 785-789 (2014)

P.R.K. Varma, V.V. Kumari, S.S. Kumar, Feature selection using relative fuzzy
entropy and ant colony optimization applied to real-time intrusion
detection system [J]. Procedia Comput. Sci. 85, 503-510 (2016)

L. Denoyer, H. Zaragoza, P. Gallinari, HVM-based passage models for
document classification and ranking [J]. Ecir (2016), pp. 126-135

Y, Zhang, B. Li, H. Lu, et al, Sample-specific SVM learning for person re-
identification [C]// IEEE Conference on Computer Vision and Pattern
Recognition. \EEE (2016), pp. 1278-1287

J. Changming, T. Zhou, T. Xiang, et al., Application of support vector
machine based on grid search and cross validation in implicit stochastic
dispatch of cascaded hydropower stations [J]. Electric Power Automation
Equip. 34(3), 125-131 (2014)

B. Pfahringer, Winning the KDD99 classification cup: bagged boosting. ACM
SIGKDD Explorations Newsletter 1(2), 65-66 (2000)

|. Levin, KDD-99 classifier learning contest: LLSoft’s results overview. ACM
SIGKDD Explorations Newsletter 1(2), 67-75 (2000)

C. Xiang, S.M. Lim, in IEEE Workshop on Machine Learning for Signal
Processing. IEEE. Design of multiple-level hybrid classifier for intrusion
detection system (2005), pp. 117-122

L. Kuang, M. Zulkemine, An anomaly intrusion detection method using the
CSI-KNN algorithm. In; Proceedings of the 2008 ACM symposium on Applied
computing. ACM (2008), pp. 921-926

Z. Ma, Application of hybrid soft computing technology in intrusion detection
[Doctoral Dissertation] (Chongqing University, Chongqing, 2010)

 

 

 

 

Publisher’s Note
Springer Nature remains neutral with regard to jurisdictional claims in
published maps and institutional affiliations.

Page 9 of 9

 

> Convenient online submission

> Rigorous peer review

> Open access: articles freely available online
> High visibility within the field

> Retaining the copyright to your article

Submit your manuscript to a SpringerOpen®
journal and benefit from:

 

Submit your next manuscript at > springeropen.com

 

 

 
