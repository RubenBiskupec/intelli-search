Akram et al. Hum. Cent. Comput. Inf. Sci. (2020) 10:22

https://doi.org/10.1186/s13673-020-00227-9 © Human-centric Computing

and Information Sciences

RESEARCH Oy oT-Ta waa -55 4

. ®
An anonymous authenticated ces

key-agreement scheme for multi-server
infrastructure

Muhammad Arslan Akram!, Zahid Ghaffar', Khalid Mahmood', Saru Kumari, Kadambri Agarwal?
and Chien-Ming Chen*

 

*Correspondence:
chienmingchen@ieee.org Abstract

“College of Computer Due to single-time registration, the multi-server authentication provides benefit for

Science and Engineering, . . .
Shandong University getting services from different servers through trusted agent. Generally, users feel

of Science and Technology, hesitation for registering themselves individually with all service providers due to the

Re ee on problem of memorizing the multiple passwords. The multi-server authentication allows
UI TI U | | . . . . . .

is available at the end of the a quick access to services by real-time customer validation on public channel. Thereaf-

article ter, hundreds of multi-server authentication protocols have been introduced. However,
the more efficient and robust authentication schemes are being explored by the

research academia. We introduce an anonymous scheme that resists the major security
threats like impersonation attack, insider attack and password modification attacks in
viable computing cost. We use random oracle model for formal security analysis of the
proposed scheme. The performance analysis shows that the proposed scheme incurs
less computation, energy, Communication and storage cost as compared to related
protocols. This analysis and comparison show that our proposed scheme is quite effec-
tive for the purpose of anonymous authentication and key agreement.

Keywords: Multi-server, User anonymity, Authentication, Impersonation, Key-
agreement protocol, Internet of Things, Cloud computing

 

Introduction

Multi-server authentication (MSA) allows the abrupt access to various online services as
compared to single registration, in peer-to-peer environment. MSA architecture [1, 2]
is suitable for both sides, i.e. customers and service providers. Because, due to one-time
registration with registration center (RC), the customer does not need for remembering
multiple passwords. Consequently, the MSA architecture facilitates the service provid-
ers to maintain verifier database for each authentic user, in order to avoid multiple reg-
istration. To get perk from these services from various servers, the customers rely on
a single time registration with RC. The MSA environment involves various servers (S;),
customers (U/,) and a registration center (RC). The generic architecture of remote-user
authentication is shown in Fig. 1. The registration of each user and server with RC take

place on secure channel. Therefore, trust flows from RC to respective users and servers.

. © The Author(s) 2020. This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing,
GQ) Springer O pen adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and
— the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material
in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material
is not included in the article’s Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the
permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit http://creativeco

mmons.org/licenses/by/4.0/.
Akram et al. Hum. Cent. Comput. Inf. Sci. (2020) 10:22 Page 2 of 18

 

    
 

-

__ 5 <Register.
ister
rs -

Registration Center _.--~ Interntet ‘.

 

‘
Server —

 

 

Fig. 1 Generic multi-server authentication environment
\ )

Thereafter, the customers are able to get advantages of the services provided by service
providers.

Already, plenty of schemes have been introduced so far to achieve better efficiency and
security [3-9]. However, it is realized on the basis of frequent security attacks that more
stronger protocols need to be developed [10-14]. Initially, a key agreement protocol for
MSA framework is presented early in 2000 by Lee and Chang [15]. Later, the protocol
is found susceptible to impersonation and anonymity violation attacks [16]. After that,
MSA scheme engaged by using RSA (Rivest — Shamir — Adleman)

Generic multi-server authentication environment

crypto-primitives and Lagrange interpolating polynomials, for a remote subscriber is
presented by Tsaur [17]. The protocol [17] is compromised by password-guessing attack.
Then, MSA protocol for a system of artificial neural network based on password is pre-
sented by Li et al. [18], which needs more time and higher cost. After that, ElGamal
digital signature-dependent MSA protocol is presented by Lin et al. [1]. However, it is
realized for smart card dependent applications that the scheme is too expensive in terms
of memory requirement. Thereafter, MSA protocol based on symmetric crypto-system
is presented by Juang [2], with an inherent scalability issue due to maintaining verifier-
repository for each user at server end.

MSA protocol is then introduced by Chang and Lee [19], which is found to be vulnera-
ble for privileged-insider and server impersonation attacks [20, 21]. Afterwards, another
remote user verified key agreement protocol based on dynamic identity is presented by
Liao and Wang [20] for MSA architecture. Hsiang and Shih [21] found that the proto-
col [20] is susceptible to spoofing and privileged insider attacks, and also introduced an
enhanced protocol. Soon, Lee et al. [22] realized that the protocol [21] has no ability
to attain agreement for mutual authentication and also introduced an modified scheme.
However, Chen and Lee [23] observed that the protocol [24] is inadequate for smart card
security and incompatible with two-factor authentication. Likewise, the protocol [24]
also fails to prevent masquerading attack. Moreover, password change phase becomes
more complex due to involvement of RC. Then, Irshad et al. [25] proves that the protocol
[23] is insecure against smart card stolen attack that helps to reveal the session key and
password. The protocol [23] is also vulnerable to trace and spoofing attacks. Later, due to

the inefficiency and insecurity of the above mentioned schemes, many researchers have
Akram et al. Hum. Cent. Comput. Inf. Sci. (2020) 10:22 Page 3 of 18

made improvements to the authentication method [26—28]. Additionally, some protocols
have begun to use biometrics to ensure security [29]. The above discussion shows that
designing the protocol for multi-server infrastructures to meet security requirements is
a serious task. All current solutions are neither immune to all known attacks, nor they
can guarantee the consumption of their own computations. Section III demonstrates our
proposed scheme. Security and performance analysis are illustrated in Section IV and V,
respectively. Presented work is concluded in last Section VI.

Our contribution
An anonymous three factor authentication protocol is introduced in this paper and the
authentication of users with the help of biometric impression is enhanced. We encom-

pass our contributions as follows.

1. First, we introduce an ECC based three-factor user authenticated key-agreement
protocol.

2. Second, if smart card can be forged by an adversary, then the environment of user
cannot be secure. In our introduced protocol, the verification of biometric impres-
sion of users can be done by the client as well as by the server; in some specific appli-
cations it can provide security protection for specific requirements. RC and server
have separate responsibilities, as RC is involved in authentication phase. RC retains
the privacy of registration and server validates the client for further service provid-
ing; it can make the protocol more scalable for multi-server the architecture.

3. Finally, our protocol offers the mutual authentication for each pair of three partici-
pants (server, user and RC) for providing strong protection by identifying as possible

replay messages.

Preliminaries
The hash functions, elliptic curve cryptography, adversarial model which is used in this
paper are stated in this section. Whereas, Table 1 is presenting the common notations,

used in rest of the article.

Hash functions
By taking an input string O = H (String) of random size, a fixed size output is generated by
hash. Generated output is called hash code. A little change in the value of string can cause

a huge difference. Whereas, a secure one way hash function has following specifications:

¢ Ifthe string is described, it is easy to find O = H(String).

¢ Itis impossible to find out the string, ifO = H (String) is illustrated.

¢ It is mundane task to distinguish input of String; and String, so _ that
H (String) = H (Stringz). This feature is called collision resistance.

Definition 1 (Characteristics of collision Resistance) Secure hash function H(.) is

predetermined for collision resistance. The possibility that an attacker A can find a
Akram et al. Hum. Cent. Comput. Inf. Sci. (2020) 10:22

Table 1 Common used notations

Page 4 of 18

 

Common notations

blueElucidations

 

U, Urh user Of the system

RC Centralized registration center of the infrastructure
IDy Specific user's identity

PWy Specific user’s password

By Biometric identity of specific user

PIDy User's pseudo identity

SCy Smart card issued to each specific user
Sj Jin service provider of the infrastructure
ID Identity of service provider

x Secret key of RC

pkrc Public key of RC

5 Secret key of Sj

pkg; Public key of Sj

En(e,f) An elliptic curve

P Base point of the elliptic curve £) (e, f)
H(.) Function specified for Bio-hash

A.) One-way digest function of hashing

| Concatenation operator

® XOR operator

 

pair (String, € String.) as H(String,) = H(String2) is separated as Advs‘)

HASH (t) =

Prob{(String,, Stringz) <=, A: (String, # String2), H (String,) = H (String2)\, where

attacker is allowed to select a pair (String), Stringz) randomly. Attacker’s perk is calcu-
lated against the randomly selections taken up with-in polynomial time (f). The collision

resistance conclude that Advsi{AsH (t) <e, whereas €> 0, is an enough tiny value.

Elliptic-curve cryptography(ECC)

The Elliptic-curve equation is defined in the form E,(e,f): c? =d? +ed+f overa
prime finite field (d,c) ¢ Wp x Wp,e,f and 4e® + 27f* £0 (mod P). Where P is a
selected huge prime number, the size of P is > 160 bits. Scalar product is gained by
repeated addition e.g. uP = P+P+P+...+ P(ntimes), over a determined t which a
point on Ep(e,f) and the multiplier 1. The variables (e, f, t, P, 1) should be a part of
limited field Fp. E is supposed to be the abelian group. Whereas O, is stated as the
ID’s infinity point.

Definition 2 (Logarithmic issues in ECDLP) ECDLP: is given two specified points over
R, V € Ep(e,f), calculate 1 a scalar so that R = nV. The chances that attacker A can compute
n in polynomial time(7) are described as AdvskPIP (T) = prob[(X(R, V) =x: xx © Wp)].
ECDLP assumption concludes that AdvsECPLP (T) <e.
Akram et al. Hum. Cent. Comput. Inf. Sci. (2020) 10:22 Page 5 of 18

Adversarial model
The familiar adversarial model is deliberated in this paper, as specified in [2, 30].

Where the following considerations are followed as per the expertise of the adversary
Advs:

1. Advs have full control over the public communication channel. Advs is adept to elim-
inate, amend, rerun, interrupt or can send a new replicated message.

2. The information stored in the smart card can be excerpted by Advs, by doing power
analysis.

3. Advs can be a deceitful or intruder user or service provider of the system.

4. The identities of registered servers and users are not private but familiar to insiders.

5. The attack on server cannot be launched by Advs because the server is assumed to be

secured.

Proposed scheme

We propose an anonymous multi-server authentication protocol in this section.
Although, proposed protocol brings more computation at server side, but server is usu-
ally assumed to have sufficient resources. Therefore, server can easily manages these
extra computations in order to lower the computation cost on user side. The scheme is
based on multi-server architecture which involves user(U,), server(S;) and registration
center(RC). RC provides facility for user registration and further helps to give services
from server. RC selects its master secret key x to register all users. Like former schemes,
the proposed scheme has also three stages: the authentication, registration and pass-
word change stage. The proposed protocol is shown in Fig. 2 and described in the below
subsections.

Server registration phase
To become legitimate server S;, the server needs to register with RC by following these
steps.

SR Step1: S; selects his identity JD; and sends to RC through secure channel.
SR Step2: After receiving ID;, RC calculates s = h(IDj|\x), ks, = sP and pkryc = xP
where x is secret key maintained by RC.

SR Step3: After that, RC sends s, pks;, Pkrc to server S; and aborts the registration.

User registration phase

U,, performs the following operations with RC to become the legal user of the network.

UR Stepl: User selects his identity JD,, password PW, biometric impression B,,
and generates an arbitrary nonce a. Then user determines M = H(UD,||B,),
Akram et al. Hum. Cent. Comput. Inf. Sci. (2020) 10:22

 

Server (S;) Registration Centre (RC)

 

Each server chooses ID;
{1D;}

Computes s = h(ID,||x)
pks, = s8P
pkro = xP

{s.pks,.pkro}

 

 

User (Ux) Registration Centre (RC)

 

Chooses ID,,, PW,

Engenders a random nonce a

Inscribe personal biometric impression
By

Determines M = H(ID,||Bu)

TW = h(a A(B,||PW.))

{ID.,M,TW}

 

 

Xu = h({Du||pkrc)

Y, = X, @h(M||TW)

F, = h(h(ID,||TW))

Embeds {h(), Yu, Fu} in SC,
{Smart Card SC,,}

 

 

U,, takes smart card and embeds a into
it
Now smart card has {h(), a, Yu, Fu}

 

User (Uy) Server (S;)

 

 

Authentication Phase

Input its smart-card in specific card-

reader

Enter 1D, and PW,, and biometric im-

pression B,,

Then SC, computes

TW =h(ae A(B,||PW..))

Determine F,, = h(h(ID,,||TW))

M = HUD, ||B.)

Generates random number C,, and com-

putes

Op = Cupks, = CusP

PID, =CUP @ID,

X,, = Yu @h(M||TW)

DID, = h(IDy|\|Xu||CuP)
M,={PID,,,DIDy,Op}

 

s'Op =C,,P

ID, =C,P ® PID,

Xu = h(IDu|lpkrc)

DID,, = h(ID,\|Xu||CuP)

Generates random number D;

Ty, = h(IDy\|Xu)

V,=D,®X,

Quy = hUDullTul|CuP||D; | XullD3)
M2={Quj,V5}

 

D; = V; BXy

, , ?
AIDy||h(LDu||Xy)||CuP||Dj||Xu\|[D3) =
Quj

SKyj = h(LDul|CuP||D;||X,||LD;)
Zuy = h(SKuj||LDu||D;||Xy||1D;)
M3={Zu;}

 

>

Checks SKuj =

A(LDy||CuP||Dj||Xul|ZD;)
2
h(SKuj||LDu||CuP||Xul|LD;) = Luj

 

————————————. | Common Exchanged Key = SKy; = h(LDy||CuP||D;||Xul|[D;)

Fig. 2 Proposed Scheme
\

SEU

 

 

Page 6 of 18
Akram et al. Hum. Cent. Comput. Inf. Sci. (2020) 10:22

TW = h(a @ H(B,||PW,,)) and sends ID,,, M, TW to RC for completing the registra-
tion.

UR Step2: After that RC determines X, = hUDy||pkrc), Yu = Xu 8 h(M||TW) and
F, = h(hUD,|\|TW)), then RC stores h(), Y,,F, in smart card and sends (SC,,)
towards U,,.

UR Step3: U,, further adds a number a into SC,,. Now smart card have {h(Q), Yy, Fy, a}.

Login and authentication phase
In this phase, authenticated access is granted to user LU, for accessing service providers
S;. U, and S; authenticate themselves in following steps.

LAP Step1l: U, inputs ID,, password PW,, and scan biometric impression in scan-
ner. Then smart card determines TW = h(a @ H(B,||PW,,)) and checks whether
F,=h(h(ID,\|TW)). If yes, then determines M = HUD,,||B,), U, creates a ran-
dom number C, and computes Oy, = Cupks, =C,sP, PID, = C,P 8 ID,
X,=Y,@h(M||TW) and DID, =AUD,||X,||C,P). Then Uy, — sends
My, = PIDy, DIDy, Op to §;.

LAP Step2: After receiving M, = PID,, DIDy, Op, S; using his secret key s computes
s-'O, = C,P, IDy = CyP ® PID, and Xy, = hUDy\|pkrc). After that S; checks
DID, =hUD,\|X,||C,,P). If it holds true, then RC creates arbitrary nonce Dj and
determines T,, = hUDy||Xu), Vj = Dj ® Xu and Qy = hUDyl|Tu\|CyP||Dj||_Xu||LD)).
Subsequently, S; sends a message M2 = Qyj, Vj to Uy,

LAP Step3: U, determines Dj =V;®X, after receiving My and_ checks
AUD yt UD u IX) CP ID jl X; Dj) = Quy a

LAP Step4: If the AUDy||hUDyul|X,)\|CrP||Di\|X,,|IDj)\=Qu holds true,
U, further determines SKy = AUD y||CuP ||Dj||X,,||ID;) and computes
Zuj = h(SKyj||IDul|Dj\|X,, |ID)). U, sends M3 = Z,; towards S; so that it can check
the challenge based on Dj.

LAP Step5: After getting M3, the server S; determines SK, = hUDy||CyP||D;||Xu||LD)).
After that, it justifies the equation ie. h(SKyj\\IDul|CyP||Xu\D)=Zry. Finally,
on successful justification, server exchanges the session-key SK with user as
hIDy\|CyP||D;\|Xu||D;). The description of this protocol can be endorsed from
Fig. 2.

Password changing phase
U,, may change his password into another new password (PW?) by using these steps.
These steps are as follows:

PC Step1: Initially, user input identity JD%, password(PW;*) and scan biometric impres-
sion factor after inserting smart card (SC) into reader. After that, SC determines
TW =h(a @ h(B,||PW,,)) and justify F,=h(hUD,|\ TW)). If it holds true then user
will follow next step.

Page 7 of 18
Akram et al. Hum. Cent. Comput. Inf. Sci. (2020) 10:22

PC Step2: Subsequently, SC determines TW =h(a @h(B,||PW,,)) and calculates
Xy = hUdD,y\|TW), Yu*x = Xy 8 h(M||TW).

PC Step3: Afterwards, when user will change password (PWi”). The smart card
then determines TW =h(a@h(B,||PW.)), YP =X, O@hM||TW'), and
Fh = h(hUdDy||TW)).

PC Step4: Then the values X,, Y,,, and F, are changed by X/?, Y/?, F” in smart card.

Revocation/re-registration phase
In this section, we show that if L/,’s smart card has been stolen or his account has been
revoked then he can request for reregistration. For this purpose he must follow subse-

quent steps:

RP Step1: (U,,) engenders a random number a*, a new password PW, and bio-
metric B* of his/her own choice. Then calculates M* = H(UD,||Bi) and
TW* = h(a* © H(B*||PW;)) and submits request message {JD,, M*, TW*} to the
registration centre (RC) through a secure path.

RP Step2: On receiving request message {JD,, M*, TW*} from (U,,), RC will first verify
whether (U/,) is already a registered user or not from the verifier table. If a match is
not found in the database, the RC will reject the request.

RP Step3: 7eC then embeds the security parameters {h(), YF,F 7} in a new SCF into the
smart card and sends the new smart card to the user (U,,) through secure path.

RP Step4: U;, takes new smart card SC; and embeds a” into it. The phase is shown in
Fig. 3.

 

User (U,) Registration Centre (RC)
Chooses ID,, PW;

Engenders a random nonce a*

 

Inscribe new personal biometric impres-
sion By,

Determines M* = H(ID,||B*)

TW* = h(a* 6 H(B*||PW))

{IDy,M* ,TW*}

 

Xy = h(ID,||\pkrc)

Y* =X, @A(M*||TW*)

F* = A(ID,||TW*)

Embeds {h(), Y;7, Fe} in anew SC*
{Smart Card SC*}

 

U,, takes new smart card SC% and em-
beds a* into it
Now smart card has {h(),a*, Y,7, Fz}

 

 

Fig. 3 Revocation phase
\

 

Page 8 of 18
Akram et al. Hum. Cent. Comput. Inf. Sci. (2020) 10:22 Page 9 of 18

Security analysis
In this section, informal and formal security analysis are presented. The security analysis
highlights that the proposed scheme is safe and secure against various possible attacks.

Informal security
In this section, a comprehensive informal security analysis of contributed protocol is
presented.

Correct notion of user anonymity

In several authentication schemes for multi-server environment, the server is usually
unable to identify the identity of a user requesting for login. In our view, such notion
of perfect anonymity is erroneous and not desirable in any environment, because if the
server is unable to know a user’s identity, he will be unable to provide the specific ser-
vices to the user. In fact in this, any user can continue to get the services provided by the
service provider even if he is not registered to the network or his lease has been expired.
However, in proposed protocol, instead of user’s identity [D,,, a dynamic-pseudo identity
PID, is sent during each authentication request message, to S;. Furthermore, user’s iden-
tity [D,, can only be extracted using server’s private key s. In addition, by analyzing two
different session, an adversary will remain unable to guess whether the same user has
initiated session. Hence, in this way our introduced protocol provides user’s anonymity

and untraceability.

Replay attack

In this flaw, the retrieved messages are restored without endure transforma-
tion to deceive any legitimate user [31-34]. Adversary can get the parameters
PIDy, DIDy; Op, Quj, Tu, Vj and try to endure these parameters in request to forge the
legal member. However, if an adversary retrieves contents, he cannot initiate an attack
because C;,, and D; is created by legitimate member for every session. Similarly, if an
adversary endeavors to replay M,j= PID,, DID,y, Op toward server, server verifies the
validity of user in M3, in reply to the challenge based on Dj. Synchronously, the legiti-
mate user validates S; in Mp to response to the Mj, based challenge C,,. Hence the con-
tributed protocol thwart replay attack.

Stolen smart card attack with offline dictionary

In stolen smart card attack with offline dictionary, the attacker tries different sequences
of dictionary ingredients using stolen SC credentials [35-37]. An attacker may attempts
to exploit with its feasible parameters of SC i.e h(), Y,,, Fy. For estimating the PW,, from
Y,, and F,, parameters, adversary needs to perceive JD, a and B, to estimate PW,, from
TW where TW = h(a @ h(B,||PW,,)). Furthermore, this attack cannot initiate in poly-

nomial time using smart card.
Akram et al. Hum. Cent. Comput. Inf. Sci. (2020) 10:22 Page 10 of 18

Known-key security

Known-key security provides the confidentiality of private keys even with exposed
session key for a particular session [38, 39]. Given that the specific session-key
SKyj = hUDy||CuP||D;\|Xu\|JD;) does not hold Us password PW,s as a parameter.
Owing it to, the adversary may not discover the parameters from derived session key.
Hence, the contributed protocol offers known-key security.

Mutual authentication

Mutual authentication is provided by the enhanced scheme because the legitimate par-
ticipants verify each other and thus it ensure mutual authentication strongly. This prop-
erty makes our protocol secure and provides the early detection of possible attacks like

replay attacks.

Masquerading attack

According to this attack, an attacker can masquerade one member of a specific session,
if it reveals another member’s key of the current session. The contributed protocol is
immune to key-compromise impersonation threat in contrary to scheme, [23] as the
contents of stolen card will not help the attacker to get other constructive parameters,
such as X,. Hence, the attacker cannot obtain newly generated Q,,; factor and ultimately

impersonation attack cannot be initiated.

Stolen verifier attack

The adversary misuses valued data which is stored at server’s side and user’s privates
like passwords or other parameter, masquerade as legal users. The contributed proto-
col offers mutual authentication without maintaining repository on S; and RC’s side.
This shows that our scheme is withstand stolen verifier attack.

Password guessing attack

The guessing attack is applicable, if an adversary accesses the parameters
PIDy, DIDy; Op, Quj, Tu, Vj on little analysis of any open channel. Nonetheless, an adver-
sary cannot extract the password, after all it is not use as a factor for the computation of

any contents, hence it minimizes the chances of estimating the consistent factors.

Modification attacks

The adversary changes the retrieving parameters and submit to promise party. In case,
the scheme is designed to resist against modification threat. If the adversary attempts to
change the public contents PID,, DIDy, Oy, Qu, Tu, Vj, adversary will not able reassem-
ble following parameters PID,, DID,, Oy by introducing recent session arbitrary vari-
ables, since to assemble these parameters acquires the information of secret key and X,,
which knows to legal member. Consequently, the legal member can expose any venom-
ous member easily. So, the enhanced scheme can easily discourage this attack.
Akram et al. Hum. Cent. Comput. Inf. Sci. (2020) 10:22 Page 11 of 18

Formal security analysis

We have described model of security for presented protocol in this section. Further-
more, using given model of security the presented protocol is proved safe against known
attacks. At the end, the proposed protocol is described to fulfill all the necessary require-

ments that relates to the security of the presented protocol.

Theorem THM1 Consider D; as a uniformly distributed dictionary consists of various
possible passwords. |D| denotes the size of D;. Consider A as an adversary against seman-
tic security within a time bound t. Suppose a ECCDH problem stands, then we have

D; is considered as evenly distributed dictionary which consists of numerous passwords
that can be possible. The size of D; is denoted by |D]. A is considered as an adversary
against syntactic security in a time bound t. If a ECCDH problem occurs, then we have

(dhsh + exe)” 4 Dish

 

 

 

Ar,p(A) <
2p Pp
ahs OM (A) (1)
4 Dhsh 4 Qa
D

where the possibility of solving the ECCDH problem by A, is denoted by A=(©". The

number of Execute, Random-oracle and Send query are {exe, ysh» Isnd }, respectively.

Proof In order to give the proof of Theorem THM1, six composite games are consid-
ered from game G) to Gg. The game will be started where the real attack is simulated and
a game will be ended where adversary A has no advantage. The possibility of successfully
guessing the random bit b in test-query by A is denoted by Suc; for each game G;, where
1<i<6.

GAMEG;: Inthis random oracle model, the real attacks are simulated with the help
of this game. In game G}, every instance like U,, S; and RC will be mod-
eled as authentic executions. As per the definition of Suc1, we get follow-
ing equation.

Atty” (A) = 2Pr(Sucl) — 1. (2)

GAMEG,: Multiple oracles like hash oracle h Execute, Corrupt, Reveal, Send and
Test are simulated with G2. Hash oracle is simulated by game G2 by main-
taining a hash list jj, hjjss comprises on queries entries as (input, out-
put). When a hash query is answered by hash oracle, then it returns the
corresponding output if there is any existing query (input, output) in /j5,,
else it will return value from 0, 1. Moreover, corrupt, reveal, send and
Test queries will be run as real attacks. Thread model is used to specify
the actual actions of all these queries. This simulation indicates that game
G2 is perfectly secured from the real attacks. Thus, we have

Pr(Suc2) = Pr(Suc1) (3)
Akram et al. Hum. Cent. Comput. Inf. Sci. (2020) 10:22

GAME G3:

GAME G::

GAME G:;:

GAME Ge:

This game consists on all possible executions of ROM as elaborated in
game Gp» except that it will be discarded when some collision occured in
the simulation of all hash queries, that are inquired by the adversary A.
So, this game helps to avoid from collision to be occurred in ciphertext,
password and output of Send-queries. By the definition of birthday para-

 

dox, the chances of occuring collision in hash oracle is Me . Thats why the

. For this simula-

chances of occuring collision in game G3 is ust?

tions, we achieved following equation

 

|Pr(Suc3) — Pr(Suc2)|<

4 2
(hsh ; exe) 4 exe (4)

2p
This game consists on all possible executions of ROM as elaborated in
game G3 but it will be discarded after the successful guessing of X,, by
adversary A without asking the hash oracle h. This game is similar all pre-
vious games unless the instances IT}, and IT, 5; reject the actual authenti-
cation value. From game Gg, we get following equation

\Pr(Suc4) — Pr(Suc3)|< (5)
p

This game indicates that if adversary guesses the session key directly
without knowing and inquiring about hash oracle / then this game will
be terminated. It enables the session key to be independent with
{PW,,,B,} and random numbers as well as point multiplication C,,, Dj, P.
G4. This game will be aborted after the inquiring common value X,. Thus,
ARCCDH (A)< — |Pr(Sucs) — Pr(Suc4)| — 5 and we have

|Pr(Suc5) — Pr(Suc4)|<qnAte OO" (A) + a (6)

This game consists on all possible executions of ROM as elaborated in
game Gs except the rule if follow in Test query. Gs will be aborted when A
queries about hash oracle that is identical values C,,, D;, P. The chance of

adversary A getting the correct session-key by hash-query is at most Be,
Thus, we have

2
\Pr(Suc6) — Pr(Suc5) |< on (7)

Until adversary A does not enter correct value into the random oracle h, the random

oracle will remain indistinguishable against real attack. That’s why A does not have any

advantage of identifying the legal session key from random oracle attempt. Furthermore,

when corrupt query is performed, not more than 3 queries can be performed simulta-

neously. It means that if smart card corrupt and biometric corrupt (11,3), (15,4) are

performed then password corrupt ((I1;,,2)) cannot be performed this is the reason that

 

success rate of off-line password guessing attack is ad . By combining all the equations

from G) to Ge, we get following equation

Page 12 of 18
Akram et al. Hum. Cent. Comput. Inf. Sci. (2020) 10:22

(Aish + exe)” 4 Tish

Aj,p(A) <
2p Pp
4 Ahsh + qnAECCPH (A)
Mie 4 Sou,
D
Performance analysis

In this section, the robustness of proposed protocol is assessed with respect to other

schemes [20—23, 25] based on multi server architecture. The security traits and the scru-

tiny of defending to numerous attacks for different schemes are described in Table 2,

in which the proposed protocol is signified as a strong corroborated key-agreement in

contrast to former schemes. Table 2 presents the analysis of our schemes with related

schemes [20—23, 25]. As per the analysis, we can conclude that our protocol is more

secure than [20—23, 25]. All these protocols depend upon hash-based symmetric cryp-

tography and similar in nature.

Table 2 Comparison of security parameters

 

 

 

 

 

Scheme: Proposed Liao Hsiang Lee et al.[22] Chen Irshad
and Wang _ and Shih andLee__ etal.
[20] [21] [23] [25]
Immune to smart card stolen attack Yes Yes Yes Yes No Yes
Efficient password modification Yes Yes Yes No No Yes
Ensuring anonymity Yes Yes Yes Yes Yes No
Immune to insider attack Yes No Yes Yes Yes Yes
Immune to trace attack Yes Yes Yes Yes No Yes
Immune to impersonation attack Yes No No No No Yes
Support mutual authentication Yes No No No Yes Yes
Repair ability Yes Yes No No Yes Yes
Supports session key security Yes Yes Yes Yes No Yes
Immune to offline password guess- Yes Yes Yes No Yes Yes
ing attack
Immune to KCI attack Yes Yes No Yes No Yes
Table 3 Comparison of energy and computational, communication and storage costs
Protocols Computational cost Energy(mJ) Communication Storage
cost(bits) cost(bits)
Proposed 8ST, +77, + 17y = 0.0120Ms 0.91 1920 1440
Liao and Wang [20] 9Tp + 9Tp = 0.0117ms 0.98 2944 1024
Hsiang and Shih [21] OT, + 12Tp, = 0.0132ms 1.10 3296 1440
Lee et al. [22] OT, + 107, = 0.0125ms 1.05 3296 1440
Chen and Lee [23] 12Th + 107, = .0146ms 1.24 3252 1440
Irshad et al. [25] 13Th + 13Th + 37H = 0.0169Ms5 1.64 3872 1952

 

Page 13 of 18
Akram et al. Hum. Cent. Comput. Inf. Sci. (2020) 10:22 Page 14 of 18

 

Computation Time (ms)
9 o S are Ld ~ Ly
> a co - ha > a co

o
ha

 

Oo 10 20 30 40 50 60 70 80 90 100

No. of verifiers

—*— Proposed —*—[20]) —*—[21] —®*— [22] —®*—[23] —*—[25]

 

 

Fig. 4 Computation cost comparison
N

 

 

 

\
1.8
1.6
1.4
i2
> 1
=
> o8
©
a 0.6
So. tn O85 ye
0.2
0
PROPOSED jy)
[21]
[22]
[23]
[25]
PROTOCOLS
Fig.5 Analysis of energy of proposed and other protocols
\

 

 

Later, the performance analysis of our authenticated protocol in terms of cost has
been analyzed. The specification and description for the implementation is as follows;
the implementation of the cryptographic functions (Tg, T\\, Ty), Pm) is done by using
py-crypto library inside ubuntu 19.04, with 16.0 GB RAM and 3.60 GHz processor
core i7 with the help of python programming language. The execution of authenti-
cation scheme is done under same assumptions for 10 times by averaging. Some
functions like (7, T@) have not been considered because they acquires negligible
execution time. The execution time for h(.), H(.) and point multiplication operations
is 0.0120 ms, 0.015 ms and 0.02957 ms, respectively. The communication, energy
requirements, storage and computation cost of our scheme with respect to related
protocols is presented in Table 3. The time for execution of considered cryptographic
functions are assumed as follows:
Akram et al. Hum. Cent. Comput. Inf. Sci. (2020) 10:22 Page 15 of 18

 

 

(— >)
4500
2
= 4000
uw
© 3500
5
‘= 3000
2
S 2500
=
£ 2000
o
U
‘= 1500
o
® 1000
E 500
a
0
Proposed [20] [21] [22] [23] [25]
Protocols

 

 

Fig.6 Analysis of communication cost between proposed and related protocols
Ne

 

2500

2000

4 1952

 

= Lake ~ 1440 1440 1440 ——— 1440
—
S _
: Nw
= 1000 1024

500

0
Proposed [20] [21] [22] [23] [25]
Protocols

 

 

Fig. 7 Analysis of storage cost of proposed and other protocols
\

¢ Execution time for one way hash function is E, = 0.0120ms.
¢ Execution time for one way bio-hash function is Ey = 0.015ms.
¢ Execution time for point multiplication Epm = 0.02957ms.

It is observed the computation cost of our proposed scheme is higher than [20—23,
25] schemes but it offers aided security features. Furthermore, the mandatory security
objectives are achieved by our protocol in less cost than Hsiang and Shih’s scheme.
Moreover, the proposed protocol (contrasting with former protocols) is secure to
smart card stolen, password guessing and insider attacks.

We have determined cost comparison in Table 3, which are later elaborated by draw-
ing Figs. 4, 5, 6 and 7. The cost of computation for proposed and relevant schemes is
showcased in Fig. 4. The number of verifiers of our proposed and existing protocols are
shown horizontally and required computation time according to the number of verifiers
Akram et al. Hum. Cent. Comput. Inf. Sci. (2020) 10:22 Page 16 of 18

is shown vertically in the graph. It can be observed that computation cost of our proto-
col is far less than the related schemes..

Energy consumption can be calculated as E; = T;¢Pcpy, where T¢< is the total compu-
tation cost for a single hash function (0.054 m/J), Pcpy is the maximum power (65 W) of
CPU and E, is the energy consumption [40]. Power consumption can be used to give a
rough estimate of energy consumed during computation. Moreover, we have examined
the protocol with respect to energy consumption by considering computation cost of
energy for SHA-1 as 0.54 mJ for single byte [41] shown in Fig. 5. By Considering this, the
consumption of energy for the [20—23, 25] and our scheme amounts to 1.64 mJ, 0.98m/J,
1.10 mJ, 1.05 mJ, 1.24 mJ and 0.91m/J, respectively. The final energy consumption deter-
mined values of proposed and related schemes are given in Table 3. Hence, it can be cal-
culated that the energy consumption of proposed scheme is less than related schemes.

The assumptions made for determining the communication and storage cost are as
follows: 160 bits are reserved for random nonce, timestamps, password and identity,
256 bits are for one way hash function and for public key, 512 bits. The calculations of
storage and communication cost of our and related schemes on the basis of above men-
tioned assumptions are presented in Table 3.

The cost of communication for proposed and relevant schemes is presented in Fig. 6.
The proposed and related schemes are given horizontally, while the required number of
communication bits are shown vertically in the graph. It is observed that the number of
communication bits of proposed scheme is slightly greater than related schemes but our
scheme provides more security traits. The storage cost of proposed and related schemes
is displayed in Fig. 7. The vertically labeled values on the graph are for the required num-
ber of storage bits, while proposed and related schemes are listed horizontally.

The storage bits of our scheme is slightly greater than the related protocol. This is just
because of providing more security features for making secure protocol. After analyz-
ing Tables 2 and 3, we can say that the computation time of our scheme is less than the
related schemes and also provides more security traits with slightly higher communica-

tion and storage costs.

Conclusion

The robustness of multi-server authentication is observed as an important requisite for
the current remote based authentication paradigm. Recently, extensive research has
been conducted for developing robust authentication protocols for multi-server authen-
tication environment. In this paper, we proposed an anonymous multi-server authenti-
cation scheme. The flaws of previous schemes are kept in mind in order to develop the
proposed scheme with enhanced security features. The analysis of performance evalu-
ation and formal security is also described in this paper against various schemes. This
analysis also shows that our scheme provides more security features.

Acknowledgements
Not applicable

Authors’ contributions

MAA, ZG and KM analyzed the requirement of the security for Multi-server Infrastructure, designed the framework,
conducted the experiment and drafted the manuscript. Also, KM gave full support in conducting the experiment and
assisted in draft work and revised the manuscript. SK contributed by reviewing the work done and in revising the con-
tent of the manuscript. In addition, all the work is done in SK’s supervision. KA has helped us in major revision according
to the comments of reviewers. CMC coordinated the whole study. All authors read and approved the final manuscript.
Akram et al. Hum. Cent. Comput. Inf. Sci. (2020) 10:22 Page 17 of 18

Availability of data and materials
It is theoretical work no data is needed.

Competing interests
The authors proclaim, they have no competing interests.

Author details

' Department of Computer Science, COMSATS University Islamabad, Sahiwal Campus, Sahiwal 57000, Pakistan.

* Department of Mathematics, Chaudhary Charan Singh University, Meerut, Uttar Pradesh 250004, India. ? Department
of Computer Science and Engineering, Bhagwati Institute of Technology and Science, Ghaziabad 201302, India. * College
of Computer Science and Engineering, Shandong University of Science and Technology, Qingdao 266590, China.

Received: 3 January 2020 Accepted: 17 April 2020
Published online: 15 May 2020

References

1. Lin FC, Hwang M-S, Li L-H (2003) A new remote user authentication scheme for multi-server architecture. Fut Gen
Comput Syst 19(1):13-22

2. Juang W-S (2004) Efficient password authenticated key agreement using smart cards. Comput Secur 23(2):167-173

3. Chen C-M, Xiang B, Liu Y, Wang K-H (2019) A secure authentication protocol for internet of vehicles. IEEE Access
7:12047-12057

4. Kumari S, Chaudhary PB, Chen C-M, Khan MK (2019) Questioning key compromise attack on ostad sharif et al authen-
tication and session key generation scheme for healthcare applications. IEEE Access 7:39717-39720

5. Kumari S, Li X, Wu F, Das AK, Choo K-KR, Shen J (2017) Design of a provably secure biometrics-based multi-cloud-
server authentication scheme. Fut Gen Comput Syst 68:320-330

6. Kumari S, Khan MK, Atiquzzaman M (2015) User authentication schemes for wireless sensor networks: A review. Ad
Hoc Netw 27:159-194

7. Kumari S, Li X, Wu F, Das AK, Arshad H, Khan MK (2016) A user friendly mutual authentication and key agreement
scheme for wireless sensor networks using chaotic maps. Fut Gen Comput Syst 63:56-75

8. Mahmood K, Naqvi H, Alzahrani BA, Mehmood Z, Irshad A, Chaudhry SA (2018) An ameliorated two-factor anony-
mous key exchange authentication protocol for mobile client-server environment. Int J Commun Syst 31(18):3814

9. Chen C-M, Huang Y, Wang K-H, Kumari S, Wu M-E (2020) A secure authenticated and key exchange scheme for fog
computing. Enterprise Information Systems pp 1-16

10. Chen C-M, Wang K-H, Yeh K-H, Xiang B, Wu T-Y (2019) Attacks and solutions on a three-party password-
based authenticated key exchange protocol for wireless communications. J Ambient Intell Human Comput
10(8):3133-3142

11. Kumari S, Obaidat M, Wei F et al (2020) Gateway-oriented two-server password authenticated key exchange proto-
col for unmanned aerial vehicles in mobile edge computing. IET Communications

12. Mahmood K, Arshad J, Chaudhry SA, Kumari S (2019) An enhanced anonymous identity-based key agreement
protocol for smart grid advanced metering infrastructure. Int J Commun Syst 32(16):4137

13. Chaudhry SA, Shon T, Al-Turjman F, Alsharif MH (2020) Correcting design flaws: An improved and cloud assisted key
agreement scheme in cyber physical systems. Computer Communications

14. Mahmood kK, Rehman A, Chaudhary P, Li X, Wu F (2020) Revised anonymous authentication protocol for adaptive
client-server infrastructure. Int J Commun Syst 2020:4253

15. Lee W-B, Chang C-C (2000) User identification and key distribution maintaining anonymity for distributed computer
networks. Comput Syst Sci Eng 15(4):211-214

16. Wu T-S, Hsu C-L (2004) Efficient user identification scheme with key distribution preserving anonymity for distrib-
uted computer networks. Comput Secur 23(2):120-125

17. TsaurW-J (2001) A flexible user authentication scheme for multi-server internet services. In: International Confer-
ence on Networking, pp. 174-183 . New York, Springer

18. Li L+H, Lin LC, Hwang M-S (2001) A remote password authentication scheme for multiserver architecture using
neural networks, IEEE Trans Neural Netw 12(6):1498-1504

19. Chang C-C, Lee J-S (2004) An efficient and secure multi-server password authentication scheme using smart cards.
In: 2004 International Conference on Cyberworlds, pp. 417-422 . IEEE

20. Liao Y-P Wang S-S (2009) A secure dynamic id based remote user authentication scheme for multi-server environ-
ment. Comput Stand Interf 31(1):24-29

21. Hsiang H-C, Shih W-K (2009) Improvement of the secure dynamic id based remote user authentication scheme for
multi-server environment. Comput Stand Interf 31(6):1118-1123

22. Lee C-C, Lin T-H, Chang R-X (2011) A secure dynamic id based remote user authentication scheme for multi-server
environment using smart cards. Exp Syst Appl 38(1 1):13863-13870

23. Chen CT, Lee C-C (2015) A two-factor authentication scheme with anonymity for multi-server environments. Secur
Commun Netw 8(8):1608-1625

24. Chang C-C, Lee C-Y (2013) A smart card-based authentication scheme using user identify cryptography. J) Netw
Secur 15(2):139-147

25. Irshad A, Naqvi H, Ashraf Chaudhary S, Usman M, Shafig M, Mir O, Kanwal A (2018) Cryptanalysis and improvement
of a multi-server authenticated key agreement by chen and lee’s scheme. Inform Technol Contr 47(3):431-446

26. Kumari S, Das AK, Li X,Wu F, Khan MK, Jiang Q, Islam SH (2018) A provably secure biometrics-based authenticated
key agreement scheme for multi-server environments. Multim Tools Appl 77(2):2359-2389
Akram et al. Hum. Cent. Comput. Inf. Sci. (2020) 10:22 Page 18 of 18

2/.

28.

29,

30.

31.

32.

33.

34.

35.

36.

37,

38.

 

Li X, Peng J, Obaidat MS, Wu F, Khan MK, Chen C (2020) A secure three-factor user authentication protocol with
forward secrecy for wireless medical sensor network systems. IEEE Syst J 14(1):39-50

Li X,Wu F, Kumari S, Xu L, Sangaiah AK, Choo K-KR (2019) A provably secure and anonymous message authentica-
tion scheme for smart grids. J Parallel Distrib Comput 132:242-249

Altaf |, Arslan Akram M, Mahmood K, Kumari S, Xiong H, Khurram Khan M (2020) A novel authentication and
key-agreement scheme for satellite communication network. Trans Emerg Telecommun Technol. https://doi.
org/10.1002/ett.3894

Arshad R, Ikram N (2013) Elliptic curve cryptography based mutual authentication scheme for session initiation
protocol. Multim Tools Appl 66(2):165-178

Amin R, Biswas G (2015) Design and analysis of bilinear pairing based mutual authentication and key agreement
protocol usable in multi-server environment. Wireless Pers Commun 84(1):439-462

Amin R, Islam SH, Biswas G, Khan MK, Leng L, Kumar N (2016) Design of an anonymity-preserving three-factor
authenticated key exchange protocol for wireless sensor networks. Comput Netw 101:42-62

Irshad A, Chaudhry SA, Xie Q, Li X, Farash MS, Kumari S, Wu F (2018) An enhanced and provably secure chaotic map-
based authenticated key agreement in multi-server architecture. Arab J Sci Eng 43(2):81 1-828

Ravanbakhsh N, Nazari M (2018) An efficient improvement remote user mutual authentication and session key
agreement scheme for e-health care systems. Multim Tools Appl 77(1):55-88

Islam SH, Obaidat MS, Amin R (2016) An anonymous and provably secure authentication scheme for mobile user.
Int J Commun Syst 29(9):1529-1544

Tsai J-L (2008) Efficient multi-server authentication scheme based on one-way hash function without verification
table. Comput Secur 27(3-4):115-121

Shamshad S, Mahmood K, Kumari S (2020) Comments on ‘a multi-factor user authentication and key agreement
protocol based on bilinear pairing for the internet of things’ Wireless Personal Communications pp 1-4

Amin R, Islam SH, Biswas G, Khan MK, Kumar N (2018) A robust and anonymous patient monitoring system using
wireless medical sensor networks. Fut Gen Comput Syst 80:483-495

Kalra S, Sood SK (2015) Secure authentication scheme for iot and cloud servers. Perv Mob Comput 24:210-223
Alshahrani M, Traore | (2019) Secure mutual authentication and automated access control for iot smart home using
cumulative keyed-hash chain. J inform Secur Appl 45:156-175

. Potlapally NR, Ravi S, Raghunathan A, Jha NK (2006) A study of the energy consumption characteristics of crypto-

graphic algorithms and security protocols. IEEE Trans Mob Comput 5(2):128-143

Publisher’s Note

Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.

 

Submit your manuscript to a SpringerOpen”®
journal and benefit from:

> Convenient online submission

> Rigorous peer review

> Open access: articles freely available online
> High visibility within the field

> Retaining the copyright to your article

 

Submit your next manuscript at > springeropen.com

 

 

 
