Li and Han Brain Inf. (2020) 7:1
https://doi.org/10.1186/s40708-020-0102-9

Brain Informatics

RESEARCH Open Access

Improved fruit fly algorithm on structural

optimization

Yancang Li! ® and Muxuan Han?

Abstract

Check for
updates

To improve the efficiency of the structural optimization design in truss calculation, an improved fruit fly optimiza-
tion algorithm was proposed for truss structure optimization. The fruit fly optimization algorithm was a novel swarm
intelligence algorithm. In the standard fruit fly optimization algorithm, it is dificult to solve the high-dimensional
nonlinear optimization problem and easy to fall into the local optimum. To overcome the shortcomings of the basic

fruit fly optimization algorithm, the immune algorithm self-non-self antigen recognition mechanism and the immune
system learn—memory-forgetting knowledge processing mechanism were employed. The improved algorithm was
introduced to the structural optimization. Optimization results and comparison with other algorithms show that the
Stability of improved fruit fly optimization algorithm is apparently improved and the efficiency is obviously remark-
able. This study provides a more effective solution to structural optimization problems.

 

Keywords: Truss structure optimization, Fruit fly algorithm, Improvement, Immune response

1 Introduction

With the rapid development of computer technology, the
efficiency of structural optimization is greatly improved,
and structural designers can have more time and energy
to consider how to get better structural design scheme.
In 1974, Schimit and Farshi proposed to combine finite
element theory with mathematical induction theory to
solve the optimal weight problem of engineering struc-
ture. Structural optimization has stepped into a new era
[1]. After that, the intelligent optimization algorithm is
also widely applied to the structural optimization, and
the modern structural optimization method is gradually
applied to the engineering practice. Now, after years of
research and development, structural optimization has
changed from the original optimization of structure size
to the present optimization of topology and further opti-
mization of material distribution. From a single objective
optimization problem, multiple objectives are optimized
simultaneously. Azamirad and Arezoo [2] proposed

 

*Correspondence: liyancang@hebeu.edu.cn

' College of Water Conservancy and Hydroelectric Power, Hebei
University of Engineering, Handan, Heibei Province, China

Full list of author information is available at the end of the article

Q) Springer Open

an improved software package for stamping die struc-
ture that can greatly reduce the weight. Ide [3] designed
the lightweight structure with the structural optimiza-
tion method, and successfully realized the lightweight
gear box design by using the design method of reduc-
ing contact constraint stress. Kaveh [4] proposed water
evaporation optimization algorithm (WEO), which is
a population-based intelligent optimization algorithm
inspired by physics and used for continuous structural
optimization. In order to apply different optimization
solvers to various finite-based structural topology opti-
mization problems Rojas-Laband [5], developed a widely
representative example library of mechanism design
problems with minimum compliance, minimum volume
and different sizes. Sivapuram [6] discussed various cal-
culus methods and numerical methods commonly used
to solve structural topology optimization problems.
Inspired by the foraging process of fruit flies, scholar
Pan [7] proposed a more efficient swarm intelligence
optimization algorithm in 2012: fruit fly optimization
algorithm (FOA). The algorithm has the advantages of
clear principle, fewer parameters and simple opera-
tion. However, there are also some shortcomings, such
as weak ability to solve complex, high-dimensional and

© The Author(s) 2020. This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing,
adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and
the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material

in this article are included in the article’s Creative Commons licence, unless indicated otherwise in a credit line to the material. If material
is not included in the article’s Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the
permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit http://creativeco

mmons.org/licenses/by/4.0/.
Li and Han Brain Inf. (2020) 7:1

nonlinear optimization problems and easy to fall into
local extremum. In view of the above typical problems,
many scholars have proposed many improvements. As
for the generation of candidate solutions [8], added an
escape parameter that can be negative to the taste con-
centration judgment value, so that the candidate solu-
tion can take a negative value. A novel double strategy
evolutionary fruit fly optimization algorithm (DSE-
FOA) was proposed by Fang [9]. DSEFOA dynamically
divided the fruit fly population into spermatogonium
subgroups and ordinary subgroups, and adopted dif-
ferent strategies to update the evolution of drosophila
at different levels of evolution, which improved the
optimization ability of the whole population. In terms
of search radius, Sang et al. [10] introduced adaptive
parameters to adjust the search radius of drosophila
so as to better balance the global search capability and
local search capability. Cao [11] proposed to replace
the traditional search mechanism with sector search
mechanism, and the new fruit fly algorithm was gen-
erated to effectively improve the stability of the algo-
rithm. In terms of flight strategy [12-14], added the
operation of group collaboration and random perturba-
tion to solve the problem of premature development of
the algorithm. Sheng [15] proposed that the length of
fruit fly search for Uber should be dynamically changed
according to the change rate of concentration differ-
ence, which can effectively balance the global optimiza-
tion ability and the local optimization ability. In terms
of population diversity [16], divided the drosophila
population into multiple subpopulations of the same
size. Han [17] et al. proposed a dynamic twin group co-
evolutionary FOA to improve the search accuracy. Xin
[18] used the gaussian sampling method to update the
fruit fly. This method can increase the chance of jump-
ing out of the local extremum in the early stage of the
algorithm and conduct more accurate search in the
later stage.

Aiming at improving the performance of the standard
fruit fly optimization algorithm, the hybrid algorithm
was designed to combine with fusion immune response.
Immune algorithm was fully utilized to improve the
deficiency of fruit fly algorithm that is prone to fall into
local extreme value in the later stage. In other words,
when the number of evolutionary stasis steps ¢ is
greater than the threshold value of evolutionary stasis
steps 7, immune operation is performed to overcome
the defect of basic fruit fly algorithm. The improved
algorithm was proved to have better robustness and
intelligence through standard functions and tests for
solving 0-1 knapsack problems [19-21]. Finally, it was
applied to the optimization of truss structure [22] and

Page 2 of 13

compared with other algorithms to verify the feasibility
of the improvements.

2 Basic fruit fly algorithm
FOA (fruit fly optimization algorithm) is a new heuris-
tic algorithm that simulates the foraging activities of
fruit flies in nature to seek the optimal solution of the
objective function. The foraging iteration diagram of
fruit flies is shown in Fig. 1.

The basic steps are as follows [23-26]:

Step 1: initialize parameters. Set Sizepop and Maxgen
of the population size, and initialize the population
position:

(X axis , Y axis ) : ( 1 )

Step 2: fruit fly searches in the olfactory system,
which can make the search direction and the search
step randomly. Random value (RV) is to be the
search distance, and the position of the population is
updated simultaneously:

Xj = X_ axis + RV 2
¥i = Yaxis + RV’ 2)

Step 3: since the exact location of the food is
unknown, it is necessary to calculate the distance
(Dist;) between the fruit flies and the origin of the
coordinate and then calculate the taste concentra-
tion parameter (S;):

Dist; = \/X?+ Y/ (3)

 

 

1
= =. 4
, Dist; (4)
rc >)
FOOD
Flyl(X1Y1) Iterative evolution ,
Smelli ¢

     
 
 

ew Fly2(X2,Y2)
- Bist2 S2=1/Dist2
Smell2=Function(S2)

Fly3(X3,Y3)
Smell3

 

(0,0)

 

 

Fig. 1 FOA foraging schematic diagram
XX
Li and Han Brain Inf. (2020) 7:1

Step 4: substitute the fruit fly flavor concentration
determination value (S,) into the taste concentration
decision function, the fitness function, then we will
obtain the individual taste concentration of the fruit
flies Smell,;.

Smell; = Fitness(S;). (5)

Step 5: identify the individual with the highest flavor
concentration in the drosophila population.

[bestSmell, bestIndex] = min(Smell). (6)

Step 6: retain the best flavor concentration value and
coordinate, and other individuals in the population
fly to this position:

SmellBest = bestSmell. (7)

X axis = X (bestIndex)
‘ Y axis = Y(bestIndex) ° (8)
Step 7: termination condition, judge whether the
concentration of the best position is better than that
of the previous generation, and reach the maximum
number of iterations; otherwise, skip step 2 to enter
the iterative optimization.

3 Improved fruit fly algorithm with immune
response

Since fruit fly has a relatively developed olfactory and
visual system, it first carries out a wide range of search
through the sense of smell and sends out food odor infor-
mation to the surrounding drosophila in the process of
foraging. When a fly is found to have a higher concen-
tration by comparison, the individual flies will rely on
visual function to fly to that location [27, 28]. It is pre-
cisely because of such population characteristics that the
diversity of the population is reduced, the algorithm that
simulates its characteristics, like other bionic intelligent
algorithms, has the defect that it is easy to fall into local
optimization, which leads to the problem of early matu-
rity [29].

The immune algorithm was inspired by somatic cell
theory and network theory [30]. And it can realize the
function of self-regulation by generating different anti-
bodies similar to the immune system [31]. This algorithm
has strong local search ability. By using this, we can intro-
duce it into the later stage of fruit fly algorithm execution
to improve the basic fruit fly algorithm. The new algo-
rithm IAFOA can be used to balance the deficiency of
fruit fly algorithm that is prone to fall into local optimal,
and improve the search efficiency.

Page 3 of 13

3.1 Immune algorithm

Immune algorithm (IA) is a kind of bionic optimiza-
tion algorithm. In 1990, Bersini [32] first used immune
algorithm to solve problems. By simulating biological
immune system identify antigen (objective function),
simulation of the principle of the memory in the immune
system, combination of antigen and antibody (optimiza-
tion) solution, and diversity of imitation immune system,
IA algorithm can realize the antigen recognition, cell dif-
ferentiation, and memory of the immune system and self-
regulating function [2, 33, 34]. The basic steps of IA are
as follows:

Step 1: antigen recognition. Input objective function
and constraint conditions as antigen of immune algo-
rithm;

Step 2: generate the initial antibody. Generate initial
antibodies randomly within the solution space;

Step 3: calculate the compatibility (fitness evalua-
tion). According to the given fitness evaluation func-
tion, the affinities between antibodies and antigens
and between antibodies and antibodies were deter-
mined. The compatibility between antigen and anti-
body Ay, is defined as follows:

Ay = 1/[1+ Op:,], (9)

where Op;, represents the matching degree of antigen
and antibody, and the value of A, is between 0 and 1.
When Op, = 0, Ay = 1, indicating that the antibody
matches the antigen very well, that is, the antibody is
the optimal solution.

Step 4: update memory units. The antibody with the
highest affinity to antigen calculated in step 3 was
added into the memory unit and replaced by the
original antibody.

Step 5: promote and inhibit node production. Cal-
culate the expected value E,; of antibody i, the low
expected value of antibody will be suppressed.

Ex = Aji/Ci (10)

where 4; is the affinity between antigen and antibody
i, and C; is the number of antibody i;

Step 6: generate new antibodies. The father genera-
tion produces the next generation antibody through
heredity, mutation and crossover.

Step 7: whether termination conditions are met. Yes,
stop the algorithm; No, skip to step 3.

3.2 Population diversity improvement of IAFOA
The immune system is the basic defense system to maintain
the normal metabolism of living organisms by blocking the
Li and Han Brain Inf. (2020) 7:1

invasion of bacteria [27]. The system recognizes gene types
to produce different antibodies, promotes the emergence
of new individuals and inhibits the excessive production
of individuals through regulatory mechanisms, so as to
achieve biological diversity [4].

Suppose the immune system has WN antibodies, and each
antibody has M genes, as shown in Fig. 2. The information
entropy H;(N) of the 7 gene is:

N

Hj(N) = 5 © (—PilogP;).
i=1

(11)

If all the alleles of the antibody are the same at position /,
then H;(N) is equal to 0.

Therefore, the average information entropy H(N) of the
system is as follows:

M
H(N) = )_ Hy(N)/M. (12)

j=l

3.3 The implementation of IAFOA

Based on the standard fruit fly algorithm, FOA algo-
rithm was first used to construct the feasible solution
set. Then, the number of evolutionary stasis steps t was
used as the trigger condition [35]. When t>T (thresh-
old of evolutionary stasis steps), the IA search pro-
cess was invoked, and the process of immune factors
in the immune algorithm (corresponding to individual
drosophila) seeking antigens (corresponding to food
source in the drosophila algorithm) producing antibod-
ies (optimal solution) was used to expand the search
space. The elite retention strategy was carried out in
the feasible solution set obtained after IA search. And
the obtained optimization solution was used together
with the original feasible solution set to update the

 

Antibody 1

Antibody x

Antibody N

 

 

 

Fig. 2 Information entropy of genes
X S

Page 4 of 13

concentration of odor information in the search space,
so as to guide other fruit fly’s path search mechanism.

The threshold value of evolutionary stagnation step T
is the index to enter the IA algorithm. The premature
introduction of IA algorithm is not conducive to the
search ability of IA, or even the convergence of feasible
solutions. Through multiple independent experiments,
T=6 was adopted as the trigger value for entering IA
algorithm.

If the trigger condition is satisfied, a fixed immune
factor redistribution probability P* was employed to
the optimization of space. And the different individuals
were given different adaptive immune probability P(Z)
according to their fitness values:

(Smellbest — Smell(Z))

 

P(i) =
) ((Smellbest — Smellworst)P*) (13)
if(bestSmell < Smellbest)
Smellbest = bestSmell1
else(t = t + 1) ; (14)

Smellbest = bestSmell2
end

where in order to avoid the algorithm falling into the
local optimal solution, the initial probability of immune
factor in IA algorithm was given P* = 0.25 to randomly
allocate it and increase the diversity of solutions.

The process of IAFOA is as follows:

Step 1: initialize parameters. Set Sizepop and Max-
gen of population size, initialize population posi-
tions X axis and Y axis, and the number of evolution-
ary stagnation steps f= 0;

Step 2: randomly generate fruit fly population
according to Eq. (3);

Step 3: use Eqs. (4)—(7) to operate the population;
Step 4: record and retain the best flavor concentra-
tion value according to Eq. (14), and update the evo-
lutionary iteration step number t;

Step 5: judge whether ¢< T is true, if directly go to
step 7; otherwise, according to Eq. (13), the adaptive
immunity probability of individual fruit fly was cal-
culated, and the immune operation was carried out
according to the immune algorithm. For individuals
who did not perform the immune operation, step 7
was taken.

Step 6: repeat steps 2—4 for iterative search of the
new population obtained by immunization;

Step 7: set gen = gen + 1; if gen < Maxgen, go to step 2;
otherwise terminate the iteration.

IAFOA flowchart is shown in Fig. 3.
Li and Han Brain Inf. (2020) 7:1

4 Simulation results

In order to verify the effectiveness of the improved
algorithm, four standard test functions [5, 36] were
selected for numerical simulation test to test the per-
formance of IAFOA algorithm. In addition, 0-1 knap-
sack problem was selected for simulation experiment
[37], and the results are compared with other algo-
rithms. Initialization parameters: population size Siz-
epop=200, max iteration number Maxgen=1000,
dimension D= 30, P*=0.25, T= 6.

4.1 Standard function test
The first standard function: Rosenbrock function:

d—1

fi) = Ss” 100 (xis: — a). + (xj - »?|. (15)

i=1

The second standard function: Ackley function:

fo(x) = —a exp| —D

 

d
1
— exp (; Ss” csc) +a-+ exp (1).
i=l

The third standard function: Cross-in-tray function:

))

(16)

0.1
xix
100 — ————

 

f3(*) = —0.0001 ( sin (x1) sin (x2) exp (

 

 

(17)

 

Initialization parameter. Set up the

 
  
    
      

Sizepop, Maxgen, X_axis, Y axis, t=O

Smell movement, according
to formula (3~6) operation

Visual movement, other fruit flies fly to the position of
the optimal concentration calculated from equation (14),

and update the number of evolutionary iterations t

Calculate
P(i), enter

gengen+ 7
the immune

N
The iteration is terminated and
the optimal solution is output

algorithm

  

 

 

Fig. 3 IAFOA algorithm iteration diagram
Ne

Page 5 of 13

The fourth standard function: Levy function:

d—-1
falx) = sin?(r01) + S> (@; — 1)? 1 + 10sin2(st@; + |
i=l
+ (wg +1)? 1 + sin? (204) |,

x;j—1
where w; = 1+ 7 ,

 

for alli = 1,2,...,d.

(18)

Figures 4, 5, 6, and 7 show the graphs of the four func-
tions, where Rosenbrock function is a single peak func-
tion, which is mainly used to test the convergence
performance of the improved algorithm in the process of
operation. Both Ackley function and Cross-in-tray func-
tion are complex multi-peak functions, which tend to
make the algorithm fall into local optimization, so that
the real optimal value cannot be obtained, which is used
to test the ability of the improved algorithm to deal with
falling into “premature”. The Levy function has a complex
spatial property and is used to test the computational
accuracy, convergence stability and time complexity of

 

 

 

 

 

f(x1,.x2)

 

«2 40 40

x1

 

 

Fig.5 Ackley function graph
\
Li and Han Brain Inf. (2020) 7:1

 

f(x'1,x2)

Fig.6 Cross-in-tray function graph

 

XN

 

 

 

f(x1,x2)

 

Fig. 7 Levy function graph
Ne

 

 

 

Page 6 of 13

the improved algorithm. The selected functions and their
expressions are shown in Table 1.

Four different standard functions were used to test
the convergence performance, operation efficiency, han-
dling of “local optimal” and “premature” problems, and
the optimal value and average value in the optimization
test. The standard deviation reflects the robustness of
the algorithm. The running time reflects the convergence
speed and accuracy of the algorithm. It can be seen from
the calculation results in Table 2 that the fusion immune
response hybrid fruit fly algorithm performs better
than the standard fruit fly algorithm in different stand-
ard functions. The improved algorithm is feasible and
effective.

In order to more intuitively see the effectiveness of
improved algorithm performance, Fig. 8 shows immune
algorithm (IA), particle swarm optimization (PSO),
standard fly optimization algorithm. FOA) and fruit fly
optimization algorithm based on immune algorithm
(I[AFOA) under the above four standard functions. The
average value of multiple runs was used as the final result
to avoid accidental errors.

It can be seen from the iterative curve of Fig. 5 that the
algorithm can search the local optimal solution, in addi-
tion it reflects high convergence speed and convergence
accuracy, especially at the initial stage of iterative algo-
rithm. Take (a) in Fig. 5 as an example, when the algo-
rithm runs about 78 times, it can jump out of the local
optimal solution. When the number of iterations is about

Table 1 Comparison of optimization performance for benchmark functions

 

 

Function Dimension Algorithm Optimal value Average value Standard deviation Running time/s
fy 30 IA 37.1543 61.3698 33.1659 5.5329
PSO 16.5998 34.6729 29.5267 3.9532
FOA 15.2864 20.9341 19.5582 1.0299
IAFOA 14.0958 17.9574 6.46931 1.3621
fy 30 IA 2.2763 3.5297 3.061e—03 3.5146
PSO 2.0051 2.1193 2./96e—03 4.2287
FOA 1.6849 1.9678 3.909e—04 1.9652
IAFOA 0 1.0052 6.9768e—03 0.9537
3 30 IA 2.18e—02 4.485e—02 3.0702e—01 4.7798
PSO 1.96e—02 2.073e—01 2./85e—01 3.5669
FOA 1,854e—01 1,6941e—01 1.1185e—01 1.2463
IAFOA 0 0 0 0.6805
fa 30 IA 1.952e—04 2.327e—04 6.001e—01 3.534
PSO 1.439e—02 2.557e—02 5.026e—01 4.371
FOA 2.005e—02 1.363e—01 3.778e—02 0.988
IAFOA 3.958e—03 1.564e—05 2.563e—02 1.015

 
Li and Han Brain Inf. (2020) 7:1 Page 7 of 13

Table 2 Result comparison table of TSP problem

 

 

 

 

 

 

 

Algorithm Oliver30 Att48 Eil51

Best Avg Best Avg Best Avg
IA 459.9 485.1 394,025 38,732 564.8 579.4
PSO 527.3 572.3 499,758 52,277 570.9 610.2
FOA 415.2 485.6 35,947 44,620 453.6 557.9
IAFOA 415.0 475.9 35,098 43,082 450.9 544.1
C >)

The convergence accuracy/log10
The convergence accuracy/log 10

 

0
0 100 200 300 400 500 600 700 800 900 1000 0 100 200 300 400. 500 600 700 800 900 1000
Iterations/time lteration/times
(a) Rosenbrock Function (b) Ackley Function

MAHL Clog10)
Wea Clog10)

 

0 200 400 600 800 1000 0 200 400 600 800 1000
FEHR AT TERRE (2h)
(c) Cross-in-tray Function (d) Levy Function

Fig. 8 The iterative curve of the algorithm under four functions. a Rosenbrock function. b Ackley function. ¢ Cross-in-tray function. d Levy function

 

 

X
Li and Han Brain Inf. (2020) 7:1

255 times, the optimization result is generally stable. It is
obviously that the improved algorithm proposed here is
superior to the IA, PSO, and standard FOA.

4.2 Solve the TSP problem

Traveling salesman problem (TSP) is a classical combina-
torial optimization problem, which is a typical NP hard
problem. It has important research value in the field of
logistics distribution and vehicle route planning.

The TSP problem can be described as: we know the
coordinate position of N cities or the distance between
two cities. A salesman needs to go to N cities to sell
goods. To start from one city, salesman must pass
through other cities only once, and then return to the
starting city. Finding out the shortest path for saleman.
The mathematical model is as follows.

If S = (P),P2,...,Pn) can satisfy the minimum value
of f(S), then access order S is the optimal solution of TSP
problem under the condition of N cities, that is, the opti-
mal path [38].

N-1
f(S) = S- (P, Pint) + d(Pn, Pr),

n=1

(19)

where P; is the city code, i € (1,2,...,N); d (P;, P;) is the
distance between city P; and city P;. If only the city coor-
dinates are known, then:

 

(PB) =i -%)+(%-¥), 2)
where (X; — X;) is the coordinate position of P;
;d (P;,P;) = d(Pj, Pi).

In order to verify the performance of the IFOA in solv-
ing the TSP problem, this paper selected Oliver30, Att48
and Eil51 standard examples from the international TSP
database (The Library of TSP, TSPLIB) for parameter
testing. The result is shown in Table 2.

The above analysis results show that IAFOA can not
only effectively solve the TSP problem, but also has a
higher robustness than other algorithms.

5 Optimization of truss structure by IAFOA
5.1 Optimization model of truss structure

1. The optimization model

The optimization model problem of truss with sec-
tional area as the design variable is described as fol-
lows [6]:

minF = W(x) (21)

Page 8 of 13

s.t.g(v~) <0, i=1,2,...,m, (22)

where g,(x) is the constraint function; m is the num-
ber of constraints.
2. The objective function

nN
W(A) = )_ pAiLi (23)
i=1

where W (A) is the weight of the structure; A; and L;
are, respectively, the cross-sectional area and length
of the ith root. p is the density of the material; is the
number of design variables.

3. The constraint

Each member of the structure shall meet the require-
ments of strength, stiffness, stability and section size:

Oj

io] (24)
Mj

Mmax 1s (25)

Amin < Aj < Amax; (26)

where o; is the normal stress of the ith root element. [co]
is the allowable stress of the material. 4; represents the
displacement of node j; allowable displacement of Umax
node j; Amin and Amax are the upper and lower limits of
the member section, respectively.

Example 1 ‘The 25-bar truss structure model [39]
is established as shown in Fig. 9 and Table 3. Basic
parameters of truss structure: rod length L=0.635 m,
elastic modulus E = 6.895 x 10* MPa, material den-
sity p = 2.678 x 10? kg/m?, allowable stress range:
[—275.8275.8], maximum _ vertical displacement
y = 8.889 mm of nodes 1 and 2.

The results are shown in Table 4 and Fig. 10. Under the
same constraint conditions, IAFOA was used to opti-
mize the 25-bar truss structure, and the total mass of
the optimized structure was 206.591 kg. Compared to
IA, mass decreased (246.436—206.591)/206.591 = 1.93%.
Compared with PSO, the quality decreased (216.339-
206.591)/206.591=4.72%; compared with  FOA,
the optimization results were optimized (214.702-
206.591)/206.591= 3.93%. After about 68 _ iterations,
IAFOA can find the global optimal solution. [A searched
for the global optimal solution for about 130 times, PSO
for about 150 times and FOA for about 165 times. For
the quality problem of global optimal solution, IAFOA
(2020) 7:1

Li and Han Brain Inf. Page 9 of 13

Quality/kg

200 250 300 350 400
Iterations/time
Fig. 10 The optimization iteration curve of Example 1

 

 

 

 

 

>

Fig.9 The 25-bar spatial structure
XN

Table 3 Load conditions of 25-bar truss structure

 

 

Node number F, Fy F, (1)
] 4.448 44.482 — 22.241

2 0 44.482 — 22.241

3 22.24] 0 0

6 22.24] 0 0

 

Table 4 Comparison of optimization results of 25-bar truss

 

 

 

structure
Bar number Bar section area (unit: mm?)

IA PSO FOA IAFOA
A, 65.7 64.516 64.9 64.1
A,-As 242.6 228.5 234.5 226.3
0,-Ag 2287.5 2237.6 2230.1 2240.4
A1o-A1 65.12 64.516 63.149 63.56
A1-Aj3 1245.8 1227.9 1226.1 1223.5
Ay4-Ai7 505.1 506.9 501.7 500.9
A1e-Ad, 92.1 83.9 89.5 85.7
A59-Ads 2523.4 2575.7 2568.3 2495.6
Total weight (unit kg) 246.436 216.339 214.702 206.591

 

 

is superior to the other three optimization algorithms.

Fig. 11 The 72-bar spatial structure

It is proved that I[AFOA is stable in the face of complex
optimization problems in the optimization process, and

 
Li and Han Brain Inf. (2020) 7:1

Table 5 The classification of 72-bar truss structure

Page 10 of 13

 

 

Group number Bar number Group number Bar number

A, 1,2,3,4 Ao 37, 38, 39, 40

A> 5,6, 7,8,9, 10, 12 Ao 41,42, 43, 44, 45, 46, 47, 48
A3 13, 14, 15, 16 Ay 49, 50,51, 52

A, 17,18 Ay 53, 54

As 19, 20, 21, 22 A,3 55,56, 57,58

Ae 23, 24, 25, 26, 27, 28, 29, 30 Ay4 59, 60, 61, 62, 63, 64, 65, 66
A; 31, 32, 33, 34 Ays 67, 68, 69, 70

Ag 35, 36 Ax6 71,72

 

 

it is not easy to fall into the local optimal solution. Thus,
IAFOA is effective.

Example 2 The 72-bar truss structure model [39]
is established as shown in Fig. 11. 72 bars are divided
into 16 groups, and the grouping condition is shown in
Table 5. Material density is p = 2.678 x 10° kg/m?, elas-
tic modulus is E = 6.895 x 10* MPa, and the maximum
displacement of each bar in all directions cannot exceed
6.35 mm, and maximum allowable stress is [— 172.375,
172.375], and the optimized results are shown in Table 6.

The results are shown in Table 7 and Fig. 12.
Under the same_ constraint conditions, IAFOA

Table 6 Comparison of optimal designs for the 72-bar
spatial truss structure

 

Bar group number Bar section area (unit: mm?)

 

 

 

IA PSO FOA IAFOA
A, 103.75 100.69 102.26 101.31
A, 358.36 359.28 372.97 349.15
As 271.02 270.31 220.27 238.97
A, 367.88 368.96 392.01 398.29
As 343.59 342.99 170.51 173.49
Ac 337.23 337.12 353.46 336.89
A, 64.518 64.518 64.528 64.518
As 64.518 64.518 64.518 64.518
Ao 871.37 871.01 713.98 825.37
Arg 318.96 318.55 373.81 332.31
Ay, 64.518 64.518 64.518 64.518
A, 64.518 64.518 64.518 64.518
Ai; 118859 1187.96 1330.02. ——- 1152.32
Ava 324.97 325.72 324.89 332.61
Ais 64.518 64.518 64.518 64.518
Ave 64.518 64.518 64.518 64.518
Weight (kg) 175.03 173.87 176.31 171.98

 

was used to optimize the 72-bar truss structure,
and the total mass of the optimized structure was
171.98 kg. Compared to IA, mass decreased (175.03-
171.98)/171.98 =1.77%. Compared with PSO, the qual-
ity decreased (173.87-171.98)/171.98=1.10%; Com-
pared with FOA, the optimization results were optimized
(176.31-171.98)/171.98 =2.52%.

Example 3 The 200-bar truss structure model [39]
is established as shown in Fig. 13. 200 bars are divided
into 29 groups, and it is relatively high-dimensional opti-
mization problem. The grouping condition is shown in
Table 7. Material density is p = 7.86 x 10° kg/m’, elastic
modulus is E = 2.1 x 1011 N/m?. The minimum permit-
ted cross-sectional area for the truss members is taken as
0.1 cm’, a non-structural mass of 100 kg is attached for
all free nodes.

The results are shown in Table 8 and Fig. 14. Under the
same constraint conditions, IAFOA was used to opti-
mize the 200-bar truss structure, and the total mass of
the optimized structure was 2156.05 kg. Compared to
IA, mass decreased (2298.73—2156.05)/2156.05 = 6.62%.
Compared with PSO, the quality decreased
(2276.59—2156.05)/2156.05 = 5.59%; compared
with FOA, the optimization results were optimized
(2259.86—2156.05)/2156.05 = 4.81%.

6 Conclusion

With the development of civil engineering, the struc-
tural optimization is more and more important. To
find a new method for the truss structure optimiza-
tion, an improved FOA was proposed. To overcome
the shortage of the basic FOA, the IA was introduced
into FOA, and a new IAFOA algorithm was proposed.
Combining the global search capability of the original
standard FOA algorithm and the strong local search
capability of IA algorithm itself, the IAFOA achieves
Li and Han Brain Inf. (2020) 7:1 Page 11 of 13

Table 7 The classification of 200-bar truss structure

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

Group name_ Bar number Group name_ Bar number
A, 1,2,3,4 Ai6 82, 83, 85, 86, 88, 89, 91, 92, 103, 104, 106, 107, 109, 110, 112, 113
A> 5,6, 7,8, 9, 10, 12, 13, 14, 15, 16, 17 Ay 115,116,117,118
A3 19, 20,21, 22, 23, 24 Aig 119,122, 125, 128, 131
A, 18, 25,56, 63, 94, 101, 132, 170, 177 Ai 133, 134, 135, 136, 137, 138
As 26, 29, 32, 35, 38 Axo 140, 143, 146, 149, 152
Ae 6, 7,9, 10, 12, 13, 15, 16, 27, 28, 30, 31, 33, 34 A>, 120, 121, 123, 124, 126, 127, 129, 130, 141, 142, 144, 145, 147,
148, 150, 151
A; 39, 40, 41, 42 A> 153,154, 155, 156
Ag 43,46, 49,52,55 A>3 157, 160, 163, 166, 169
Ag 57,58, 59, 60, 61, 62 Ax4 171,172, 173, 174, 175, 176
Ao 64,67, 70, 73, 76 A> 178, 181, 184, 187, 190
Ay, 44, 45, 47, 48, 50, 51, 53, 54, 65, 66, 68, 69, 71, 72, 74,75 Ase 158, 159, 161, 162, 164, 165, 167, 168, 179, 180, 182, 183, 185,
186, 188, 189
A, 77, 78, 79, 80 Ay, 191, 192, 193, 194
A,3 81, 84, 87, 90, 93 Ag 195, 197, 198, 200
Aya 95, 96, 97, 98, 99, 100 Ax 196, 199
A1s 102, 105, 108, 111, 114
(— >
(i >)
6000
< 4x 6. 10 m >
5000
Oe
@ 4000
2
S 3000
G
2000
1000
0
0 100 200 300 400 500 600 =
Iterations/time S
Fig. 12 The optimization iteration curve of Example 2 | ve
NX SS =
good results in numerical simulation with high abil-
ity of solving optimization problems. Although these
improvements can overcome some shortcomings of the
algorithm, it lacks the adjustment of parameter stag-
nation step number wide value T and fixed probabil- ' OAS ORL ORS OES »

9.144 m

ity P*. In the future, more detailed improvements are - (78)- -Y-
needed to make IAFOA algorithm converge faster and
more accurately. In addition, the example in this paper
is relatively simple, and the application of the algorithm
in the optimization of complex structures needs to be

further studied.

 

Fig. 13 The 200-bar spatial structure
\

 
Li and Han Brain Inf. (2020) 7:1

Table 8 Comparison of optimal designs for the 200-bar
spatial truss structure

 

Bar group number Bar section area (unit: m7)

 

 

 

 

 

 

IA PSO FOA IAFOA
A, 0.2998 0.3078 0.4439 0.2879
A, 0.5564 0.4571 1.0438 0.4853
A; 0.2867 0.1006 0.3769 0.1002
A, 0.1908 0.1006 0.1494 0.1002
As 0.8329 0.5093 0.4835 0.4985
Ae 0.6598 0.8277 0.8103 0.8038
A; 0.1779 0.1051 0.2364 0.1031
Ag 1.4794 1.4339 1.4554 1.3769
Ag 0.4462 0.1013 1.0103 0.1000
Ai 1.4566 1.5497 2.1382 1.5541
Ay 1.2295 1.1535 0.8583 1.1507
Aj 0.2794 0.1469 1.2718 0.1332
Aj3 1.9279 2.9492 2.0807 3.0109
Aya 0.1179 0.1111 0.2677 0.1005
Aus 3.4435 3.2199 3.2403 3.2584
Av 1.3953 1.5796 2.0098 1.6205
Ay 0.6288 0.2901 1.5956 0.2079
Aig 4.8937 5.1002 6.2338 5.0203
Axo 0.6093 0.1101 0.5793 0.1328
Avo 5.4397 5.4594 3.0520 48531
A>, 1.8439 2.9007 1.8121 2.0138
Ax 1.4273 0.6489 1.2986 0.7201
Aj3 8.1702 7.6592 5.8810 7.7219
Ava 0.3271 0.1379 0.2324 0.1819
Aos 10.902 8.0097 7.7536 8.9438
Ax 2.9359 2.7602 2.6871 2,9953
Ax 19.5329 10.4765 10.2694 = 10.2049
Ads 20.9768 21.3501 21.5704 20.6507
A59 15.7301 10.5014 8.2901 11.5468
Weight (kg) 2298.73 2276.59 2259.86 2156.05
(— >
3800
3600
3400
3200
> 3000
Ss
& 2800
2600
2400
2200
0 50 100 150 200 250 300
Iterations/time
Fig. 14 The optimization iteration curve of Example 3

 

 

XN S/

Page 12 of 13

Acknowledgements

This work was supported by the Project of Scientific Research Program
of Colleges and Universities in Hebei Province (No. ZD 2019114) and the
Innovative Funding Project for Graduate Students in Hebei Province (No.
CXZZSS2020079).

Authors’ contributions

LIY and HM were involved in initiating the study and developing the model. LY
drafted the initial manuscript and performed the analyses. LY and HM edited
the manuscript. All authors read and approved the final manuscript.

Funding

This work was supported by the Project of Scientific Research Program of Col-
leges and Universities in Hebei Province (No. ZD 2019114).

Innovative Funding Project for Graduate Students in Hebei Province (No.
CXZZSS2020079).

Availability of data and materials
All data generated or analyzed during this study are included in this published
article.

Competing interests
The authors declare that they have no competing interests.

Author details

' College of Water Conservancy and Hydroelectric Power, Hebei University

of Engineering, Handan, Heibei Province, China. ? College of Civil Engineering,
Hebei University of Engineering, Handan, Heibei Province, China.

Received: 30 November 2019 Accepted: 4 February 2020
Published online: 16 February 2020

References

1. Lin SM (2013) Analysis of service satisfaction in web auction logistics ser-
vice using a combination of Fruit fly optimization algorithm and general
regression neural network. Neural Comput App! 22(3-4):783-791

2. Azamirad G, Arezoo B (2016) Structural design of stamping die compo-
nents using bi-directional evolutionary structural optimization method.
Int J Adv Manuf Technol 87(1-4):969-979. https://doi.org/10.1007/s0017
0-016-8344-7

3. Ide T, Kitajima H, Otomori M et al (2016) Structural optimization methods
of nonlinear static analysis with contact and its application to design
lightweight gear box of automatic transmission of vehicles. Struct Multi-
discip Optim 53(6):1383-1394

4. Kaveh A, Bakhshpoori T (2016) A new metaheuristic for continuous struc-
tural optimization: water evaporation optimization. Struct Multidiscip
Optim 54(1):2343. https://doi.org/10.1007/s00158-015-1396-8

5. Rojas-Labanda S, Stolpe M (2015) Benchmarking optimization solvers for
structural topology optimization. Struct Multidiscip Optim 52(3):527-547,
https://doi.org/10.1007/s00158-015-1250-z

6. Sivapuram R, Dunning PD, Kim HA (2016) Simultaneous material and
structural optimization by multiscale topology optimization. Struct
Multidiscip Optim 54(5):1267-1281. https://doi.org/10.1007/s0015
8-016-1519-x

7. Pan WT (2012) A new fruit fly optimization algorithm: taking the financial
distress model as an example. Knowl Based Syst 26:69—74. https://doi.
org/10.1016/j.knosys.201 1.07.001

8. Pan WT (2013) Using modified fruit fly optimization algorithm to perform
the function test and case studies. Connect Sci 25(2/3):151-160

9. Fang B, Chen HM (2019) A novel double strategies evolutionary fruit fly
optimization algorithm. J Shandong Univ 49(3):22-31

10. Pan OK, Sang HY, Duan JH (2014) An improved fruit fly optimization
algorithm for continuous function optimization problems. Knowl Based
Syst 62:69-83. https://doi.org/10.1016/j.knosys.2014.02.021

11. Cao ZG, Li ZW, Yu JF (2019) Fruit-fly optimization algorithm of sector
search mechanism. Comput Eng Des 40(6):1584-1590

12. LiJ, Pan Q, Mao K (2014) Solving the steelmaking casting problem using
an effective fruit fly optimization algorithm. Knowl Based Syst 72:28-36
Li and Han Brain Inf.

20.

21.

22.

23.

24.

25,

26.

2/.

(2020) 7:1

Wang L, Shi, Liu S (2015) An improved fruit fly optimization algorithm
and its application to joint replenishment problems. Expert Syst Appl
42(9):4310-4323. https://doi.org/10.1016/j.eswa.2015.01.048

Zhang QT, Fang LO, Zhao YL (2015) Gemini fly optimization algorithm
with Levy flight characteristics. Comput Appl 35(5):1348-1352

Sheng C, Zou H, Zhu FZ (2019) A new self-changing step fruit fly optimi-
zation algorithm. Microelectron Comput 36(2):62-67

Liu ZX, Wang YF, Zhang Y (2014) Multi-population fruit fly optimization
algorithm for automated warehouse selection scheduling. J Wuhan Univ
Technol 36(3):71-77

Han JY, Liu CZ, Wang LG (2013) Dynamic twin group coevolution
drosophila optimization algorithm. Pattern Recognit Artif Intell
26(11):1057-1067

Xin CT, Zou H, Sheng C, Ding GK (2019) The optimal entropy threshold
image segmentation of the mew fruit fly optimization algorithm. Micro-
electron Comput 36(4):52-56

Cai ZX, Gong T (2004) Progress of immune algorithm research. Control
Decis 19(8):841-846

Chen D, Li S, Wang J, Feng Y, Liu Y (2019) A multi-objective trajectory
planning method based on the improved immune clonal selection algo-
rithm. Robot Comput Integr Manuf 59:431-442. https://doi.org/10.1016/j.
rcim.2019.04.016

Zhen Y, Ding YS, Hao KG, Cai X (2019) An adaptive immune algorithm for
service-oriented agricultural internet of things. Neurocomputing. https://
doi.org/10.1016/j.neucom.2018.06.094

Corus D, Oliveto PS, Yazdani_ D (2019) When hypermutations and ageing
enable artificial immune systems to outperform evolutionary algorithms.
Theor Comput Sci. https://doi.org/10.1016/j.tcs.2019.03.002

Hassan Z, Bahman N, Mohammad M (2019) The economic lot scheduling
problem in limited-buffer flexible flow shops: mathematical models and
a discrete fruit fly algorithm. Appl Soft Comput J 6:904-919. https://doi.
org/10.1016/j.asoc.2019.03.054

Hu JH, Chen P Yang Y, Liu YM (2019) The fruit fly optimization algorithms
for patient-centered care based on interval trapezoidal type-2 fuzzy
numbers. Int J Fuzzy Syst 5:1270-1287. https://doi.org/10.1007/s408 1
5-019-00624-y

Wang L, Zhang XL (2017) Research progress of fruit fly optimization
algorithm. Control Theory Appl 34(5):557-563

Xu XP, Shi XT, Qian FC (2008) Solving 0-1 knapsack problem based on
monkey swarm algorithm. Appl Comput Syst 27(5):133-138

Gholizadeh S, Poorhoseini H (2015) Optimum design of steel frame struc-
tures by a modified Dolphin echolocation algorithm. Struct Eng Mech
55(3):535-554. https://doi.org/10.12989/sem.2015.55.3.535

28.

29.

30.

31.

32.

33.

34.

35.

36.

37.

38.

39.

Page 13 of 13

Zhang JM, Liu HJ (2018) Prediction of parking space based on BP neural
network optimized by genetic algorithm. J Chongqing Univ 41(3):76-81
Xie KH, Zeng XH, Liu CY (2003) Comparative analysis of immune algo-
rithm and other stochastic optimization algorithms. J Chongqing Univ
26(11):43-47

Li YC, Yan Z (2019) Improved shuffled frog leaping algorithm on system
reliability analysis. Brain Inf. https://doi.org/10.1186/s40708-019-0095-4
Bonyadi MR, Michalewicz Z (2017) Impacts of coefficients on movement
patterns in the particle swarm optimization algorithm. IEEE Trans Evol
Comput 21(3):378-390. https://doi.org/10.1109/tevc.2016.2605668

Brsini H, Varela F (1991) Hints for adaptive problem solving gleaned from
immune network. Springer-Verlag, Berlin Heidelberg, pp 343-354
Babalik A, scan H, Babaoglu |, Gundtiz M (2017) An improvement in fruit
fly optimization algorithm by using sign parameters. Soft Comput 2:1-17.
https://doi.org/10.1007/s00500-01 7-2733-1

DuTS, Ke XT, Liao JG, Shen YJ (2018) DSLC-FOA: improved fruit fly optimi-
zation algorithm for application to structural engineering design optimi-
zation problems. App! Math Model 55:314-339. https://doi.org/10.1016/j.
apm.2017.08.013

Mohanty B, Hota PK (2015) Comparative performance analysis of fruit fly
optimization algorithm for multi-area multi-source automatic generation
control under deregulated environment. Gener Trans Distrib 9(14):1845-
1855. https://doi.org/10.1049/iet-gtd.2015.0284

Mousavi SM, Tavana M, Alikar N, Zandieh M (2017) A tuned hybrid intel-
ligent fruit fly optimization algorithm for fuzzy rule generation and clas-
sification. Neur Comput Appl. https://doi.org/10.1007/s00521-01 7-3115-4
(In Press)

Zargham S, Ward TA, Ramli R, Badruddin IA (2016) Topology optimization:
a review for structural designs under vibration problems. Struct Multidis-
cip Optim 53(6):1157-1177. https://doi.org/10.1007/s00158-015-1370-5
Cai YG, Chen RH, Qi YH (2019) Chaotic fireworks algorithm for solving
salesman problem. Comput Sci 46(6A):85—-88

Assimi H, Jamali A, Nariman-Zadeh N (2018) Multi-objective sizing

and topology optimization of truss structures using genetic program-
ming based on a new adaptive mutant operator. Neural Comput Appl
23(24):1-21. https://doi.org/10.1007/s00521-018-3401-9

Publisher’s Note
Springer Nature remains neutral with regard to jurisdictional claims in pub-
lished maps and institutional affiliations.

 

 

Submit your manuscript to a SpringerOpen”®
journal and benefit from:

> Convenient online submission

> Rigorous peer review

> Open access: articles freely available online
> High visibility within the field

> Retaining the copyright to your article

 

Submit your next manuscript at > springeropen.com

 

 
