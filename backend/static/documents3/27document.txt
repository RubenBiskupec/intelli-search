Li et al. Journal of Cloud Computing: Advances, Systems and Applications
(2020) 9:23
https://doi.org/10.1186/s13677-020-00171-0

Journal of Cloud Computing:
Advances, Systems and Applications

RESEARCH Oy else =e

A security event description of intelligent
applications in edge-cloud environment

Qianmu Li', Xiaochun Yin?, Shunmei Meng'”, Yaozong Liu* and Zijian Ying'?”

Check for
updates

 

Abstract

In traditional network environment, the attack topology of the network is usually obtained based on a graph
traversal algorithm. It uses connection relationships to describe the process of the attack, thus completing the
description of network security event. However, in the edge-cloud environment, the control logic and data
forwarding of network devices are separated from each other. The control layer is responsible for the centralized
management of network edge nodes. After acquiring the entire network topology, it can automatically generate a
visualized network structure. This architecture extends traditional cloud computing architecture to the edge of the
network, helping to handle some latency-sensitive service requirements, especially for most loT applications.
Therefore, security analysts can grasp the connection status of the devices on the entire network in the control
domain. This network topology generation method based on the control layer information is directly and efficiently,
which can greatly simplify the description of security events in the edge-cloud environment. At the same time, the
separate structure also hides specific details of the underlying network device. Petri-net, as a formal description tool,
can be used to describe such structure. Among existing security event description methods, the CORAS modeling

tool has the advantages of graphical description, reusability and refinement description. And it also provides
analysis guides to guide the operation steps. Based on the edge-cloud environment, this paper combines the
advantages of CORAS modeling and analysis with Object-oriented Petri-net theory, and proposes a COP (CORAS-
based Object-oriented Petri-net)-based Intelligent Applications security event description method. Experiments
verify that this method is suitable for describing the complexity and dynamics of security events in edge cloud

environment.

 

Keywords: Security event description, CORAS modeling, Petri-net

Introduction
Edge-Cloud computing is the product of ICT conver-
gence, which can meet the development needs of future
HD video, VR/AR, Industrial Internet and V2X business.
In order to better understand the security events of the
edge cloud network and evaluate network security from
system perspective, a security event description method
is needed.

The technology for describing network security events
has become one of focus research fields in Edge Cloud.
A command-level anomaly detection method with

 

* Correspondence: gianmu@njust.edu.cn

"School of Cyber Science and Engineering, Nanjing University of Science and
Technology, Nanjing 210094, China

Full list of author information is available at the end of the article

o) Springer Open

matrix and color is proposed to represent anomaly situ-
ation [1]. Such matrix-based description method is also
used in fields such as IP address-based traffic description
[2]. The description tool developed by Junlong Zhou im-
plements dynamic resource descriptions with fault toler-
ance for data-intensive meteorological workflows in
cloud [3]. There are many similar methods [4, 5] that
can help describe large-scale network security faults,
such as worm attacks, DDoS attacks, and network scan-
ning attacks. These methods can also describe network
traffic on parallel coordinate planes, and realize attack
visualization. Ref. [6] designed a method for describing
the correlation among network security events. This
method provides a security internal correlation through
a ring-shaped relationship diagram to help analysts

© The Author(s). 2020 Open Access This article is licensed under a Creative Commons Attribution 4.0 International License,
which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give
appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if

changes were made. The images or other third party material in this article are included in the article's Creative Commons
licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons
licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain
permission directly from the copyright holder. To view a copy of this licence, visit http://creativecommons.org/licenses/by/4.0/.
Li et al. Journal of Cloud Computing: Advances, Systems and Applications

detect malicious behavior. With the increase of network
complexity, rule-based vulnerability analysis technology
is difficult to find potential penetration points in the net-
work. In edge cloud networks, Ref. [7] explores a two-
stage locality-sensitive hashing-based approach for
privacy-preserving mobile service recommendation in
cross-platform edge environment. A strategy model is
proposed to establish the connection between two de-
vices. Ref [8] used CORAS framework to link prediction
in paper citation network to construct paper correlated
graph. The CORAS framework has the advantages of
graphical description, good reusability, and fine descrip-
tion [9-15]. However, the formal description ability is
insufficient. And the lack of dynamic analysis capabilities
restricts its application in large-scale edge cloud network
security analysis and evaluation.

In addition, most of the network topology are usually
obtained based on the graph traversal algorithms, and
the connection relationship is used to describe the oc-
currence of the attack. What’s more, the description of
the network security event is completed. In the edge
cloud network, the control logic and data forwarding of
network equipment are separated, and the control layer
is responsible for the centralized management of net-
work nodes. The control layer can obtain the entire net-
work topology and use the entire network topology to
automatically generate a visualized entire network struc-
ture. Security analysts can grasp the connection status of
the entire network devices in the control domain. The
method of network topology generation based on con-
trol layer information is directly and efficiently, which
greatly simplifies the description of security events in
edge cloud networks. At the same time, such a separated
structure also allows the specific details of the under-
lying network equipment to be hidden, thereby forming
an abstract, virtual, flat structure. As a formal descrip-
tion tool, Petri-net can be used to describe such struc-
tures [16-20]. Among existing security event description
methods, CORAS modeling tools have the advantages of
graphical description [21-24], good reusability, and fine-
grained description. They also provide analysis guides to
guide operation steps.

So, based on the structure of the edge cloud network,
this paper combines the advantages of CORAS modeling
and analysis ideas with Object-oriented Petri-net theory,
and then proposes a COP (CORAS-based Object-
oriented Petri-net) security event description method to
model the complexity and dynamics of intelligent appli-
cations security events.

Security risk assessment methods

(1) Attack Trees Analysis (ATA). ATA is an analytical
method for exploiting system weaknesses from the

(2020) 9:23 Page 2 of 13

perspective of an attacker [25]. It uses the tree
structure to describe the possible attacks on the
system. Because most risk assessment methods
need to make assumptions based on existing
information, the accuracy of the assessment will be
limited by the accuracy of the hypothesis. To
ensure the best results, the conclusions drawn from
the attack tree analysis need to be compared to
other analysis results or assessed by experts.
However, building a 100% accurate attack tree
model is almost impossible. And this step will
greatly increase the complexity of the method. The
evaluator needs to know the extent of the
assessment and make the attack tree model good
enough. In order to prevent this step from
consuming too many resources, the following three
conditions need to be considered:
a. Defender’s system has vulnerabilities.
b. Attackers need to have enough ability to exploit
these vulnerabilities.
c. The expected benefit is the motivation for the
attack, and the attacker can gain benefits by
attacking.

The main advantage of ATA is that it can be easily re-
written according to the needs and characteristics of the
organization. This method can also conclude which at-
tacks are most likely to occur in terms of the entire sys-
tem. From a certain perspective, security is not a result
but a process, and ATA can form a basic understanding
of this process.

(2) Failure Tree Analysis (FTA). FTA is a top-down as-
sessment method. It uses a tree diagram to organic-
ally link system security failures to internal failures.
In the fault tree, the root node indicates a fault, and
the leaf node indicates an event that may cause a
fault. Different layers are linked by logic gate sym-
bols and the upper layer probability is calculated ac-
cording to the underlying probability. However, the
fault tree cannot analyze the hazards and risks
caused by the fault time, so it can only be used as a
method of some parts in the risk analysis.

(1) Failure Mode Effect and Criticality Analysis
(FMECA). FMECA is a single component failure
mode analysis and hazard analysis tool. Its purpose
is to reduce the possibility of failure and improve
the reliability of system operation [26]. FMECA is a
bottom-up approach that identifies faults in the
form of a discussion and records the results in a
table. The disadvantage of this approach is that
there are too many limitations in a single unit, ig-
noring the connections and commonalities between
the units.
Li et al. Journal of Cloud Computing: Advances, Systems and Applications

(2) Hazard and Operability Study (HAZOP). HAZOP is
a structured inspection method for potential
hazards of the system. It uses structured checks to
determine the abnormal operation of the system
from normal design. And the purpose of this
method is to identify threats. The HAZOP analysis
is conducted in the form of a discussion, and the
analyst uses a variety of analysis techniques to
collect system information into the document as an
input to the analysis. In the analysis process, some
system-related questions are used to form special
guidance words to help improve the comprehen-
siveness of the analysis. This not only ensures the
analysis results are consistent with the characteris-
tics of the system, but also adds extra information.
The analysis results are saved in a table format.

(3) Petri-net. Petri-net is a graphical modeling tool
based on mathematical theory. Petri-net can
automatically control the state of the system by
changing the state of the token in the system to
describe a dynamic complex system. It is com-
monly used in the field of security analysis to
analyze security threats transmitted through the
system.

(4) Analytic Hierarchy Process (AHP). AHP uses a
hierarchical approach to quantify empirical
judgments and form quantitative decision values.
However, this method is subject to human factors,
and there are fluctuations between various
indicators and lack of consistency.

The traditional method lacks comprehensive consid-
erations for security risk technology and management.
A single assessment method cannot objectively and
accurately reflect the security status of complex infor-
mation security system engineering. This comes to
analysis comprehensive security risk assessment
methods. Comprehensive risk assessment methods
have a set of implementation steps and _ theoretical
systems, and their solutions for risk assessment are
more comprehensive than traditional risk assessment
methods. They may contain some traditional analyt-
ical methods. However, in addition to these, they gen-
erally follow certain security standards and also
provide solutions to systemic risks.

(1) CCTA Risk Analysis and Management Method
(CRAMM). CRAMM is a security service
framework system proposed by the British
government. It is an automated qualitative
assessment method, but in order to achieve good
results, experts need to participate in the
assessment. The purpose of this method is to assess
the security of related information systems and

(2020) 9:23 Page 3 of 13

networks. To achieve the goal, the method focuses

on three aspects:

(1) Identify assessment assets.

(2) Identify threats and vulnerabilities and calculate
risks.

(3) Identify and give countermeasures according to
priority.

(2) Operationally Critical Treat, Asset, and
Vulnerability Evaluation (OCTAVE). OCTAVE is a
method developed by Carnegie Mellon University
to define the security risks of assessing information
within a system organization. This approach
provides a new approach to information security for
large organizations. OCTAVE enables organizations
to view security issues from a risk-based perspective
and describe the technology in a commercial per-
spective. OCTAVE Allegro is a new version that
was published in 2007. This version is based on the
two previous versions, OCTAVE Original (1999)
and OCTAVE-S.

OCTAVE Allegro focuses on information assets. One
of the advantages of using OCTAVE Allegro is that it
can be conducted in the form of a seminar. It provides
the required collaborative environment, the necessary
guides, work forms and questionnaires. All of the above-
mentioned content is free. OCTAVE Allegro consists of
four stages and eight steps. The results of each step are
recorded by the worksheet and used as input for the
next step.

(3) Consultative Objective and Bi-functional Risk Ana-
lysis (COBRA). COBRA is a risk analysis method
created by C&A. COBRA aims to provide organiza-
tions with a way to self-assess their own informa-
tion technology without additional consultants.
COBRA follows the guidance of ISO 17799 and its
risk assessment process includes two aspects. One is
COBRA Risk Consultant, and the other one is ISO
Compliance.

COBRA Risk Consultant is a questionnaire-based
computer program that contains a number of standard-
ized questions to gather information about asset types,
vulnerabilities, threats, etc. This approach generates ap-
propriate recommendations and solutions by evaluating
relevant threats. COBRA Risk Consultant is designed
based on self-assessment, which can be used without
relevant knowledge and without expert involvement.
The reports generated by COBRA Risk Consultant are
professional business reports that can be read by security
professionals or non-professionals. ISO Compliance con-
tains standard questions related to the broad categories
specified in the ISO 17799 standard.
Li et al. Journal of Cloud Computing: Advances, Systems and Applications

(4) Control Objectives for Information and related
Technology (COBIT). COBIT is proposed by
ISAKA. It is the most internationally
recognized and most authoritative standard for
security and information technology
management and control. And It has been
developed to COBIT 5.

(5) A Platform for Risk Analysis of Security Critical
Systems (CORAS). CORAS was formally proposed
by Greece, Germany, Norway and the United
Kingdom in 2003. It is a qualitative risk assessment
method and provides a complete set of graphical
language to model threats and risks.

There is no unified evaluation system for security risk
assessment methods. This paper presents a simple as-
sessment framework for comparing the various methods
described above. The framework evaluates the above
methods from the eight aspects: data requirement (DR),
tool support (TS), operability(O), application cost (AC),
application range (AR), method type (MT), policy assur-
ance (PA) and support organization (SO). This helps
relevant organizations to select appropriate security risk
assessment methods based on their needs. Table 1 shows
the comparison results.

Component-based CORAS and petri-net

CORAS is a modeling analysis description method
formed by combining some security analysis technolo-
gies (such as HazOp, FTA, FMEA, etc.) and system de-
velopment technologies (such as UML) [27]. CORAS is
a graphical and model-based method that has the follow-
ing advantages:

(1) CORAS can provide a precise description of the
target system. Its syntax and all related security

(2020) 9:23 Page 4 of 13

(2) The graphical representation of CORAS
information enhances the communication and
interaction of each participant in the analysis;

(3) CORAS facilitates the documentation of risk
assessment assumptions and assessment results.

CORAS
components:

can be divided into three different

(1) The CORAS Risk Modeling Language: This part
includes the graphical grammar, textual grammar of
the CORAS icon and related semantics;

(2) The CORAS Method: This part includes a step-by-
step description of the safety analysis process and a
guide to constructing a CORAS chart;

(3) The CORAS Tool: This part includes tools for
documenting, maintaining, and reporting the results
of risk analysis.

In addition to including descriptions and analytical
methods, the CORAS approach also takes into account
international standards for risk management, such as the
Australian/New Zealand Standard for Risk Management,
AS/NZS 4360:2004, ISO/IEC 17799, ISO/IEC 13335, the
ISO Reference Model for Open Distributed Processing,
and so on.

CORAS has gradually started to develop toward
component-based risk analysis [18]. Component-based
refers to a way of thinking or development rather than a
specific technology. At its core, for complex system ana-
lysis tasks, reusable components should be utilized to re-
duce the workload, rather than analyzing from scratch.
It contains development techniques including syntax,
rules, and implementation guidelines for specifying the
behavior and system architecture of components. This
standardizes the incremental analysis of the system. A
simple example is given below to illustrate how

 

 

 

features are easy to use; component-based CORAS describes and _ analyzes
Table 1 Assessment to the security risk assessment method
Name TS O AC AR MT PA SO
ATA - easy low small Qualitative low -
FTA - easy low small Qualitative low -
FMECA - medium medium small Qualitative low -
HAZOP - easy medium medium Qualitative low -
Petri-net - difficult medium medium Quantitative low -
AHP - easy low medium Comprehensive high -
CRAMM - difficult high wide Quantitative low UK
OCTAVE Y difficult low wide Comprehensive high CMU
COBRA Y medium medium wide Qualitative high C&A
COBIT Y difficult medium wide Qualitative high ISAKA
CORAS Y medium medium wide Comprehensive high EU

 
Li et al. Journal of Cloud Computing: Advances, Systems and Applications

(2020) 9:23 Page 5 of 13

 

 

Received
malicious code

 

 

Fig. 1 CORAS modeling analysis of threat scenarios

 

Security Events. An example of modeling and analysis of
a threat scenario is shown in Fig. 1.

Hackers have grasped the fragile point that the
player can directly play files. By sending tampered
music files, the media player buffer overflow vulner-
ability is used to threaten user-related media assets.
When the receive file operation is invoked, the chan-
nel interface calls the tampered music file from the
interface of the media player. Once the file is played,
it will use a buffer overflow vulnerability to overwrite
the pointer address to point to malicious code, threat-
ening the user’s assets. In the above threat scenarios,
scenarios, risks, and threat assets are defined as indi-
vidual component objects. The description of the en-
tire Security Event is done by connecting the calling
relationships of the interfaces between the objects.
The entire description process is very clear and con-
cise, which helps participants involved in the risk ana-
lysis and evaluation to understand and communicate
the entire event. At the same time, related scenes are
also very convenient for documenting preservation. If
a new threat scenario is created, the entire modeled
part is not necessary to make major changes, so the
reusability of the model is also guaranteed. However,
from the above examples, CORAS can also be found
to have shortcomings such as insufficient formal de-
scription ability, excessive subjectivity, and insufficient
dynamic analysis capability.

Petri-net is a graphical description method based on
mathematical theory. It is a special directed graph con-
sisting of the “place”, “transition” and “connection” rela-
tionship. And it uses Token to describe the state

AK AK

(a) AND gate (b)OR gate
transition transition

Fig. 2 Gate transition symbol

 

 

changes in the graph. The basic Petri-net is defined as
following:

Definition 1 Basic Petri-net is a triple:

PN = (P,T, EF) (1)

Where:

(1) P is a finite set of spaces that represent the state of
the system; T is a finite set of transitions that
represent changes in behavior;

(2)}PUT# ,PNT= ;

 

   
     
  

 

COP modeling based on security requirements.
Give the COP model for each object

 

Analyze the relationship between objects
Construct a message passing sequence
Define the message input and output interface

 

 

Connection object

COP model initialization

   
    

Perform COP analysis

 

 

 

Fig. 3 COP modeling steps
Li et al. Journal of Cloud Computing: Advances, Systems and Applications

(2020) 9:23 Page 6 of 13

 

        
   

Floodlight

 
 
 

OFS,

 
 
 
 

Fig. 4 Experimental edge-cloud environment topology

  

Cloud

 

3 Application layer

Safety

application

 

 

 

(3) FC (Px T) U (Tx P) is a Solitary Sets. It is the
“connection” relationship of Petri-net, connecting

places and transitions;
(4) Dom(F) U Cod(F) =P U T;

Dom(F) = {xlAy: (x, y)eF}, Cod(F)
= {x|Ay : (y,x)eF}

Place sets and transition sets are the basic building
blocks of a petri. Connection relationships are con-
structed from these two sets. Each place represents a
storage location for a resource. Transition is based on
voluntary connection and is governed by connection re-
lationships. Therefore, transition can only be directly re-
lated to the place:

Fc(P x T)u(T x P)

Dom(F) U Cod(F) = Pu T. This means that there are no
resources that do not participate in any “transitions” and
no “transition” that cause resource “connection”.

The Petri-net model unifies graphics and semantics.
Its expression is intuitive and its content structure is
rigorous. It is easy to describe the relationship of system
connection. Petr-net is ideally suited to describe the
characteristics of various real-time, dynamic cyber-
attacks for risk description and analysis.

Combining the advantages of CORAS modeling and
analysis ideas with the Object-oriented Petri-net theory,
this paper proposes a COP (CORAS-based Object-
oriented Petri-net) security event description method in

an edge cloud environment. This method is suitable for
modeling and describing the complexity and dynamics
of network security events.

COP modeling method

Definition 2 COP is a security event description process
that defines it as a triple:

COP = {SP, OG; OF} (2)

where,

(1) SP = {spj, Spo, ..., SP} is a sub-process of the COP
evaluation process, which can be regarded as a spe-
cial place;

(2) OG = {0g}, 089, ..., OS,} is a collection of Outer Gate
Transitions between sub-processes. In order to
comply with the description of COP, this paper ex-
tends the transition T to G. G can be regarded as a
special gate transition, and this transition has the
characteristic of gate. This paper introduces two
different gate transitions, as shown in Fig. 2:

Table 2 Packet transmission information in the experiment

 

 

Number Send Content

Ds1 Edge-host1 sends ICMP packets to Cloud
Ds52 Edge-host2 sends ICMP packets to Cloud
Dei Edge-host3 sends TCP packets to Cloud
De2 Edge-host4 sends TCP packets to Cloud

 
Li et al. Journal of Cloud Computing: Advances, Systems and Applications

Table 3 Attack probability assignment table

(2020) 9:23 Page 7 of 13

 

 

Assignment Identification Threat frequency Frequency Range A;
Very high occur frequently >50% - Ibor 1

4 High Very likely to happen (20 % ~50%) - Ibor 0.5

3 Medium likely to happen (10 % ~20%) - Ibor 0.2

2 Low Less likely to happen (5 % ~10%) - bor 0.1

1 Very low Extremely rare <5% - bor 0.01

 

(3) OF = {of,, ofa, ..., of tis a collection of all Outer
Flows outside the sub-process, corresponding to the
dependencies between the subprocesses.

Definition 3 The COP sub-process sp; is internally de-
fined as a triple:

inner(sp;) = {P,IG; IF} (3)

where,

(1) P= {P1, Po, ...» Py} is a collection of all the places in
the sub-process sp;

(2) IG = {igy, igo, ..., ig,} is a collection of all Inner Gate
Transitions within sub-process sp;

(3) IF = tif, ifo, ..., if} is a collection of Inner Flows
between all the libraries and transitions in sub-
process sp;.

Definition 4 Sub-process sp; internal and external com-
munication is defined as a four-tuple, defined as follows:

outer(sp;) = {IM, OM, OG; OF} (4)

Where,

(1) IM = {im, img, ..., im,} is a collection of all In-
message queues outside of sub-process sp;

(2) OM = {om , omg, ..., om,} is a collection of all Out-
message queues outside of sub-process sp;

(3) The definition of OG = {0g}, 089, ..., og,} and
OF = {of,, Of, ..., of} is defined in Definition 2;

Message passing between objects is triggered by the
transition which is in the connection message.

In the description of modeling using the COP method,
the COP model of each object is given first. Secondly,
the message input and output interface are defined ac-
cording to the connection relationship between the ob-
jects. Then connect the interfaces according to the
connection relationship and initialize the COP model.
Finally, a COP analysis is performed. The COP modeling
steps are shown in Fig. 3.

The COP model initialization algorithm is as follows:

Conversion rules:

(1) Each method in each class is represented by a pair
of places. Given a method M, a token in its input
place indicates that M has been called; a token in
its output place indicates that M has completed
execution.

(2) The state in CORAS is represented by the place in
COP, and the transition in the CORAS state
diagram are represented by the transition in COP.

(3) The relationship between state and transition in
CORAS is represented by the arc between
corresponding place and transition in COP.

(4) Events and actions in CORAS correspond to service
requests, service completion and confirmation of
service completion in COP. A pair of places

Link Bandwidth Occupancy Rate

0 10 20

Fig. 5 Cloud link bandwidth occupancy rate

 
Li et al. Journal of Cloud Computing: Advances, Systems and Applications

(2020) 9:23 Page 8 of 13

 

6000

Host3 ——

5000 Host4 ——

 

4000

3000

2000

1000

 

0—> 10 20 30 40 50

Fig. 6 Edge-host packet transmission frequency

Host Package Send Per Secend

 

 

10 90 100 110 120

rine) S

 

corresponding to the services provided by the class
(ie, methods of the class) have been added in the
conversion of the class in step (1), and the places
corresponding to the requested service must also be
added.

(5) The individual can be used to represent the token.

(6) The combination of place pairs uses the following
rule: When one of two place pairs with the same
name provides services and the other pair requests
services, merge them into a pair of places and
maintain all previous connections (arcs).

The transformation of the CORAS model to the COP
model has changed the deficiencies of traditional
methods. The above rules enable the CORAS model to
fully describe the concurrency, synchronization, and
conflict situations of security events in the edge cloud
system.

Experimental cases and analysis

Different from the distributed management of traditional
network devices, the unified management of the control
layer in the edge cloud network will cause new threats.
DDoS attacks against network controllers is an example
[5]. In order to verify the feasibility and effectiveness
based on COP, this paper uses SDN technology to build
a simulation environment as shown in Fig. 4. The paper
carried out the DoS attack simulation and described the

security events triggered. The device layer includes mul-
tiple Edge-hosts, OpenFlow switches, controllers, and
application servers. The control layer uses Floodlight as
the SDN controller. The application layer runs a security
application. The simulation software is MININET.

Common DOS attacks include ICMP packet attacks
and TCP request attacks. These two attacks achieve the
effect of denial of service attacks by consuming band-
width resources and link resources in the network. The
data packet transmission information in the experiment
is shown in Table 2. After the request, the stream data
that is not matched by the OFS flow table will be pack-
aged and delivered to Floodlight. After the Floodlight
identifies the packet, it passes the packet to the applica-
tion layer security application for processing. The secur-
ity app sends the specified protection policy to
Floodlight. Floodlight will send the corresponding new
flow table and settings to OFS. Finally, the OFS pro-
cesses the packet according to the new command. The
experiment collects the link bandwidth occupancy rate
(Ibor: link bandwidth occupancy rate), the client packet
transmission rate (psps: package send per second), and
the server-side packet reception rate (prps: package re-
ceived per second) as statistical indicators.

The statistical indicator includes the Cloud packet re-
ception frequency prps. This frequency response corre-
sponds to the attack strength and credibility of the
attack. The greater the number of attacks, the more

Host Package Receive Per Secend

Host 1 ——
Host2 —
|! Host3 ——
Host4 ——

 

 

 

09 10 50

Fig. 7 Cloud packet receiving frequency

 

Tiny) s
Li et al. Journal of Cloud Computing: Advances, Systems and Applications

(2020) 9:23 Page 9 of 13

 

Host Package

 

Hostl1 —
Host2 ——
Host3 ——
Host4 ——
rlepsi lon —

 

 

 

Secend

Receive Per

 

 

 

 

 

 

 

 

 

 

0 5 10 20

Fig. 8 Cloud packet receiving frequency fragment

likely the attack is to be a real intrusion. A gate thresh-
old value e, which is dynamically adjusted by the applica-
tion layer security application, can be set as a reference
value for the number of alarms, whereby the probability
A of occurrence of a certain attack can be calculated.

PYPS;
nj = €j
1

 

if (n; < Ej)

otherwise

(5)

For an attack, when the data is less than the set gate
threshold ¢;, the probability value 1; of the attack is rep-
resented by “. When the threshold ¢; is exceeded, the

&j
probability value A; of the attack is considered to be 1.

It is also possible to divide the transmission frequency
prps; into different intervals according to the provisions
of GB20984—2007 as the basis for the attack threat as-
signment. The division between intervals can be divided
into non-equal divisions, as shown in Table 3. In this
way, the probability 41 of an attack occurring is
calculated.

The experiment uses the first attack probability calcu-
lation method as the evaluation basis. First, Edge-host,
sends ICMP packets at a lower frequency. Edge-host3
and Edge-host, send TCP packets at a lower frequency.
Edge-host2 sends ICMP packets at increasing frequency
until it occupies all of the link bandwidth and then drops

Table 4 The possibility of an attack at this moment

 

25
Time/s

to normal. Edge-host, then sends TCP packets with in-
creasing frequency until it occupies all of the link band-
width and then drops to normal. The Cloud link
bandwidth occupancy, Edge-host packet transmission
frequency, and Cloud packet reception frequency in the
experiment are shown in Fig.5, Fig.6 and Fig.7.

It can be seen that as the two DoS attacks progress,
the bandwidth is heavily occupied, normal traffic cannot
be sent, and the connection cannot be established. We
choose the 27th second, as shown in Fig. 8, as the time
point to analyze the experiment result. In the figure, the
red horizontal line is the gate threshold value ¢, and the
red vertical line is the 27th second of the experiment.
Assume that both the ICMP gate threshold ¢; and the 2
of TCP are 40% of the bandwidth occupied by the Cloud
packet.

Table 4 lists the data on the likelihood of an attack oc-
curring at the red vertical dashed line.

Attack scene COP modeling definition
The moment is modeled and analyzed according to the
COP modeling step. The process is as follows:

The moment contains five sub-processes, in which
Edge-host, ~ Edge-host, are recorded as potential attack
initiators as sub-process sp,~sp4. Two different potential
attack behaviors ICMP and TCP belong to two different

 

Number Packet acceptance frequency psps Gate threshold value € Attack possibility A
P51 489 2000 0.244

P52 1507 2000 0.753

Per 502 2000 0.251

Po2 587 2000 0.294

P51 Ps2 total: 1996 total: 3085 Proportion: 0.647
Per Pez total: 1089 Proportion: 0.353

 
Li et al. Journal of Cloud Computing: Advances, Systems and Applications

 

   

 

  

Fig. 9 COP model generated based on attack scenario information

sub-processes sp; and sp,¢. The attacked server is the tar-
get Recorded as sub-process spv.

(1) Initialize the COP network, assign @;

(2) New a sub-process sp}. sp; does not have a library
and transitions that need to be described in detail.
And add sp, to the COP network. Similarly, new a
sub-process sp2~Sp4. SP2~Sp4 does not have a library
and transitions that need to be described in detail.
Spo~Sspa is added to the COP network;

(3) Create a new subprocess sps. The behavior ims,
that initiates the attack within the A sub-process is
taken as the input of sp;.It can be seen from Table
1 that sps includes ps, P52 suspected of initiating an
ICMP (igs;) attack. Since ps1, P52 belong to the
same ICMP attack igs), they conform to the “AND”
relationship. So, add the AND transition igs; to sps.
Finally, the consequences of the attack are taken as
the output oms, of sp; and added to sps. Calculate

 

 

 

Fig. 10 Dynamically scaled COP model

(2020) 9:23

Page 10 of 13

 

 

 

Fig. 11 COP model with attack probability

  

the internal IF of sp;. Add the internal flow rela-
tionship IF to sps. Add sps to the COP network.
Similarly, modeling can get spe and add spe to the
COP network.

(4) It can be seen from Table 2 that sp,;~sp, randomly
initiate attacks can make an affection of spz. So,
there is a logical OR relationship between the attack
behaviors. Add OR gate transitions 0g,, og. and og3
to the COP. Calculate OF based on the relationship
between the elements and add to the COP.

(5) Improve the COP network;

The modeling results are shown in Fig.9:

COP method analysis

In the qualitative description, we want to know the type
of attack, rather than the specific attack details, so we
can compress the sub-process. This kind of sub-flow is
independently scaled. The describing way of the details
like packing up and opening is completed. The descrip-
tion of different refinement levels is realized. The sub-
processes that have completed the analysis at the same
time can be saved independently as the analysis results.
Portions of the same analysis content encountered in

  

 

Fig. 12 COP model with an attack gate threshold of 0.6
Li et al. Journal of Cloud Computing: Advances, Systems and Applications

(2020) 9:23 Page 11 of 13

 

Link Bandwidth Occupancy Rate

Server-before

Server-after

0 10 20 30 40 50

Fig. 13 Cloud link bandwidth usage

 

60 70 80 90 100 110 120

Time/s

 

other analyses can be directly replaced to achieve reuse
of the model.

The qualitative results are shown in Fig.10. It can be
clearly seen that sp,~sp, initiates two different attacks
Sps and spe against sp7. The results of each attack ana-
lysis can be saved separately to implement model reuse.
The attack process can be scaled independently to
achieve a different level of description.

In the quantitative description, the analysis can be
performed based on the connection relationship in
the COP network. Suppose that the risk of an object
being attacked is F. From the definition of COP, it
can be seen that in the case of AND gate transition,
the value of F is determined by the sum of the possi-
bility of initiating attack precondition. In the case of
an OR gate transition, the value of F is determined

by the maximum probability of initiating an attack
precondition. Bring the possibility of potential attack
at this moment in Table 3 to Fig.9. The possibility of
each attack content and attack type is shown in
Fig.11.

According to the definition, the risk value of the pos-
sible attack node sp- is calculated as follows:

F(sp,) = MAX[0.647 - SUM(0.244, 0.753), 0.3 - SUM(0.251, 0.294)|
= MAX(0.997, 0.545]
= 0.997

(6)

The overall risk value of node sp7 is 0.997. In this way,
the risk value of the attacked party can be calculated,
and the dynamic quantitative analysis can be further im-
plemented by modifying the set gate threshold.

Host Package Send Per Secend

 

 

ee

30 40 50

Fig. 14 Edge-host packet transmission frequency

 

 

70

Time/s
Li et al. Journal of Cloud Computing: Advances, Systems and Applications

(2020) 9:23 Page 12 of 13

 

Host Package Receive Per Secend

 

 

 

 

 

 

 

 

0 10 20 30 50

Fig. 15 Cloud packet receiving frequency

Assuming that the probability of attack to be analyzed
exceeds 0.6, the new COP model is shown in Fig.12:

Among them, igs;, og; degenerates into a normal gate
transition. At this time, the risk value of spz is:

F(sp,) = MAX(0.647 - SUM(0.753)| = 0.487 (7)

Once it is detected that the actual risk value of the
relevant asset exceeds the acceptable risk value (assumed
to be 0.5), the application-level security application per-
forms the flow table update according to the set rules.
Then, depending on the magnitude of the risk value, a
new forwarding path can be set to offload, limit or block
certain stream data. In the experiment, if the gate
threshold is exceeded, the forwarding request of the rele-
vant network segment is discarded, and the stream data
is discarded. After setting the rules, the Cloud link band-
width occupancy, Edge-host packet transmission fre-
quency, and Cloud packet reception frequency are
shown in Fig.13, Fig.14, and Fig.15. It can be seen that in
the case where the transmission packet law is unchanged
in the simulation network, the transmission source with
the attack intention is blocked, the link occupancy rate
of the Cloud end is significantly reduced, and the normal
service is guaranteed.

Breendeland G et al. used the EBNF paradigm to de-
scribe CORAS and use the paradigm to calculate the
probability of security risk based on the description re-
sults [28]. However, this method fails to take advantage
of the graphical description of CORAS. And the safety
risk probability calculation method is mainly through
static evaluation by experts, so the evaluation results are
not objective enough. COP inherits CORAS’s graphical
description, reusability and refined description of the ad-
vantages, and uses Object-oriented Petri-net to increase
the advantages of formal description, scalability and dy-
namic verification. At the same time, the data source of
CORAS quantitative analysis is transformed from sub-
jective expert evaluation into objective scanning analysis,

Times

 

 

10

which reduces the human factors in the analysis process
and makes the results more reliable.

Conclusion

This paper combines a model-based static Security Event
modeling description method CORAS and _ Object-
oriented Petri-net, and proposes a COP-based security
risk modeling method. Compared with the existing
model-based methods, the proposed COP model not
only inherits the existing model’s extensibility, reusabil-
ity, and refinement description, but also enhances the
formal description and dynamic analysis capabilities. In
the edge-cloud environment, the COP description of the
entire network in the control domain can be directly
generated based on the control layer information, and its
efficiency is far superior to the topology discovery tech-
nology in the traditional network. The attack simulation
experiment proves that COP can effectively describe the
cloud environment security incidents, and can further
carry out risk strategy response based on the description
results.

Abbreviation
COP: CORAS-based Object-oriented Petri-net

Acknowledgements
We want to thank the authors of the literature cited in this paper for
contributing useful ideas to this study.

Authors’ contributions

Qianmu Li, Xiaochun Yin, Shumei Meng, Yaozong Liu and Zijian Ying have
written this paper and have done the research which supports it. Qianmu Li,
Xiaochun Yin, Shumei Meng has collaborated in the conception, research
and design of the paper. The authors read and approved the final
manuscript.

Authors’ information

Qianmu Li received the BSc and PhD degrees from Nanjing University of
Science and Technology, China, in 2001 and 2005, respectively. He is
currently a full professor with the School of Cyber Science and Engineering,
Nanjing University of Science and Technology, China. His research interests
include information security and data mining. He received the China
Network and Information Security Outstanding Talent Award in 2016, and
Education Ministry Science and Technology Awards in 2012.
Li et al. Journal of Cloud Computing: Advances, Systems and Applications

Xiaochun Yin received the B.S. degree in education and technology from
Qufu Normal University, Qufu, China in 2004, and received the M.S. degree in
education and technology from Nanjing Normal University, Nanjing, China in
2007, and received the Ph.D. from Dongseo University, Korea in 2015. She is
now working as an associate professor in Weifang University of Science
&Technology China. Her research interests include network security, loT
security, authentication protocol and agricultural intelligence systems. She
has published over 20research papers in international journals and
international conferences.

Shunmei Meng received her PhD degree in Department of Computer
Science and Technology from Nanjing University, China, in 2016. Now, she is
an assistant professor of School of Computer Science and Technology,
Nanjing University of Science and Technology, Nanjing, China. She has
published papers in international journals and international conferences such
as TPDS, ICWS, and ICSOC. Her research interests include recommender
systems, service computing, and cloud computing.

Yaozong Liu received the Ph.D. degree from the Nanjing University of
Science and Technology, China, in 2016. He is currently a Lecturer with the
Intelligent Manufacturing Department, Wuyi University, China. His research
interests include data mining and network security.

Zijian Ying received the BSc. degree from Nanjing University of Science and
Technology, China, in 2019. He is now a graduate student at Nanjing
University of Science and Technology. His research interests include data
mining and network security.

Funding

This work was supported in part by the 2019 Industrial Internet Innovation
and Development Project from Ministry of Industry and Information
Technology of China, 2018 Jiangsu Province Major Technical Research
Project “Information Security Simulation System”, Fundamental Research
Funds for the Central Universities (30918012204), Military Common
Information System Equipment Pre-research Special Technology Project
(315075701).

 

Availability of data and materials
Not applicable.

Competing interests
The authors declare that there is no conflict of interest regarding the
publication of this manuscript.

Author details

"School of Cyber Science and Engineering, Nanjing University of Science and
Technology, Nanjing 210094, China. *Facility Horticulture Laboratory of
Universities in Shandong, WeiFang University of Science & Technology,
ShouGuang 262700, China. *Nanjing Liancheng Technology Development
Co., Ltd., Jiangsu Graduate Workstation of Nanjing University of Science and
Technology, Nanjing 210008, China. “Intelligent Manufacturing Department,
Wuyi University, Jiangmen 529020, China. Jiangsu Zhongtian Technology
Co. Ltd., Nantong 226009, China.

Received: 10 February 2020 Accepted: 13 April 2020
Published online: 01 May 2020

References

1. Li Q,Meng S, Wang S, Zhang J, Hou J (2019) CAD:command-level anomaly
detection for vehicle-road collaborative charging network. IEEE Access 7:
34910-34924

2. Zhou J, Hu XS, Ma Y, Sun J, Wei T, Hu S (2019) Improving availability of
multicore real-time systems suffering both permanent and transient faults.
IEEE Transact Comp (TC) 68(12):1785-1801

3. Xu X, Mo R, Dai F, Lin W, Wan S, Dou W (2019) Dynamic resource
provisioning with fault tolerance for data-intensive meteorological
workflows in cloud. IEEE Transact Indust Informatics. https://doi.org/10.1109/
‘THL2019.2959258

4. Li Q, Wang Y, Ziyuan P, Wang S, Zhang W (2019) A time series association
state analysis method in smart internet of electric vehicle charging network
attack. Transp Res Rec 2673:217-228

5. Zhou J, Sun J, Zhou X, Wei T, Chen M, Hu S, Hu XS (2019) Resource
Management for Improving Soft-Error and Lifetime Reliability of real-time

 

20.

22.

23.

24.

25.

26.

2/.

28.

(2020) 9:23 Page 13 of 13

MPSoCs. IEEE Transact Comp-Aided Design Integr Circuits Syst (TCAD)

38(1 2):2215-2228

Li Q, Meng S, Zhang S, Hou J, Qi L (2019) Complex attack linkage decision-
making in edge computing networks. IEEE Access 7:12058-12072

Qi L, Zhang X, Dou W, Hu CG, Yang C, Chen J (2018) A two-stage locality-
sensitive hashing based approach for privacy-preserving Mobile service
recommendation in cross-platform edge environment. Futur Gener Comput
Syst 88:636-643

Liu H, Kou H, Yan C, Qi L (2019) Link prediction in paper citation network to
construct paper correlated graph. EURASIP J Wirel Commun Netw. https://
doi.org/10.1186/s13638-019-1561-7

Liu Y, Wang S, Khan MS, He J (2018) A novel deep hybrid recommender
system based on auto-encoder with neural collaborative filtering. Big Data
Mining Analytics 1(3):211-221

Zhang C, Yang M, Lv J, Yang W (2018) An improved hybrid collaborative
filtering algorithm based on tags and time factor. Big Data Mining Analytics
1(2):128-136

Ramlatchan M, Yang Q, Liu M, Li J, Wang YL (2018) A survey of matrix
completion methods for recommendation systems. Big Data Mining
Analytics 1(4):308-323

Xu X, Liu X, Xu Z, Wang C, Wan S, Yang X (2019) Joint optimization of
resource utilization and load balance with privacy preservation for edge
services in 5G networks. Mobile Netw Appl. https://doi.org/10.1007/s11036-
019-01448-8

Qi L, Zhang X, Dou W, Ni Q (2017) A distributed locality-sensitive hashing
based approach for cloud service recommendation from multi-source data.
IEEE J Selected Areas Commun 35(11):2616-2624

Xu X, Cai Q, Zhang G, Zhang J, Tian W, Zhang X, Liu AX (2018) An incentive
mechanism for crowdsourcing markets with social welfare maximization in cloud-
edge computing. In: Concurrency and computation: practice and experience

Qi L, Dou W, Wang W, Li G, Yu H, Wan S (2018) Dynamic Mobile crowdsourcing
selection for electricity load forecasting. IEEE Access 6:46926-46937

Hong JE, Bae DH (2000) Software modeling and analysis using a hierarchical
object-oriented petri net. Inform Sci Int J 130:131-164

Kong C, Luo G, Tian L, Cao X (2019) Disseminating authorized content via data
analysis in opportunistic social networks. Big Data Mining Analytics 2(1):12-24
Kumar S, Singh M (2019) Big data analytics for healthcare industry: impact,
applications, and tools. Big Data Mining Analytics 2(1):48-57

Zhang Y, Wang K, He Q et al (2019) Covering-based web service quality
prediction via neighborhood-aware matrix factorization. IEEE Trans Serv
Comput. https://doi.org/10.1109/TSC.2019.2891517

Zhang Y, Cui G, Deng S et al (2018) Efficient query of quality correlation for service
composition. IEEE Trans Serv Comput. https//doiorg/10.1109/TSC.2018.2830773

Li Q, Meng S, Zhang S, Wu M, Zhang J, Ahvanooey MT, Aslam MS (2019)
Safety risk monitoring of cyber-physical power systems based on ensemble
learning algorithm. IEEE Access 7:24788-24805

Hou J, Li Q, Meng S, Ni Z, Chen Y, Liu Y (2019) DPRF: a differential privacy
protection random Forest. IEEE Access 7:130707-130720. https://doi.org/10.
1109/ACCESS.2019.2939891
Hou J, Li Q, Cui S et al (2020) Low-cohesion differential privacy protection
for industrial internet. J Supercomput 7:1-23. https://doi.org/10.1007/
$11227-019-03122-y

Hou J, Li Q, Tan R, Meng S, Zhang H, Zhang S (2019) An intrusion tracking
watermarking scheme. IEEE Access 7:141438-141455. https://doi.org/10.
1109/ACCESS.2019.2943493

Li Q, Song Y, Zhang J, Sheng VS (2020) Multiclass imbalanced learning with
one-versus-one decomposition and spectral clustering. Expert Syst Appl
147:113152. https://doi.org/10.1016/j.eswa.2019.113152

Li Q, Hou J, Meng S, Long H (2020) GLIDE: a game theory and data-driven
mimicking linkage intrusion detection for edge computing networks. Complexity
2020:713616018 pages, 2020. https://doi.org/10.1155/2020/7136160

Hou J, LiQ, Chen Y, Meng S, Long H, Sun Z (2019) Intelligent system
security event description method. In: 9th EAI international conference on
cloud computing. Springer, Sydney Dec 4 - Dec 5, 2019

Breendeland G, Dahl HEI, Engan | et al (2007) Using dependent CORAS
diagrams to analyse mutual dependency. In: Critical information
infrastructures security. Springer, Berlin Heidelberg, pp 135-148

 

 

 

Publisher’s Note
Springer Nature remains neutral with regard to jurisdictional claims in
published maps and institutional affiliations.
